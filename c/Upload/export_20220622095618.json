{
    "exports": [
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/ad79d624-af71-42c9-91a6-3c644e67f8f7",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "any"
                            },
                            "name": "mae_response",
                            "description": "mae response to be logged in sso"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "mae_response_type",
                            "description": "Identifies the type of response being logged. \"SHAPE\" and \"RAA\" are valid."
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "mae_ip_address",
                            "description": "mae ip address of the source"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "mae_allow_url",
                            "description": "mae source url"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "mae_login_id",
                            "description": "mae login id (what the user types)"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "mae_user_session_token",
                            "description": "mae mufg user session token"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "mae_raa_transaction_id",
                            "description": "mae transaction id for rsa aa"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "mae_hrt_code",
                            "description": "RAA HRT Code"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "mae_sso_hash_id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "final_attempt",
                            "description": "Was this the user's final chance to enter the right response?"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "4de923c0-9d7b-4acf-84ed-dbaec750a579",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "variables": [
                            {
                                "name": "log_authentication_result_request",
                                "value": {
                                    "type": "expression",
                                    "value": "{}"
                                }
                            }
                        ],
                        "metadata": {
                            "label": "Initialize request variable",
                            "type": "set_variables"
                        },
                        "type": "set_variables"
                    },
                    "type": "action",
                    "child": {
                        "debug_id": "30734801-c67c-4334-a6cf-a6dea1f8293c",
                        "metadata": {},
                        "block": {
                            "debug_id": "6cafd247-9baf-4ee7-885c-f4b6b62821a8",
                            "metadata": {
                                "data_type": "string",
                                "type": "match_case"
                            },
                            "field": {
                                "type": "expression",
                                "value": "mae_response_type"
                            },
                            "otherwise_branch": {
                                "debug_id": "520b1746-da1d-4b7d-9e4b-7ad38845de15",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "metadata": {
                                        "type": "custom_activity_log"
                                    },
                                    "data": {
                                        "type": "expression",
                                        "value": "{response_type: mae_response_type, response: mae_response}"
                                    },
                                    "report_type": {
                                        "type": "expression",
                                        "value": "`ERROR Unexpected Response`"
                                    },
                                    "type": "custom_activity_log"
                                },
                                "type": "action"
                            },
                            "matched_branches": [
                                {
                                    "matcher": {
                                        "metadata": {
                                            "type": "generic_condition",
                                            "matcherId": "ac609f41-ca0d-4a3c-bf72-bf9453561d18"
                                        },
                                        "data_type": "string",
                                        "type": "generic_operation",
                                        "value": {
                                            "type": "expression",
                                            "value": "`SHAPE`"
                                        },
                                        "operation": "=="
                                    },
                                    "child": {
                                        "debug_id": "a2a3f3b8-cd55-4397-9a39-cd7bb7e315ed",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "variables": [
                                                {
                                                    "name": "log_authentication_result_request",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "@customFunctions.mae_api_authscriptfunction_create_shape_lar_request(mae_response, mae_login_id, mae_ip_address, mae_allow_url)"
                                                    }
                                                }
                                            ],
                                            "metadata": {
                                                "notes": "Creates the LogAuthenticationResultRequest from the Shape response",
                                                "label": "Shape LogAuthenticationResultRequest",
                                                "type": "set_variables"
                                            },
                                            "type": "set_variables"
                                        },
                                        "type": "action"
                                    }
                                },
                                {
                                    "matcher": {
                                        "metadata": {
                                            "type": "generic_condition",
                                            "matcherId": "ccee282c-f037-4b4f-bb2c-a7473e333a7c"
                                        },
                                        "data_type": "string",
                                        "type": "generic_operation",
                                        "value": {
                                            "type": "expression",
                                            "value": "`RAA`"
                                        },
                                        "operation": "=="
                                    },
                                    "child": {
                                        "debug_id": "0d4dfb0c-e32b-4c7f-ab82-e9a3ce74f984",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "variables": [
                                                {
                                                    "name": "parsed_response",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "try @customFunctions.mae_api_authscriptfunction_parse_raa_requesttype_actioncode(mae_response,final_attempt) catch (error) => {\"raaRequestType\": \"ERROR\", \"raaActionCode\": \"DENY\", \"errorString\": error}"
                                                    }
                                                }
                                            ],
                                            "metadata": {
                                                "notes": "Parse the RAA response to determine actionCode and requestType",
                                                "label": "Parse RAA Response",
                                                "type": "set_variables"
                                            },
                                            "type": "set_variables"
                                        },
                                        "type": "action",
                                        "child": {
                                            "false_branch": {
                                                "debug_id": "3b5b905e-e784-4c9f-a3d1-9c5efe82dba2",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "metadata": {
                                                        "type": "custom_activity_log"
                                                    },
                                                    "data": {
                                                        "type": "expression",
                                                        "value": "{raa_response: mae_response}"
                                                    },
                                                    "report_type": {
                                                        "type": "expression",
                                                        "value": "`ERROR Unexpected RAA Response`"
                                                    },
                                                    "type": "custom_activity_log"
                                                },
                                                "type": "action"
                                            },
                                            "debug_id": "288113f7-a487-46eb-88f9-ee92a2b5faaf",
                                            "condition": {
                                                "negated": false,
                                                "metadata": {
                                                    "notes": "Response should have a valid request type of ANALYZE or AUTHENTICATE",
                                                    "label": "Does the response have a valid request type?",
                                                    "type": "generic_condition"
                                                },
                                                "field": {
                                                    "type": "expression",
                                                    "value": "parsed_response.raaRequestType == \"ANALYZE\" || parsed_response.raaRequestType == \"AUTHENTICATE\""
                                                },
                                                "data_type": "boolean",
                                                "type": "generic",
                                                "operation": "==",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "true"
                                                }
                                            },
                                            "true_branch": {
                                                "debug_id": "5024cb2f-2f97-4d8e-9259-edaf656bdb7e",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "variables": [
                                                        {
                                                            "name": "log_authentication_result_request",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "parsed_response.raaRequestType == \"ERROR\" \n    ? {}\n    : @customFunctions.mae_api_authscriptfunction_create_raa_lar_request(mae_response, mae_allow_url, parsed_response.raaActionCode, parsed_response.raaRequestType, mae_login_id, mae_hrt_code)"
                                                            }
                                                        }
                                                    ],
                                                    "metadata": {
                                                        "notes": "Creates the LogAuthenticationResultRequest from the RAA response",
                                                        "label": "RAA LogAuthenticationResultRequest",
                                                        "type": "set_variables"
                                                    },
                                                    "type": "set_variables"
                                                },
                                                "type": "action"
                                            },
                                            "type": "condition"
                                        }
                                    }
                                }
                            ],
                            "type": "match_case"
                        },
                        "type": "block",
                        "child": {
                            "debug_id": "b27f4bbe-db9e-48b8-95b0-0b6107026e90",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "log_authentication_result_response",
                                        "value": {
                                            "type": "expression",
                                            "value": "try \n    log_authentication_result_request != {}\n    ? @webrequests.wca_api_webservicefunction_log_authentication_result(mae_sso_hash_id, log_authentication_result_request, mae_raa_transaction_id, mae_user_session_token) \n    : {\"responseCode\": \"9999\", \"responseDescription\": \"Empty RAA request\"}\ncatch (error) => {ERROR: error}"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "notes": "Send the request to log the response in SSO",
                                    "label": "Log the response in SSO",
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "ad883771-fba3-4f69-ac1b-efce872bd35e",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "metadata": {
                                        "type": "auth_pass"
                                    },
                                    "type": "auth_pass"
                                },
                                "type": "action"
                            }
                        }
                    }
                },
                "name": "mae_log_authentication_result_sso_subjourney",
                "id": "ad79d624-af71-42c9-91a6-3c644e67f8f7"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/c0704143-b4f3-4761-84e0-e10c5f7fdf02",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_phone_number_confidence_score_passes",
                "provider_id": "c0704143-b4f3-4761-84e0-e10c5f7fdf02",
                "config": {
                    "return_type": {
                        "type": "boolean"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let response = @customFunctions.mae_api_authscriptfunction_phone_risk_evaluation_confidence_score(phone_number,phone_risk_transaction_id)\nreturn response.phoneRiskResults.confidenceScore >= 80"
                    },
                    "description": "Returns boolean indicating whether the phone number passed in is has a Confidence Score >= 80 from Phone Risk Evaluation",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "phone_number",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "phone_risk_transaction_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/6186f3b5-a685-4d69-b411-efc52ad46033",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "ping_reference_token",
                            "description": "ping reference token"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "hrt_policy_id",
                            "description": "hrt policy id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "platform_type",
                            "description": "string"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "03e785fc-700f-446c-b3e7-079a320dad09",
                    "metadata": {},
                    "block": {
                        "false_branch": {
                            "debug_id": "8b43b159-f951-4ac0-ae82-4cc9a5a60ae0",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "id_generator": {
                                    "type": "uuid"
                                },
                                "requirements": [
                                    {
                                        "req_type": "ttl_seconds",
                                        "value": {
                                            "type": "expression",
                                            "value": "60"
                                        }
                                    },
                                    {
                                        "req_type": "user_id",
                                        "value": {
                                            "type": "expression",
                                            "value": "@policy.user().id"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "notes": "Create cross session message for mobile login",
                                    "label": "xsm for mobile login",
                                    "type": "create_ticket"
                                },
                                "output_variable": "cross_session_message_mobile",
                                "view_requirements": [],
                                "params": [
                                    {
                                        "name": "ping_reference_token",
                                        "value": {
                                            "type": "expression",
                                            "value": "ping_reference_token"
                                        }
                                    },
                                    {
                                        "name": "hrt_policy_id",
                                        "value": {
                                            "type": "expression",
                                            "value": "hrt_policy_id"
                                        }
                                    }
                                ],
                                "type": "create_ticket"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "a4f74632-44ad-4fea-97fd-9bfce7dc3584",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "metadata": {
                                        "notes": "Set oa2_pf_access_token and xsmid",
                                        "label": "Enrich JWT Token",
                                        "type": "custom_token_enrichment"
                                    },
                                    "claims": [
                                        {
                                            "claim": "oa2_pf_access_token",
                                            "value": {
                                                "type": "expression",
                                                "value": "ping_reference_token"
                                            }
                                        },
                                        {
                                            "claim": "xsmid",
                                            "value": {
                                                "type": "expression",
                                                "value": "cross_session_message_mobile"
                                            }
                                        }
                                    ],
                                    "type": "custom_token_enrichment"
                                },
                                "type": "action"
                            }
                        },
                        "debug_id": "3d3fcccc-419e-433c-a19c-a8a44467cd90",
                        "condition": {
                            "negated": false,
                            "metadata": {
                                "label": "Is platform type web?",
                                "type": "generic_condition"
                            },
                            "field": {
                                "type": "expression",
                                "value": "platform_type == \"web\""
                            },
                            "data_type": "boolean",
                            "type": "generic",
                            "operation": "==",
                            "value": {
                                "type": "expression",
                                "value": "true"
                            }
                        },
                        "true_branch": {
                            "debug_id": "f0c7d8f2-58c5-430f-8699-70974034448e",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "id_generator": {
                                    "type": "uuid"
                                },
                                "requirements": [],
                                "metadata": {
                                    "notes": "Create cross session message for web login",
                                    "label": "xsm for web login",
                                    "type": "create_ticket"
                                },
                                "output_variable": "cross_session_message_web",
                                "view_requirements": [],
                                "params": [
                                    {
                                        "name": "user_id",
                                        "value": {
                                            "type": "expression",
                                            "value": "@policy.user().id"
                                        }
                                    },
                                    {
                                        "name": "client_ip",
                                        "value": {
                                            "type": "expression",
                                            "value": "@policy.request().client_ip"
                                        }
                                    },
                                    {
                                        "name": "session_id",
                                        "value": {
                                            "type": "expression",
                                            "value": "@policy.device().session.session_id"
                                        }
                                    }
                                ],
                                "type": "create_ticket"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "9a735690-0fd0-491b-ab45-a05e4deac74a",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "metadata": {
                                        "type": "json_data"
                                    },
                                    "data": {
                                        "type": "expression",
                                        "value": "{\n    \"xsmid\": cross_session_message_web\n}"
                                    },
                                    "type": "json_data"
                                },
                                "type": "action"
                            }
                        },
                        "type": "condition"
                    },
                    "type": "block",
                    "child": {
                        "debug_id": "87b55c60-67c0-4d62-814e-6ec0ae933725",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "metadata": {
                                "type": "auth_pass"
                            },
                            "type": "auth_pass"
                        },
                        "type": "action"
                    }
                },
                "name": "mae_login_cross_session_message_subjourney",
                "id": "6186f3b5-a685-4d69-b411-efc52ad46033"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///local_identities/%7B%22provider_type%22:%22db%22,%22alias%22:%22ssl_mobile_app_key%22,%22type%22:%22local%22,%22version%22:%221%22%7D",
            "constrains": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "category": "localidentity",
            "type": "placeholder"
        },
        {
            "path": "tsasm:///providers/33289b05-e2da-4730-8db4-24a8ed9085f1",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_phone_is_mobile_and_us",
                "provider_id": "33289b05-e2da-4730-8db4-24a8ed9085f1",
                "config": {
                    "return_type": {
                        "type": "boolean"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "phone_info.phoneTypeCode != \"IHM\" && phone_info.phoneTypeCode != \"IWK\" && @customFunctions.mae_api_authscriptfunction_boku_says_phone_is_mobile_and_us(phone_info,phone_risk_transaction_id)"
                    },
                    "description": "Returns boolean indicating whether the phone number passed in is a Mobile number in the US according to info from userphones and Boku evaluate-phone-risk",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "phone_info",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "description": "Phone number info as returned by the userphones API",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "phone_risk_transaction_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/authenticators/password",
            "data": {
                "method": "password",
                "level": 1,
                "provider_config_id": "0017ef27-b6db-4d6b-8af8-fd00b08b52c9",
                "category": "9596",
                "enabled": true
            },
            "category": "authconfig",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/94657a69-7cbc-4586-965e-715038e14c71",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_phone_number_match_score_info_passes",
                "provider_id": "94657a69-7cbc-4586-965e-715038e14c71",
                "config": {
                    "return_type": {
                        "type": "boolean"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let response = @customFunctions.mae_api_authscriptfunction_phone_risk_evaluation_match_score_info(phone_number,first_name,last_name,email_address,address,phone_risk_transaction_id)\nreturn response.phoneRiskResults.confidenceScore >= 80"
                    },
                    "description": "Returns boolean indicating whether the data passed in is has a Confidence Score >= 80 from the Phone Risk Evaluation Match Score Info service",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "phone_number",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "first_name",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "last_name",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "email_address",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "address",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "phone_risk_transaction_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/1f8fba52-b244-41c2-82f4-436c014574c1",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_user_info_parse_name",
                "provider_id": "1f8fba52-b244-41c2-82f4-436c014574c1",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "middleInitial": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "letr       prefix = [\"ABP\", \"ADM\", \"AG\", \"AMB\", \"AMN\", \"BRIGGEN\", \"BRO\", \"CAPT\", \"CARD\", \"CDR\", \"CG\", \"CMSGT\", \"COL\", \"CPL\", \"CPO\", \"CWO\", \"DR\", \"ENS\", \"ESTATEOF\", \"FADM\", \"FR\", \"GMSGT\", \"GSGT\", \"JDG\", \"LCDR\", \"LCOL\", \"LCPL\", \"LT\", \"LTGEN\", \"LTJG\", \"MAJ\", \"MAJGEN\", \"MISS\", \"MOSTREV\", \"MOTHER\", \"MR\", \"MRS\", \"MS\", \"MSGR\", \"MSGT\", \"PFC\", \"PO\", \"PROF\", \"RABBI\", \"RADM\", \"REP\", \"RIGHTREV\", \"SCPO\", \"SEN\", \"SFC\", \"SGT\"],          suffix = [\" ATTY \", \" CLU \", \" CPA \", \" DC \", \" DDS \", \" DD \", \" DVM \", \" ESQ \", \" III \", \" II \", \" IV \", \" IX \", \" JP \", \" JR \", \" LLD \", \" MD \", \" OD \", \" PE \", \" PHD \", \" PHYD \", \" RN \", \" SR \", \" VIII \", \" VII \", \" XII \", \" XI \"],          doubleName = [\" DE \", \" DEL \", \" DELA \", \" DI \", \" DILA \", \" DU \", \" EL \", \" LA \", \" LE \", \" LOS \", \" MAC \", \" MC \", \" SAINT \", \" SAN \", \" ST \", \" VANDEN \", \" VANDER \", \" VER \", \" VON \", \" VONDEN \", \" VONDER \"],          compoundName = [\" DE LA \", \" DI LA \", \" VAN DEN \", \" VAN DER \", \" VON DEN \", \" VON DER \"],          specialCharacters = [\"''\", \"\\\"\", \".\", \",\", \"/\", \"#\", \"@\", \"$\", \"*\", \"&\", \"-\", \"=\", \":\", \";\", \"(\", \")\", \"+\"],          trimmedName = @strings.trim(@strings.upcase(fullName)) + \" \",          delete = (name, index, count) =>          let found = @slice(name, index, count)         return @strings.rereplace(name, found, \"\",false),          pos = (c, name) => @find(name, c),          removeSpecialChars =  @strings.join(@std.filter(@strings.split(trimmedName, \"\"), (x) => !@contains(specialCharacters, x)), \"\"),          removeAnyFormOfSuffixFound = @reduce(suffix, removeSpecialChars, (acc, x) => @strings.rereplace(acc, x, \"\", true)),          reformatCompoundName = @reduce(compoundName, removeAnyFormOfSuffixFound, (acc, x) => @strings.rereplace(acc, x, \" \", true)),          combineDoubleName = @reduce(doubleName, reformatCompoundName, (acc, x) => @strings.rereplace(acc, x, \" \" + @strings.rereplace(x, \" \", \"\", true), true)),          deletePrefix = @reduce(prefix, combineDoubleName, (acc, x) => @strings.rereplace(acc, x + \" \", \"\", true)),          splitName = @strings.split(@strings.trim(deletePrefix), \" \")          return @len(splitName) >= 3 ?      {         firstName: splitName[0],         middleInitial: @std.slice(splitName[1], 0, 1),         lastName: splitName[@len(splitName) - 1]     } :     {         firstName: splitName[0],         middleInitial: null,         lastName: splitName[@len(splitName) - 1]     }"
                    },
                    "description": "Parse the name into firstname, middle initial, and lastname parts",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "fullName",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "The full name from the user_info",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/19528479-64c6-45e5-8d6c-36ab24ffac40",
            "data": {
                "provider_type": "function-web-request",
                "name": "wca_api_webservicefunction_get_challenge_question",
                "provider_id": "19528479-64c6-45e5-8d6c-36ab24ffac40",
                "config": {
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "userId",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "SSO Hash Id of the user",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "rsaTransactionId",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "RSA Transaction Id",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "mufgUserSessionToken",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "MUFG User Session Token",
                            "optional": false
                        }
                    ],
                    "wait_for_response": true,
                    "type": "function-web-request",
                    "web_request": {
                        "fail_on_non_2xx_response": false,
                        "headers": [
                            {
                                "name": "Content-Type",
                                "value": {
                                    "type": "expression",
                                    "value": "`application/json`"
                                }
                            },
                            {
                                "name": "X-MUFG-Request-Uuid",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@std.uuid()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-Request-Ts",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@customFunctions.mae_api_authscriptfunction_request_timestamp()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-Application-Id",
                                "value": {
                                    "type": "expression",
                                    "value": "`SSO`"
                                }
                            },
                            {
                                "name": "X-WCA-RSA-TransactionId",
                                "value": {
                                    "type": "expression",
                                    "value": "`${rsaTransactionId}`"
                                }
                            },
                            {
                                "name": "X-MUFG-User-Session-Token",
                                "value": {
                                    "type": "expression",
                                    "value": "`${mufgUserSessionToken}`"
                                }
                            }
                        ],
                        "response_format": {
                            "type": "json_object"
                        },
                        "ssl_identities": {
                            "trusted_identities": []
                        },
                        "method": "get",
                        "connection_config": {
                            "follow_redirect": false,
                            "request_timeout": 30,
                            "use_cookie_store": false,
                            "connection_timeout": 5
                        },
                        "uri": {
                            "type": "expression",
                            "value": "`https://${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"mae_wca_auth_rest_api\")}/ssoapi/mae/user-security/v1/iam/users/${userId}/active-question`"
                        },
                        "authentication": {
                            "credentials_ref": {
                                "provider_type": "db",
                                "alias": "mae_wca_api_svc_wamae03",
                                "type": "credentials"
                            },
                            "type": "basic"
                        },
                        "logging_config": {
                            "outgoing_requests_config": "info",
                            "ok_response_config": "info",
                            "failed_response_config": "warning"
                        }
                    }
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/4ee5620a-8c1a-4edc-a31d-07381eca9980",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "debug"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "sso_hash_id",
                            "description": "SSO hash Id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "hrt_policy_id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "rsa_id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "raa_device_fingerprint"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "scq_question_registered"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "allow_url"
                        },
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactionData": {
                                            "type": "object",
                                            "properties": {
                                                "amount": {
                                                    "type": "object",
                                                    "properties": {
                                                        "amount": {
                                                            "type": "string"
                                                        },
                                                        "currency": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "otherAccountData": {
                                                    "type": "object",
                                                    "properties": {
                                                        "accountType": {
                                                            "type": "string"
                                                        },
                                                        "accountNumberIntlFormat": {
                                                            "type": "object",
                                                            "properties": {
                                                                "format": {
                                                                    "type": "string"
                                                                },
                                                                "accountNumber": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "accountNumber": {
                                                            "type": "string"
                                                        },
                                                        "accountOwnershipType": {
                                                            "type": "string"
                                                        },
                                                        "routingCode": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "myAccountData": {
                                                    "type": "object",
                                                    "properties": {
                                                        "accountType": {
                                                            "type": "string"
                                                        },
                                                        "accountNumber": {
                                                            "type": "string"
                                                        },
                                                        "accountOwnershipType": {
                                                            "type": "string"
                                                        },
                                                        "routingCode": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "clientDefinedAttributeList": {
                                            "type": "object",
                                            "properties": {
                                                "fact": {
                                                    "type": "object",
                                                    "properties": {
                                                        "fact": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "dataType": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "newUserData": {
                                            "type": "object",
                                            "properties": {
                                                "userAddress": {
                                                    "type": "object",
                                                    "properties": {
                                                        "country": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "addressLine1": {
                                                            "type": "string"
                                                        },
                                                        "addressLine2": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": "string"
                                                        },
                                                        "region": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "userTelephones": {
                                                    "type": "object",
                                                    "properties": {
                                                        "contactList": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "areaCode": {
                                                                        "type": "string"
                                                                    },
                                                                    "phoneType": {
                                                                        "type": "string"
                                                                    },
                                                                    "phoneNumber": {
                                                                        "type": "string"
                                                                    },
                                                                    "label": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "rsa_additional_data_event",
                            "description": "RSA data enrichment additional data event"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "ea56ab07-2d25-4d97-adb6-5714ec697b76",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "variables": [
                            {
                                "name": "is_login_flow",
                                "value": {
                                    "type": "expression",
                                    "value": "(allow_url == \"/m-api/http/sec/auth/post-login-v3\") ? true : false"
                                }
                            }
                        ],
                        "metadata": {
                            "type": "set_variables"
                        },
                        "type": "set_variables"
                    },
                    "type": "action",
                    "child": {
                        "debug_id": "a3315cbb-642a-42ce-91cb-b0d47fb86461",
                        "metadata": {
                            "notes": "A10-output-sub-params",
                            "label": "Debug output (A10)"
                        },
                        "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                        "frame_config": {
                            "params": [
                                {
                                    "name": "debug",
                                    "value": {
                                        "type": "expression",
                                        "value": "debug"
                                    }
                                },
                                {
                                    "name": "text",
                                    "value": {
                                        "type": "expression",
                                        "value": "`tab_hrt_analyze_subjourney\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\nrsa_id = ${rsa_id}\n\nhrt_policy_id = ${hrt_policy_id}\nallow_url = ${allow_url}\n------------------------------------------------------------------\nis_login_flow = ${is_login_flow}\n------------------------------------------------------------------\n-> MAP to RSA Event Id\n------------------------------------------------------------------\nReady to invoke \"mae_hrt_raa_analyze_subjourney\" sub-journey\n`"
                                    }
                                },
                                {
                                    "name": "heading",
                                    "value": {
                                        "type": "expression",
                                        "value": "\"A10-output-sub-params\""
                                    }
                                },
                                {
                                    "name": "comment",
                                    "value": {
                                        "type": "expression",
                                        "value": "`Sample Output\n------------------------------------------------------------------\n\n------------------------------------------------------------------\n`"
                                    }
                                }
                            ]
                        },
                        "type": "procedure",
                        "child": {
                            "debug_id": "ed05a735-23d7-47dd-bdb0-5b05309a1c75",
                            "metadata": {
                                "notes": null
                            },
                            "procedure_id": "12435840-4948-4280-8783-e2af122a125a",
                            "frame_config": {
                                "params": [
                                    {
                                        "name": "rsa_key",
                                        "value": {
                                            "type": "expression",
                                            "value": "rsa_id"
                                        }
                                    },
                                    {
                                        "name": "device_print",
                                        "value": {
                                            "type": "expression",
                                            "value": "raa_device_fingerprint"
                                        }
                                    },
                                    {
                                        "name": "allow_url",
                                        "value": {
                                            "type": "expression",
                                            "value": "allow_url"
                                        }
                                    },
                                    {
                                        "name": "user_session_token",
                                        "value": {
                                            "type": "expression",
                                            "value": "@policy.device().session.session_id"
                                        }
                                    },
                                    {
                                        "name": "hrt_policy_id",
                                        "value": {
                                            "type": "expression",
                                            "value": "hrt_policy_id"
                                        }
                                    },
                                    {
                                        "name": "username",
                                        "value": {
                                            "type": "expression",
                                            "value": "\"\" + @policy.user().id"
                                        }
                                    },
                                    {
                                        "name": "additional_event_data",
                                        "value": {
                                            "type": "expression",
                                            "value": "rsa_additional_data_event"
                                        }
                                    },
                                    {
                                        "name": "sso_hash_id",
                                        "value": {
                                            "type": "expression",
                                            "value": "sso_hash_id"
                                        }
                                    }
                                ]
                            },
                            "type": "procedure",
                            "child": {
                                "debug_id": "977aae3b-ae61-463a-994e-1fd32611b245",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "actionCode",
                                            "value": {
                                                "type": "expression",
                                                "value": "try mae_hrt_raa_analyze_subjourney_output.actionCode catch \"\""
                                            }
                                        },
                                        {
                                            "name": "challengeType",
                                            "value": {
                                                "type": "expression",
                                                "value": "try mae_hrt_raa_analyze_subjourney_output.challengeType catch \"\""
                                            }
                                        },
                                        {
                                            "name": "transactionId",
                                            "value": {
                                                "type": "expression",
                                                "value": "try mae_hrt_raa_analyze_subjourney_output.transactionId catch \"\""
                                            }
                                        },
                                        {
                                            "name": "requestId",
                                            "value": {
                                                "type": "expression",
                                                "value": "try mae_hrt_raa_analyze_subjourney_output.requestId catch \"\""
                                            }
                                        },
                                        {
                                            "name": "riskScore",
                                            "value": {
                                                "type": "expression",
                                                "value": "try mae_hrt_raa_analyze_subjourney_output.raaAnalyzeResponse.riskResult.riskScore catch \"\""
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "2e8803a6-3970-470a-b9ef-11cb5d522f97",
                                    "metadata": {
                                        "notes": "A20-post-mae_hrt_raa_analyze_subjourney",
                                        "label": "Debug output (A20)"
                                    },
                                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                    "frame_config": {
                                        "params": [
                                            {
                                                "name": "debug",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "debug"
                                                }
                                            },
                                            {
                                                "name": "text",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "`tab_hrt_analyze_subjourney\n------------------------------------------------------------------\nPost 'mae_hrt_raa_analyze_subjourney_output' execution\n------------------------------------------------------------------\nusername=${@policy.user().id}\nactionCode=${actionCode}\nchallengeType=${challengeType}\ntransactionId=${transactionId}\nrequestId=${requestId}\nriskScore=${riskScore}\n------------------------------------------------------------------\nmae_hrt_raa_analyze_subjourney_output=\n  ${mae_hrt_raa_analyze_subjourney_output}\n `"
                                                }
                                            },
                                            {
                                                "name": "heading",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "\"A20-post-mae_hrt_raa_analyze_subjourney\""
                                                }
                                            },
                                            {
                                                "name": "comment",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "`Sample Output\n------------------------------------------------------------------\nSuccess\n\nSCQ Challenge\n{\n    \"raaAnalyzeResponse\": {\n        \"identificationData\": {\n            \"userStatus\": \"UNLOCKED\",\n            \"transactionId\": \"TRX_work-manager-task-51-8107934116531934118\"\n        },\n        \"messageHeader\": {\n            \"requestId\": \"d8391d9b-526f-446f-aafd-4176024bfde9\",\n            \"requestType\": \"ANALYZE\",\n            \"timeStamp\": \"2021-12-06T20:11:31.080Z\",\n            \"version\": \"6.5\"\n        },\n        \"success\": true,\n        \"riskResult\": {\n            \"triggeredRule\": {\n                \"ruleName\": \"TEST Challenge all HRT\",\n                \"actionType\": \"STRICT\",\n                \"actionCode\": \"REDIRECT_CHALLENGE\",\n                \"ruleId\": \"TEST Challenge all HRT\",\n                \"actionName\": \"REDIRECT_AUTHENTICATE\"\n            },\n            \"riskScore\": \"94\"\n        },\n        \"statusHeader\": {\n            \"statusCode\": \"200\"\n        },\n        \"collectableCredentialList\": {\n            \"collectableCredential\": [\n                {\n                    \"collectableCredential\": {\n                        \"credentialType\": \"QUESTION\"\n                    }\n                }\n            ]\n        },\n        \"statusCode\": 200\n    },\n    \"actionCode\": \"CHALLENGE\",\n    \"challengeType\": \"QUESTION\",\n    \"transactionId\": \"TRX_work-manager-task-51-8107934116531934118\"\n}\nFailure\n\n------------------------------------------------------------------\n`"
                                                }
                                            }
                                        ]
                                    },
                                    "type": "procedure",
                                    "child": {
                                        "debug_id": "142f0135-4096-4905-8641-b10d9dd199ed",
                                        "metadata": {
                                            "label": "HRT Analyze with actionCode"
                                        },
                                        "block": {
                                            "debug_id": "5949730c-3955-457c-a093-cf6f8c735b31",
                                            "metadata": {
                                                "data_type": "string",
                                                "type": "match_case"
                                            },
                                            "field": {
                                                "type": "expression",
                                                "value": "actionCode"
                                            },
                                            "otherwise_branch": {
                                                "debug_id": "24746402-82d9-4686-b493-cb2ed31b215a",
                                                "metadata": {
                                                    "notes": "A30-HRT-Error (ERROR)",
                                                    "label": "Debug output (A30)"
                                                },
                                                "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                "frame_config": {
                                                    "params": [
                                                        {
                                                            "name": "debug",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "debug"
                                                            }
                                                        },
                                                        {
                                                            "name": "text",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "`HRT ERROR\n------------------------------------------\nactionCode=${actionCode}\nchallengeType=${challengeType}\ntransactionId=${transactionId}\nrequestId=${requestId}\nriskScore=${riskScore}\n`"
                                                            }
                                                        },
                                                        {
                                                            "name": "heading",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "\"A30-HRT-Error\""
                                                            }
                                                        },
                                                        {
                                                            "name": "comment",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "``"
                                                            }
                                                        }
                                                    ]
                                                },
                                                "type": "procedure",
                                                "child": {
                                                    "debug_id": "47d464fd-77bd-45a3-947d-2e92db91f9ac",
                                                    "metadata": {},
                                                    "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                    "frame_config": {
                                                        "params": [
                                                            {
                                                                "name": "is_login_flow",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "is_login_flow"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type": "procedure",
                                                    "child": {
                                                        "debug_id": "3792bf0d-f942-4ec4-bb64-848ef3d4208b",
                                                        "escapes": {
                                                            "escapes": []
                                                        },
                                                        "strings": [],
                                                        "action": {
                                                            "clear_session": false,
                                                            "metadata": {
                                                                "type": "reject"
                                                            },
                                                            "type": "reject"
                                                        },
                                                        "type": "action"
                                                    }
                                                }
                                            },
                                            "matched_branches": [
                                                {
                                                    "matcher": {
                                                        "metadata": {
                                                            "type": "generic_condition",
                                                            "matcherId": "e19e6863-18a0-462e-abe1-640ed3e77685"
                                                        },
                                                        "data_type": "string",
                                                        "type": "generic_operation",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"ALLOW\""
                                                        },
                                                        "operation": "=="
                                                    },
                                                    "child": {
                                                        "debug_id": "9567c651-6bec-4077-ab8d-7e2fb51988a4",
                                                        "metadata": {
                                                            "notes": "A30-HRT-Allow (ALLOW)",
                                                            "label": "Debug output (A30)"
                                                        },
                                                        "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                        "frame_config": {
                                                            "params": [
                                                                {
                                                                    "name": "debug",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "debug"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "text",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "`HRT Analyze ActionCode=ALLOW\n------------------------------------------\nactionCode = ${actionCode}\nchallengeType = ${challengeType}\ntransactionId = ${transactionId}\nrequestId = ${requestId}\nriskScore = ${riskScore}\n`"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "heading",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "\"A30-HRT-Allow\""
                                                                    }
                                                                },
                                                                {
                                                                    "name": "comment",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "``"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "procedure"
                                                    }
                                                },
                                                {
                                                    "matcher": {
                                                        "metadata": {
                                                            "type": "generic_condition",
                                                            "matcherId": "e4c0138d-3ff7-4fb7-bfbe-7cf3f76cbf2f"
                                                        },
                                                        "data_type": "string",
                                                        "type": "generic_operation",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"DENY\""
                                                        },
                                                        "operation": "=="
                                                    },
                                                    "child": {
                                                        "debug_id": "c5750273-156d-4fc4-95ff-e2a4c087168f",
                                                        "metadata": {
                                                            "notes": "A30-HRT-Deny (DENY)",
                                                            "label": "Debug output (A30)"
                                                        },
                                                        "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                        "frame_config": {
                                                            "params": [
                                                                {
                                                                    "name": "debug",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "debug"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "text",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "`HRT Deny\n------------------------------------------\nactionCode = ${actionCode}\nchallengeType = ${challengeType}\ntransactionId = ${transactionId}\nrequestId = ${requestId}\nriskScore = ${riskScore}\n`"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "heading",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "\"A30-HRT-Deny\""
                                                                    }
                                                                },
                                                                {
                                                                    "name": "comment",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "``"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "procedure",
                                                        "child": {
                                                            "debug_id": "35616007-c40b-48d2-844b-9c88f09856b4",
                                                            "metadata": {},
                                                            "procedure_id": "e22d3218-2be2-47fd-b0cb-9689301b363c",
                                                            "frame_config": {
                                                                "params": [
                                                                    {
                                                                        "name": "is_login_flow",
                                                                        "value": {
                                                                            "type": "expression",
                                                                            "value": "is_login_flow"
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "type": "procedure",
                                                            "child": {
                                                                "debug_id": "a6ef4af5-2a3b-4586-9d36-d0777542ede9",
                                                                "escapes": {
                                                                    "escapes": []
                                                                },
                                                                "strings": [],
                                                                "action": {
                                                                    "clear_session": false,
                                                                    "metadata": {
                                                                        "type": "reject"
                                                                    },
                                                                    "type": "reject"
                                                                },
                                                                "type": "action"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "matcher": {
                                                        "metadata": {
                                                            "type": "generic_condition",
                                                            "matcherId": "2b5234df-fab6-4536-af2f-b38b5314f2aa"
                                                        },
                                                        "data_type": "string",
                                                        "type": "generic_operation",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"CHALLENGE\""
                                                        },
                                                        "operation": "=="
                                                    },
                                                    "child": {
                                                        "debug_id": "dd8713d2-433c-4d89-a0ce-3d5b53e4a769",
                                                        "metadata": {
                                                            "label": "HRT Challenge w/ challengeType"
                                                        },
                                                        "block": {
                                                            "debug_id": "bd1f0c16-6e8a-4a7a-a1b9-826a84578e97",
                                                            "metadata": {},
                                                            "block": {
                                                                "debug_id": "c48390b1-b753-4221-b2cb-f317971bbd11",
                                                                "escapes": {
                                                                    "escapes": []
                                                                },
                                                                "strings": [],
                                                                "action": {
                                                                    "variables": [
                                                                        {
                                                                            "name": "is_otp_pilot_user",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "@namedContainers.namedStringListLookup(\"tab_mobile_app_otp_pilot_user_list\", @policy.user().id, \"\") == \"\" ? false : true"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "metadata": {
                                                                        "notes": "Typed List: tab_mobile_app_otp_pilot_user_list",
                                                                        "label": "Debug base on User Id",
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "set_variables"
                                                                },
                                                                "type": "action",
                                                                "child": {
                                                                    "false_branch": {
                                                                        "debug_id": "3df89712-49fe-4d01-8da7-401456665b9f",
                                                                        "metadata": {
                                                                            "data_type": "string",
                                                                            "type": "match_case"
                                                                        },
                                                                        "field": {
                                                                            "type": "expression",
                                                                            "value": "challengeType"
                                                                        },
                                                                        "otherwise_branch": {
                                                                            "debug_id": "893ab8a3-766e-4a98-a433-c59cd21cf4f0",
                                                                            "metadata": {
                                                                                "notes": "A99-HRT-Challenge-Otherwise",
                                                                                "label": "Debug output (A99)"
                                                                            },
                                                                            "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                            "frame_config": {
                                                                                "params": [
                                                                                    {
                                                                                        "name": "debug",
                                                                                        "value": {
                                                                                            "type": "expression",
                                                                                            "value": "debug"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "name": "text",
                                                                                        "value": {
                                                                                            "type": "expression",
                                                                                            "value": "\"HRT Challenge Otherwise\""
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "name": "heading",
                                                                                        "value": {
                                                                                            "type": "expression",
                                                                                            "value": "\"A99-HRT-Challenge-Otherwise\""
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "name": "comment",
                                                                                        "value": {
                                                                                            "type": "expression",
                                                                                            "value": "\"\""
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type": "procedure",
                                                                            "child": {
                                                                                "debug_id": "d03d88fb-13bf-4fda-9547-3601f1067b08",
                                                                                "metadata": {},
                                                                                "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                                                "frame_config": {
                                                                                    "params": [
                                                                                        {
                                                                                            "name": "is_login_flow",
                                                                                            "value": {
                                                                                                "type": "expression",
                                                                                                "value": "is_login_flow"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "type": "procedure"
                                                                            }
                                                                        },
                                                                        "matched_branches": [
                                                                            {
                                                                                "matcher": {
                                                                                    "metadata": {
                                                                                        "type": "generic_condition",
                                                                                        "matcherId": "38ab808f-fbd9-4597-b6c2-276dd2861ae5"
                                                                                    },
                                                                                    "data_type": "string",
                                                                                    "type": "generic_operation",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "\"QUESTION\""
                                                                                    },
                                                                                    "operation": "=="
                                                                                },
                                                                                "child": {
                                                                                    "debug_id": "69dc7b79-e003-416e-a642-ee9acb584941",
                                                                                    "metadata": {
                                                                                        "notes": "A40-Challenge-Question",
                                                                                        "label": "Debug output (A40)"
                                                                                    },
                                                                                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                    "frame_config": {
                                                                                        "params": [
                                                                                            {
                                                                                                "name": "debug",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "debug"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "name": "text",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "`tab_hrt_analyze_subjourney\n------------------------------------------------------------------\nchallengeType = ${challengeType}\n `"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "name": "heading",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "\"A40-Challenge-Question\""
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "name": "comment",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "`Sample Output\n------------------------------------------------------------------\n\n\n------------------------------------------------------------------\n`"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "type": "procedure",
                                                                                    "child": {
                                                                                        "false_branch": {
                                                                                            "debug_id": "fe7d1562-c03d-4cd0-bb7a-21411323b780",
                                                                                            "metadata": {
                                                                                                "notes": " Valid scenario - When challenge question has been reset.",
                                                                                                "label": "Debug output (CHALLENGE)"
                                                                                            },
                                                                                            "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                            "frame_config": {
                                                                                                "params": [
                                                                                                    {
                                                                                                        "name": "debug",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "debug"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "text",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "`Challenge Required - No questions registered\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\nscq_question_registered=${scq_question_registered}\n------------------------------------------------------------------\n`"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "heading",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "`Challenge Required`"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "comment",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "``"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "type": "procedure"
                                                                                        },
                                                                                        "debug_id": "7d73592a-00e0-4767-ad19-05ead0b36f6a",
                                                                                        "condition": {
                                                                                            "negated": false,
                                                                                            "metadata": {
                                                                                                "type": "generic_condition"
                                                                                            },
                                                                                            "field": {
                                                                                                "type": "expression",
                                                                                                "value": "scq_question_registered"
                                                                                            },
                                                                                            "data_type": "boolean",
                                                                                            "type": "generic",
                                                                                            "operation": "==",
                                                                                            "value": {
                                                                                                "type": "expression",
                                                                                                "value": "true"
                                                                                            }
                                                                                        },
                                                                                        "true_branch": {
                                                                                            "debug_id": "ef5ee449-b5ab-482f-a136-42c1da6af4b2",
                                                                                            "metadata": {
                                                                                                "notes": null,
                                                                                                "label": "HRT Challenge with SCQ"
                                                                                            },
                                                                                            "block": {
                                                                                                "debug_id": "9c27c450-91d8-47d6-bce4-44df19ecaa3e",
                                                                                                "metadata": {
                                                                                                    "notes": " Q10-Challenge-SCQ",
                                                                                                    "label": "Debug output (CHALLENGE)"
                                                                                                },
                                                                                                "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                "frame_config": {
                                                                                                    "params": [
                                                                                                        {
                                                                                                            "name": "debug",
                                                                                                            "value": {
                                                                                                                "type": "expression",
                                                                                                                "value": "debug"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "name": "text",
                                                                                                            "value": {
                                                                                                                "type": "expression",
                                                                                                                "value": "`Challenge Required\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\n------------------------------------------------------------------\n\nInvoking \"mae_hrt_raa_authenticate_subjourney\"\n`"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "name": "heading",
                                                                                                            "value": {
                                                                                                                "type": "expression",
                                                                                                                "value": "\"Q10-Challenge-SCQ\""
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "name": "comment",
                                                                                                            "value": {
                                                                                                                "type": "expression",
                                                                                                                "value": "``"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "type": "procedure",
                                                                                                "child": {
                                                                                                    "debug_id": "71d56919-0671-4f76-ac5a-6ccf570e5b07",
                                                                                                    "metadata": {},
                                                                                                    "procedure_id": "7e48d76c-bc6d-4726-8879-56e8091f9945",
                                                                                                    "frame_config": {
                                                                                                        "params": [
                                                                                                            {
                                                                                                                "name": "rsa_transaction_id",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "\"\" + transactionId"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "rsa_request_id",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "\"\" + requestId"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "rsa_key",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "rsa_id"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "user_session_token",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "@policy.device().session.session_id"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "sso_hash_id",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "sso_hash_id"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "allow_url",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "allow_url"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "device_print",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "raa_device_fingerprint"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "hrt_policy_id",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "hrt_policy_id"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "max_failed_attempts",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "3"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "ip_address",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "\"\" + @policy.request().client_ip"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "login_id",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "\"\" + @policy.user().id"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "rsa_risk_score",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "\"\" + riskScore"
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "type": "procedure",
                                                                                                    "child": {
                                                                                                        "debug_id": "c1f1c3a4-3729-4556-ac7b-fc4603505c5e",
                                                                                                        "escapes": {
                                                                                                            "escapes": []
                                                                                                        },
                                                                                                        "strings": [],
                                                                                                        "action": {
                                                                                                            "variables": [
                                                                                                                {
                                                                                                                    "name": "authenticateActionCode",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "try mae_hrt_raa_authenticate_subjourney_output.actionCode catch \"\""
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "name": "lockUser",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "try mae_hrt_raa_authenticate_subjourney_output.lockUser catch \"\""
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "name": "subJourneyStatus",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "try mae_hrt_raa_authenticate_subjourney_output.subJourneyStatus catch \"\""
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "name": "subJourneyError",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "try mae_hrt_raa_authenticate_subjourney_output.subJourneyError catch \"\""
                                                                                                                    }
                                                                                                                }
                                                                                                            ],
                                                                                                            "metadata": {
                                                                                                                "type": "set_variables"
                                                                                                            },
                                                                                                            "type": "set_variables"
                                                                                                        },
                                                                                                        "type": "action",
                                                                                                        "child": {
                                                                                                            "debug_id": "ca6b6836-a47c-4ae6-9e0c-432c5cc7f4b7",
                                                                                                            "metadata": {
                                                                                                                "notes": " Q20-Challenge-SCQ (authenticate subjourney output)",
                                                                                                                "label": "Debug output"
                                                                                                            },
                                                                                                            "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                            "frame_config": {
                                                                                                                "params": [
                                                                                                                    {
                                                                                                                        "name": "debug",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "debug"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "text",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "`MAE HRT Authenticate Subjourney Output\n-----------------------------------------\nauthenticateActionCode = ${authenticateActionCode}\nlockUser = ${lockUser}\nsubJourneyStatus = ${subJourneyStatus}\nsubJourneyError = ${subJourneyError}\n----------------------------------------------\nmae_hrt_raa_authenticate_subjourney_output =\n  ${mae_hrt_raa_authenticate_subjourney_output}\n`"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "heading",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "\"Q20-Challenge-SCQ\""
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "comment",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "`\n\nALLOW\n\n\nDENY\n{\"actionCode\":\"DENY\",\"lockUser\":false,\"subJourneyStatus\":\"Completed with errors\",\"subJourneyError\":{\"isValid\":false,\"shouldBlock\":false,\"faultString\":\"User answered incorrectly\"}}\n{\"actionCode\":\"DENY\",\"lockUser\":true,\"subJourneyStatus\":\"Completed with errors\",\"subJourneyError\":{\"isValid\":false,\"shouldBlock\":true,\"faultString\":\"User answered incorrectly\"}}\n\nNO CHALLENGE QUESTION REGISTERED\n{\"actionCode\":\"ERROR\",\"lockUser\":false}\n\n\n\n`"
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "type": "procedure",
                                                                                                            "child": {
                                                                                                                "debug_id": "ef4e6b03-c454-4cfc-ae14-feee82adb559",
                                                                                                                "metadata": {
                                                                                                                    "data_type": "string",
                                                                                                                    "type": "match_case"
                                                                                                                },
                                                                                                                "field": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "authenticateActionCode"
                                                                                                                },
                                                                                                                "otherwise_branch": {
                                                                                                                    "debug_id": "c85966e6-6c1b-4278-a58f-a00b15f924eb",
                                                                                                                    "metadata": {},
                                                                                                                    "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                                                                                    "frame_config": {
                                                                                                                        "params": [
                                                                                                                            {
                                                                                                                                "name": "is_login_flow",
                                                                                                                                "value": {
                                                                                                                                    "type": "expression",
                                                                                                                                    "value": "is_login_flow"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    "type": "procedure"
                                                                                                                },
                                                                                                                "matched_branches": [
                                                                                                                    {
                                                                                                                        "matcher": {
                                                                                                                            "metadata": {
                                                                                                                                "type": "generic_condition",
                                                                                                                                "matcherId": "a31ca80f-af0a-4ae6-afac-09343b2c16a7"
                                                                                                                            },
                                                                                                                            "data_type": "string",
                                                                                                                            "type": "generic_operation",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "\"ALLOW\""
                                                                                                                            },
                                                                                                                            "operation": "=="
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "matcher": {
                                                                                                                            "metadata": {
                                                                                                                                "type": "generic_condition",
                                                                                                                                "matcherId": "025dd0d4-e4bc-4a88-a343-dca800b03c87"
                                                                                                                            },
                                                                                                                            "data_type": "string",
                                                                                                                            "type": "generic_operation",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "\"DENY\""
                                                                                                                            },
                                                                                                                            "operation": "=="
                                                                                                                        },
                                                                                                                        "child": {
                                                                                                                            "debug_id": "2b84171c-6eff-482e-b711-0b2cb6298ff1",
                                                                                                                            "metadata": {},
                                                                                                                            "procedure_id": "e22d3218-2be2-47fd-b0cb-9689301b363c",
                                                                                                                            "frame_config": {
                                                                                                                                "params": [
                                                                                                                                    {
                                                                                                                                        "name": "is_login_flow",
                                                                                                                                        "value": {
                                                                                                                                            "type": "expression",
                                                                                                                                            "value": "is_login_flow"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            "type": "procedure"
                                                                                                                        }
                                                                                                                    }
                                                                                                                ],
                                                                                                                "type": "match_case"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "type": "block"
                                                                                        },
                                                                                        "type": "condition"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "matcher": {
                                                                                    "metadata": {
                                                                                        "type": "generic_condition",
                                                                                        "matcherId": "14fe6b64-908a-4fec-9841-607f29dbd3d9"
                                                                                    },
                                                                                    "data_type": "string",
                                                                                    "type": "generic_operation",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "\"OOBPHONE\""
                                                                                    },
                                                                                    "operation": "=="
                                                                                },
                                                                                "child": {
                                                                                    "debug_id": "01377dc3-3933-4312-9fa0-a19e15f955ee",
                                                                                    "metadata": {
                                                                                        "notes": "Q200-Challenge-OOBPhone",
                                                                                        "label": "Debug output (Q200)"
                                                                                    },
                                                                                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                    "frame_config": {
                                                                                        "params": [
                                                                                            {
                                                                                                "name": "debug",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "debug"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "name": "text",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "`tab_hrt_analyze_subjourney\n------------------------------------------------------------------\nchallengeType = ${challengeType}\n `"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "name": "heading",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "\"Q200-Challenge-OOBPhone\""
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "name": "comment",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "`Sample Output\n------------------------------------------------------------------\n\n\n------------------------------------------------------------------\n`"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "type": "procedure",
                                                                                    "child": {
                                                                                        "debug_id": "5cce5652-0cd1-4a8f-a5d1-84f195c28070",
                                                                                        "metadata": {},
                                                                                        "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                                                        "frame_config": {
                                                                                            "params": [
                                                                                                {
                                                                                                    "name": "is_login_flow",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "is_login_flow"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "type": "procedure"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "type": "match_case"
                                                                    },
                                                                    "debug_id": "ff9887a5-10fd-47c7-9a81-3879ef73edeb",
                                                                    "condition": {
                                                                        "negated": false,
                                                                        "metadata": {
                                                                            "label": "MVP2 OTP Pilot?",
                                                                            "type": "generic_condition"
                                                                        },
                                                                        "field": {
                                                                            "type": "expression",
                                                                            "value": "is_otp_pilot_user"
                                                                        },
                                                                        "data_type": "boolean",
                                                                        "type": "generic",
                                                                        "operation": "==",
                                                                        "value": {
                                                                            "type": "expression",
                                                                            "value": "true"
                                                                        }
                                                                    },
                                                                    "true_branch": {
                                                                        "debug_id": "9ad5fc7e-b72d-4bcd-b67e-360a7b9760f5",
                                                                        "metadata": {
                                                                            "notes": "OTP pilot user",
                                                                            "label": "Debug output"
                                                                        },
                                                                        "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                        "frame_config": {
                                                                            "params": [
                                                                                {
                                                                                    "name": "debug",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "debug"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "text",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "`tab_hrt_analyze_subjourney\n------------------------------------------------------------------\nis_otp_pilot_user = ${is_otp_pilot_user}\nis_login_flow = ${is_login_flow}\n\n `"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "heading",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "`OTP Pilot`"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "comment",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "`Sample Output\n------------------------------------------------------------------\n\n\n------------------------------------------------------------------\n`"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "procedure",
                                                                        "child": {
                                                                            "debug_id": "ebcd9e43-062f-4345-80a8-5846f7a63575",
                                                                            "metadata": {
                                                                                "notes": "A31-ChallengeTypeDetermination",
                                                                                "label": "Debug output (A31)"
                                                                            },
                                                                            "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                            "frame_config": {
                                                                                "params": [
                                                                                    {
                                                                                        "name": "debug",
                                                                                        "value": {
                                                                                            "type": "expression",
                                                                                            "value": "debug"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "name": "text",
                                                                                        "value": {
                                                                                            "type": "expression",
                                                                                            "value": "`tab_hrt_analyze_subjourney\n------------------------------------------------------------------\nPost 'mae_hrt_raa_analyze_subjourney_output' execution\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\nusername = ${@policy.user().id}\nis_token_enabled = HARD CODE to false\ncustomer_type = HARD CODE TO 'R'\nchallengeType = ${challengeType}\nhrt_policy_id = ${hrt_policy_id}\n\n------------------------------------------------------------------\nmae_hrt_raa_analyze_subjourney_output=\n  ${mae_hrt_raa_analyze_subjourney_output}\n `"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "name": "heading",
                                                                                        "value": {
                                                                                            "type": "expression",
                                                                                            "value": "\"A31-ChallengeTypeDetermination\""
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "name": "comment",
                                                                                        "value": {
                                                                                            "type": "expression",
                                                                                            "value": "`Sample Output\n------------------------------------------------------------------\nSuccess\n\nSCQ Challenge\n{\n    \"raaAnalyzeResponse\": {\n        \"identificationData\": {\n            \"userStatus\": \"UNLOCKED\",\n            \"transactionId\": \"TRX_work-manager-task-51-8107934116531934118\"\n        },\n        \"messageHeader\": {\n            \"requestId\": \"d8391d9b-526f-446f-aafd-4176024bfde9\",\n            \"requestType\": \"ANALYZE\",\n            \"timeStamp\": \"2021-12-06T20:11:31.080Z\",\n            \"version\": \"6.5\"\n        },\n        \"success\": true,\n        \"riskResult\": {\n            \"triggeredRule\": {\n                \"ruleName\": \"TEST Challenge all HRT\",\n                \"actionType\": \"STRICT\",\n                \"actionCode\": \"REDIRECT_CHALLENGE\",\n                \"ruleId\": \"TEST Challenge all HRT\",\n                \"actionName\": \"REDIRECT_AUTHENTICATE\"\n            },\n            \"riskScore\": \"94\"\n        },\n        \"statusHeader\": {\n            \"statusCode\": \"200\"\n        },\n        \"collectableCredentialList\": {\n            \"collectableCredential\": [\n                {\n                    \"collectableCredential\": {\n                        \"credentialType\": \"QUESTION\"\n                    }\n                }\n            ]\n        },\n        \"statusCode\": 200\n    },\n    \"actionCode\": \"CHALLENGE\",\n    \"challengeType\": \"QUESTION\",\n    \"transactionId\": \"TRX_work-manager-task-51-8107934116531934118\"\n}\nFailure\n\n------------------------------------------------------------------\n`"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type": "procedure",
                                                                            "child": {
                                                                                "debug_id": "75249322-6ce7-45eb-8ac8-212d4ad2f78b",
                                                                                "metadata": {},
                                                                                "procedure_id": "dd8a084d-3758-4f82-9ceb-e2d6d33ccf47",
                                                                                "frame_config": {
                                                                                    "params": [
                                                                                        {
                                                                                            "name": "sso_hash_id",
                                                                                            "value": {
                                                                                                "type": "expression",
                                                                                                "value": "sso_hash_id"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "name": "user_id",
                                                                                            "value": {
                                                                                                "type": "expression",
                                                                                                "value": "@policy.user().id"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "name": "is_token_enabled",
                                                                                            "value": {
                                                                                                "type": "expression",
                                                                                                "value": "false"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "name": "customer_type",
                                                                                            "value": {
                                                                                                "type": "expression",
                                                                                                "value": "\"R\""
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "name": "challenge_type",
                                                                                            "value": {
                                                                                                "type": "expression",
                                                                                                "value": "challengeType"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "name": "hrt_code",
                                                                                            "value": {
                                                                                                "type": "expression",
                                                                                                "value": "hrt_policy_id"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "type": "procedure",
                                                                                "child": {
                                                                                    "debug_id": "be1b8584-8e3b-46db-b201-d7d7f2daaaa2",
                                                                                    "metadata": {
                                                                                        "notes": "A31-ChallengeTypeDetermination",
                                                                                        "label": "Debug output (A31)"
                                                                                    },
                                                                                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                    "frame_config": {
                                                                                        "params": [
                                                                                            {
                                                                                                "name": "debug",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "debug"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "name": "text",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "`tab_hrt_analyze_subjourney\n------------------------------------------------------------------\nPost 'mae_determine_authentication_regime_subjourney' execution\n------------------------------------------------------------------\nmae_determine_authentication_regime_subjourney_output = ${mae_determine_authentication_regime_subjourney_output}\nmae_determine_authentication_regime_subjourney_otp_numbers = ${mae_determine_authentication_regime_subjourney_otp_numbers}\n\n`"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "name": "heading",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "\"A31-ChallengeTypeDetermination\""
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "name": "comment",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "`Sample Output\n------------------------------------------------------------------\nSuccess\n\nSCQ Challenge\n{\n    \"raaAnalyzeResponse\": {\n        \"identificationData\": {\n            \"userStatus\": \"UNLOCKED\",\n            \"transactionId\": \"TRX_work-manager-task-51-8107934116531934118\"\n        },\n        \"messageHeader\": {\n            \"requestId\": \"d8391d9b-526f-446f-aafd-4176024bfde9\",\n            \"requestType\": \"ANALYZE\",\n            \"timeStamp\": \"2021-12-06T20:11:31.080Z\",\n            \"version\": \"6.5\"\n        },\n        \"success\": true,\n        \"riskResult\": {\n            \"triggeredRule\": {\n                \"ruleName\": \"TEST Challenge all HRT\",\n                \"actionType\": \"STRICT\",\n                \"actionCode\": \"REDIRECT_CHALLENGE\",\n                \"ruleId\": \"TEST Challenge all HRT\",\n                \"actionName\": \"REDIRECT_AUTHENTICATE\"\n            },\n            \"riskScore\": \"94\"\n        },\n        \"statusHeader\": {\n            \"statusCode\": \"200\"\n        },\n        \"collectableCredentialList\": {\n            \"collectableCredential\": [\n                {\n                    \"collectableCredential\": {\n                        \"credentialType\": \"QUESTION\"\n                    }\n                }\n            ]\n        },\n        \"statusCode\": 200\n    },\n    \"actionCode\": \"CHALLENGE\",\n    \"challengeType\": \"QUESTION\",\n    \"transactionId\": \"TRX_work-manager-task-51-8107934116531934118\"\n}\nFailure\n\n------------------------------------------------------------------\n`"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "type": "procedure",
                                                                                    "child": {
                                                                                        "debug_id": "a8be8473-6ddd-44e1-be3d-de692c3a113b",
                                                                                        "metadata": {
                                                                                            "data_type": "string",
                                                                                            "type": "match_case"
                                                                                        },
                                                                                        "field": {
                                                                                            "type": "expression",
                                                                                            "value": "mae_determine_authentication_regime_subjourney_output"
                                                                                        },
                                                                                        "otherwise_branch": {
                                                                                            "debug_id": "f7b2af7b-54bc-4f88-ba2c-b1f0aeb06b66",
                                                                                            "metadata": {
                                                                                                "notes": "Q210-CT-Otherwise",
                                                                                                "label": "Debug output (Q200)"
                                                                                            },
                                                                                            "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                            "frame_config": {
                                                                                                "params": [
                                                                                                    {
                                                                                                        "name": "debug",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "debug"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "text",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "`tab_hrt_analyze_subjourney\n------------------------------------------------------------------\nchallengeType = ${challengeType}\nmae_determine_authentication_regime_subjourney_output = ${mae_determine_authentication_regime_subjourney_output}\n `"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "heading",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "\"Q210-CT-Otherwise\""
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "comment",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "`Sample Output\n------------------------------------------------------------------\n\n\n------------------------------------------------------------------\n`"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "type": "procedure",
                                                                                            "child": {
                                                                                                "debug_id": "1e5fa497-5ccb-4541-aa0e-948237a73d47",
                                                                                                "metadata": {},
                                                                                                "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                                                                "frame_config": {
                                                                                                    "params": [
                                                                                                        {
                                                                                                            "name": "is_login_flow",
                                                                                                            "value": {
                                                                                                                "type": "expression",
                                                                                                                "value": "is_login_flow"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "type": "procedure"
                                                                                            }
                                                                                        },
                                                                                        "matched_branches": [
                                                                                            {
                                                                                                "matcher": {
                                                                                                    "metadata": {
                                                                                                        "type": "generic_condition",
                                                                                                        "matcherId": "eb356e28-b042-4f4f-aab4-a2bb658cc432"
                                                                                                    },
                                                                                                    "data_type": "string",
                                                                                                    "type": "generic_operation",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "\"SCQ\""
                                                                                                    },
                                                                                                    "operation": "=="
                                                                                                },
                                                                                                "child": {
                                                                                                    "false_branch": {
                                                                                                        "debug_id": "614dfef2-d3cd-404a-9b2b-4a7adaa58ae3",
                                                                                                        "metadata": {
                                                                                                            "notes": " Valid scenario - When challenge question has been reset.",
                                                                                                            "label": "Debug output (CHALLENGE)"
                                                                                                        },
                                                                                                        "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                        "frame_config": {
                                                                                                            "params": [
                                                                                                                {
                                                                                                                    "name": "debug",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "debug"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "name": "text",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "`Challenge Required - No questions registered\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\nscq_question_registered=${scq_question_registered}\n------------------------------------------------------------------\n`"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "name": "heading",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "`Challenge Required`"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "name": "comment",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "``"
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "type": "procedure"
                                                                                                    },
                                                                                                    "debug_id": "d056991b-499f-4ca1-becf-ac0701bffc1f",
                                                                                                    "condition": {
                                                                                                        "negated": false,
                                                                                                        "metadata": {
                                                                                                            "type": "generic_condition"
                                                                                                        },
                                                                                                        "field": {
                                                                                                            "type": "expression",
                                                                                                            "value": "scq_question_registered"
                                                                                                        },
                                                                                                        "data_type": "boolean",
                                                                                                        "type": "generic",
                                                                                                        "operation": "==",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "true"
                                                                                                        }
                                                                                                    },
                                                                                                    "true_branch": {
                                                                                                        "debug_id": "79f26bf6-ad2d-4435-b90c-4566e7d8023f",
                                                                                                        "metadata": {
                                                                                                            "notes": null,
                                                                                                            "label": "HRT Challenge with SCQ"
                                                                                                        },
                                                                                                        "block": {
                                                                                                            "debug_id": "2ed01f4d-82a6-4257-b121-8af1427f9430",
                                                                                                            "metadata": {
                                                                                                                "notes": " Q10-Challenge-SCQ",
                                                                                                                "label": "Debug output (CHALLENGE)"
                                                                                                            },
                                                                                                            "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                            "frame_config": {
                                                                                                                "params": [
                                                                                                                    {
                                                                                                                        "name": "debug",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "debug"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "text",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "`Challenge Required\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\n------------------------------------------------------------------\n\nInvoking \"mae_hrt_raa_authenticate_subjourney\"\n`"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "heading",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "\"Q10-Challenge-SCQ\""
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "comment",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "``"
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "type": "procedure",
                                                                                                            "child": {
                                                                                                                "debug_id": "3975dec3-afea-4d76-bbab-2ccb6361fa2d",
                                                                                                                "metadata": {},
                                                                                                                "procedure_id": "7e48d76c-bc6d-4726-8879-56e8091f9945",
                                                                                                                "frame_config": {
                                                                                                                    "params": [
                                                                                                                        {
                                                                                                                            "name": "rsa_transaction_id",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "\"\" + transactionId"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "rsa_request_id",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "\"\" + requestId"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "rsa_key",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "rsa_id"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "user_session_token",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "@policy.device().session.session_id"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "sso_hash_id",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "sso_hash_id"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "allow_url",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "allow_url"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "device_print",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "raa_device_fingerprint"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "hrt_policy_id",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "hrt_policy_id"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "max_failed_attempts",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "3"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "ip_address",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "\"\" + @policy.request().client_ip"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "login_id",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "\"\" + @policy.user().id"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "rsa_risk_score",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "\"\" + riskScore"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                "type": "procedure",
                                                                                                                "child": {
                                                                                                                    "debug_id": "1ec020b3-74f9-4cec-b0b1-f2422f357248",
                                                                                                                    "escapes": {
                                                                                                                        "escapes": []
                                                                                                                    },
                                                                                                                    "strings": [],
                                                                                                                    "action": {
                                                                                                                        "variables": [
                                                                                                                            {
                                                                                                                                "name": "authenticateActionCode",
                                                                                                                                "value": {
                                                                                                                                    "type": "expression",
                                                                                                                                    "value": "try mae_hrt_raa_authenticate_subjourney_output.actionCode catch \"\""
                                                                                                                                }
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "name": "lockUser",
                                                                                                                                "value": {
                                                                                                                                    "type": "expression",
                                                                                                                                    "value": "try mae_hrt_raa_authenticate_subjourney_output.lockUser catch \"\""
                                                                                                                                }
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "name": "subJourneyStatus",
                                                                                                                                "value": {
                                                                                                                                    "type": "expression",
                                                                                                                                    "value": "try mae_hrt_raa_authenticate_subjourney_output.subJourneyStatus catch \"\""
                                                                                                                                }
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "name": "subJourneyError",
                                                                                                                                "value": {
                                                                                                                                    "type": "expression",
                                                                                                                                    "value": "try mae_hrt_raa_authenticate_subjourney_output.subJourneyError catch \"\""
                                                                                                                                }
                                                                                                                            }
                                                                                                                        ],
                                                                                                                        "metadata": {
                                                                                                                            "type": "set_variables"
                                                                                                                        },
                                                                                                                        "type": "set_variables"
                                                                                                                    },
                                                                                                                    "type": "action",
                                                                                                                    "child": {
                                                                                                                        "debug_id": "8a16050e-18c3-4e4d-af53-2bca85ce33bf",
                                                                                                                        "metadata": {
                                                                                                                            "notes": " Q20-Challenge-SCQ (authenticate subjourney output)",
                                                                                                                            "label": "Debug output"
                                                                                                                        },
                                                                                                                        "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                                        "frame_config": {
                                                                                                                            "params": [
                                                                                                                                {
                                                                                                                                    "name": "debug",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "debug"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "name": "text",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "`MAE HRT Authenticate Subjourney Output\n-----------------------------------------\nauthenticateActionCode = ${authenticateActionCode}\nlockUser = ${lockUser}\nsubJourneyStatus = ${subJourneyStatus}\nsubJourneyError = ${subJourneyError}\n----------------------------------------------\nmae_hrt_raa_authenticate_subjourney_output =\n  ${mae_hrt_raa_authenticate_subjourney_output}\n`"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "name": "heading",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "\"Q20-Challenge-SCQ\""
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "name": "comment",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "`\n\nALLOW\n\n\nDENY\n{\"actionCode\":\"DENY\",\"lockUser\":false,\"subJourneyStatus\":\"Completed with errors\",\"subJourneyError\":{\"isValid\":false,\"shouldBlock\":false,\"faultString\":\"User answered incorrectly\"}}\n{\"actionCode\":\"DENY\",\"lockUser\":true,\"subJourneyStatus\":\"Completed with errors\",\"subJourneyError\":{\"isValid\":false,\"shouldBlock\":true,\"faultString\":\"User answered incorrectly\"}}\n\nNO CHALLENGE QUESTION REGISTERED\n{\"actionCode\":\"ERROR\",\"lockUser\":false}\n\n\n\n`"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        "type": "procedure",
                                                                                                                        "child": {
                                                                                                                            "debug_id": "9363ca51-3b6a-45a0-975b-0ab8681a7670",
                                                                                                                            "metadata": {
                                                                                                                                "data_type": "string",
                                                                                                                                "type": "match_case"
                                                                                                                            },
                                                                                                                            "field": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "authenticateActionCode"
                                                                                                                            },
                                                                                                                            "otherwise_branch": {
                                                                                                                                "debug_id": "0d0f9634-fef6-4c6c-bcd9-22776ca98f70",
                                                                                                                                "metadata": {},
                                                                                                                                "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                                                                                                "frame_config": {
                                                                                                                                    "params": [
                                                                                                                                        {
                                                                                                                                            "name": "is_login_flow",
                                                                                                                                            "value": {
                                                                                                                                                "type": "expression",
                                                                                                                                                "value": "is_login_flow"
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                "type": "procedure"
                                                                                                                            },
                                                                                                                            "matched_branches": [
                                                                                                                                {
                                                                                                                                    "matcher": {
                                                                                                                                        "metadata": {
                                                                                                                                            "type": "generic_condition",
                                                                                                                                            "matcherId": "a31ca80f-af0a-4ae6-afac-09343b2c16a7"
                                                                                                                                        },
                                                                                                                                        "data_type": "string",
                                                                                                                                        "type": "generic_operation",
                                                                                                                                        "value": {
                                                                                                                                            "type": "expression",
                                                                                                                                            "value": "\"ALLOW\""
                                                                                                                                        },
                                                                                                                                        "operation": "=="
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "matcher": {
                                                                                                                                        "metadata": {
                                                                                                                                            "type": "generic_condition",
                                                                                                                                            "matcherId": "025dd0d4-e4bc-4a88-a343-dca800b03c87"
                                                                                                                                        },
                                                                                                                                        "data_type": "string",
                                                                                                                                        "type": "generic_operation",
                                                                                                                                        "value": {
                                                                                                                                            "type": "expression",
                                                                                                                                            "value": "\"DENY\""
                                                                                                                                        },
                                                                                                                                        "operation": "=="
                                                                                                                                    },
                                                                                                                                    "child": {
                                                                                                                                        "debug_id": "e1c280e0-5bb3-4235-a3af-6ed169a0b342",
                                                                                                                                        "metadata": {},
                                                                                                                                        "procedure_id": "e22d3218-2be2-47fd-b0cb-9689301b363c",
                                                                                                                                        "frame_config": {
                                                                                                                                            "params": [
                                                                                                                                                {
                                                                                                                                                    "name": "is_login_flow",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "is_login_flow"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        "type": "procedure"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "type": "match_case"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "block"
                                                                                                    },
                                                                                                    "type": "condition"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "matcher": {
                                                                                                    "metadata": {
                                                                                                        "type": "generic_condition",
                                                                                                        "matcherId": "3971ee71-58f4-40fa-8534-8f019162f0c8"
                                                                                                    },
                                                                                                    "data_type": "string",
                                                                                                    "type": "generic_operation",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "\"OTP\""
                                                                                                    },
                                                                                                    "operation": "=="
                                                                                                },
                                                                                                "child": {
                                                                                                    "debug_id": "4625f4fb-5bfc-41bf-b1e9-e1e8544957b0",
                                                                                                    "metadata": {
                                                                                                        "notes": "Q210-CT-OTP",
                                                                                                        "label": "Debug output (Q200)"
                                                                                                    },
                                                                                                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                    "frame_config": {
                                                                                                        "params": [
                                                                                                            {
                                                                                                                "name": "debug",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "debug"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "text",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "`tab_hrt_analyze_subjourney\n------------------------------------------------------------------\nchallengeType = ${challengeType}\nmae_determine_authentication_regime_subjourney_output = ${mae_determine_authentication_regime_subjourney_output}\n `"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "heading",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "\"Q210-CT-OTP\""
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "comment",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "`Sample Output\n------------------------------------------------------------------\n\n\n------------------------------------------------------------------\n`"
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "type": "procedure",
                                                                                                    "child": {
                                                                                                        "debug_id": "bff07cac-211b-4df4-b5a0-0abfcc9cbbbf",
                                                                                                        "metadata": {},
                                                                                                        "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                                                                        "frame_config": {
                                                                                                            "params": [
                                                                                                                {
                                                                                                                    "name": "is_login_flow",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "is_login_flow"
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "type": "procedure"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "matcher": {
                                                                                                    "metadata": {
                                                                                                        "type": "generic_condition",
                                                                                                        "matcherId": "1e27c8df-2dcc-48e3-a31d-429f565a2253"
                                                                                                    },
                                                                                                    "data_type": "string",
                                                                                                    "type": "generic_operation",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "\"TKN\""
                                                                                                    },
                                                                                                    "operation": "=="
                                                                                                },
                                                                                                "child": {
                                                                                                    "debug_id": "06734fce-f219-4f00-85f1-25afa8907888",
                                                                                                    "metadata": {
                                                                                                        "notes": "Q210-CT-TKN",
                                                                                                        "label": "Debug output (Q200)"
                                                                                                    },
                                                                                                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                    "frame_config": {
                                                                                                        "params": [
                                                                                                            {
                                                                                                                "name": "debug",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "debug"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "text",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "`tab_hrt_analyze_subjourney\n------------------------------------------------------------------\nchallengeType = ${challengeType}\nmae_determine_authentication_regime_subjourney_output = ${mae_determine_authentication_regime_subjourney_output}\n `"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "heading",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "\"Q210-CT-TKN\""
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "comment",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "`Sample Output\n------------------------------------------------------------------\n\n\n------------------------------------------------------------------\n`"
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "type": "procedure",
                                                                                                    "child": {
                                                                                                        "debug_id": "20f560d0-9676-444f-8c1b-1447e11cfd72",
                                                                                                        "metadata": {},
                                                                                                        "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                                                                        "frame_config": {
                                                                                                            "params": [
                                                                                                                {
                                                                                                                    "name": "is_login_flow",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "is_login_flow"
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "type": "procedure"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "matcher": {
                                                                                                    "metadata": {
                                                                                                        "type": "generic_condition",
                                                                                                        "matcherId": "417d1101-8229-447e-851e-b87a6bd3738e"
                                                                                                    },
                                                                                                    "data_type": "string",
                                                                                                    "type": "generic_operation",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "\"OTP_SCQ\""
                                                                                                    },
                                                                                                    "operation": "=="
                                                                                                },
                                                                                                "child": {
                                                                                                    "debug_id": "5352ff88-d42a-4b89-8c5c-5fceaecec4a8",
                                                                                                    "metadata": {
                                                                                                        "notes": " Q01-Challenge-OTP_SCQ",
                                                                                                        "label": "Debug output (CHALLENGE)"
                                                                                                    },
                                                                                                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                    "frame_config": {
                                                                                                        "params": [
                                                                                                            {
                                                                                                                "name": "debug",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "debug"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "text",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "`Challenge Required (OTP_SCQ)\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\n------------------------------------------------------------------\n\nInvoking \"mae_otp_auth_with_optional_escape_subjourney\"\n`"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "heading",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "\"Q01-Challenge-OTP_SCQ\""
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "name": "comment",
                                                                                                                "value": {
                                                                                                                    "type": "expression",
                                                                                                                    "value": "``"
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "type": "procedure",
                                                                                                    "child": {
                                                                                                        "debug_id": "25d5702a-183e-4e3c-9edf-69d76f67919a",
                                                                                                        "metadata": {
                                                                                                            "notes": " Q02-Sending-OTP",
                                                                                                            "label": "Debug output (SendingOTP)"
                                                                                                        },
                                                                                                        "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                        "frame_config": {
                                                                                                            "params": [
                                                                                                                {
                                                                                                                    "name": "debug",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "debug"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "name": "text",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "/* let tid=@strToInt(@policy.request().body.data.data.target_id)-1  */\nlet otp = @policy.session().custom_data?.otp_phone_numbers[0] return\n\"phoneNumber=\" + otp + \"phoneRiskTransactionId=\" + @policy.session().custom_data?.phone_risk_transaction_id"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "name": "heading",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "\" Q02-Sending-OTP\""
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "name": "comment",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "``"
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "type": "procedure",
                                                                                                        "child": {
                                                                                                            "debug_id": "d33fd27b-c183-4b2e-af6c-0e7a29a240de",
                                                                                                            "metadata": {},
                                                                                                            "procedure_id": "997b5c6b-e6ee-4ba0-b2c7-989d8e084654",
                                                                                                            "frame_config": {
                                                                                                                "params": [
                                                                                                                    {
                                                                                                                        "name": "ip_address",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "@policy.request().client_ip"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "allow_url",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "allow_url"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "login_id",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "@policy.user().id"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "sso_hash_id",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "sso_hash_id"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "user_session_token",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "@policy.session().id"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "raa_transaction_id",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "transactionId"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "hrt_code",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "hrt_policy_id"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "raa_analyze_request",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "mae_hrt_raa_analyze_subjourney_request"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "max_otps",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "@strings.parseNumber(@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"mae_max_otp_codes\"),10)"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "rsa_risk_score",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "\"\" + riskScore"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "name": "escape_available",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "true"
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "type": "procedure",
                                                                                                            "child": {
                                                                                                                "debug_id": "8188d2c5-fa96-41f3-86d4-d2178a588b19",
                                                                                                                "metadata": {
                                                                                                                    "notes": " Q10-Challenge-OTP-outcome",
                                                                                                                    "label": "Debug output (CHALLENGE)"
                                                                                                                },
                                                                                                                "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                                "frame_config": {
                                                                                                                    "params": [
                                                                                                                        {
                                                                                                                            "name": "debug",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "debug"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "text",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "`OTP Outcome\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\n------------------------------------------------------------------\nmae_otp_auth_with_optional_escape_subjourney_auth_successful=${mae_otp_auth_with_optional_escape_subjourney_auth_successful}\nmae_otp_auth_with_optional_escape_subjourney_escape_chosen=${mae_otp_auth_with_optional_escape_subjourney_escape_chosen}\n\n\n\nInvoking \"mae_hrt_raa_authenticate_subjourney\"\n`"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "heading",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "\"Q10-Challenge-SCQ-Used\""
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "name": "comment",
                                                                                                                            "value": {
                                                                                                                                "type": "expression",
                                                                                                                                "value": "``"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                "type": "procedure",
                                                                                                                "child": {
                                                                                                                    "false_branch": {
                                                                                                                        "debug_id": "d60c3f43-7dc2-4fda-9e94-4906e5337d51",
                                                                                                                        "metadata": {
                                                                                                                            "notes": " Q10-Challenge-OTP-Used",
                                                                                                                            "label": "Debug output (CHALLENGE)"
                                                                                                                        },
                                                                                                                        "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                                        "frame_config": {
                                                                                                                            "params": [
                                                                                                                                {
                                                                                                                                    "name": "debug",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "debug"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "name": "text",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "`Challenge Required\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\n------------------------------------------------------------------\n\nInvoking \"mae_hrt_raa_authenticate_subjourney\"\n`"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "name": "heading",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "\"Q10-Challenge-OTP-Used\""
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "name": "comment",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "``"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        "type": "procedure",
                                                                                                                        "child": {
                                                                                                                            "debug_id": "4f8ec8db-456c-4acc-94f9-755d683a1fc1",
                                                                                                                            "escapes": {
                                                                                                                                "escapes": []
                                                                                                                            },
                                                                                                                            "strings": [],
                                                                                                                            "action": {
                                                                                                                                "variables": [
                                                                                                                                    {
                                                                                                                                        "name": "auth_regime_used",
                                                                                                                                        "value": {
                                                                                                                                            "type": "expression",
                                                                                                                                            "value": "\"OTP\""
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                ],
                                                                                                                                "metadata": {
                                                                                                                                    "type": "set_variables"
                                                                                                                                },
                                                                                                                                "type": "set_variables"
                                                                                                                            },
                                                                                                                            "type": "action",
                                                                                                                            "child": {
                                                                                                                                "false_branch": {
                                                                                                                                    "debug_id": "08015899-baa1-4723-a25b-786851f23a2b",
                                                                                                                                    "metadata": {},
                                                                                                                                    "procedure_id": "e22d3218-2be2-47fd-b0cb-9689301b363c",
                                                                                                                                    "frame_config": {
                                                                                                                                        "params": [
                                                                                                                                            {
                                                                                                                                                "name": "is_login_flow",
                                                                                                                                                "value": {
                                                                                                                                                    "type": "expression",
                                                                                                                                                    "value": "is_login_flow"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "type": "procedure"
                                                                                                                                },
                                                                                                                                "debug_id": "880fbeee-177c-4a6e-bc1a-01541b5c42ad",
                                                                                                                                "condition": {
                                                                                                                                    "negated": false,
                                                                                                                                    "metadata": {
                                                                                                                                        "type": "generic_condition"
                                                                                                                                    },
                                                                                                                                    "field": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "mae_otp_auth_with_optional_escape_subjourney_auth_successful"
                                                                                                                                    },
                                                                                                                                    "data_type": "boolean",
                                                                                                                                    "type": "generic",
                                                                                                                                    "operation": "==",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "true"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "type": "condition"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "debug_id": "87f82d66-6849-4c3b-aa10-b0af35018d61",
                                                                                                                    "condition": {
                                                                                                                        "negated": false,
                                                                                                                        "metadata": {
                                                                                                                            "label": "Auth another way?",
                                                                                                                            "type": "generic_condition"
                                                                                                                        },
                                                                                                                        "field": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "mae_otp_auth_with_optional_escape_subjourney_escape_chosen"
                                                                                                                        },
                                                                                                                        "data_type": "boolean",
                                                                                                                        "type": "generic",
                                                                                                                        "operation": "==",
                                                                                                                        "value": {
                                                                                                                            "type": "expression",
                                                                                                                            "value": "true"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "true_branch": {
                                                                                                                        "debug_id": "1cac2d86-07fe-4aed-a21c-5bc633529bd4",
                                                                                                                        "metadata": {
                                                                                                                            "notes": " Q10-Challenge-SCQ-Used",
                                                                                                                            "label": "Debug output (CHALLENGE)"
                                                                                                                        },
                                                                                                                        "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                                        "frame_config": {
                                                                                                                            "params": [
                                                                                                                                {
                                                                                                                                    "name": "debug",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "debug"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "name": "text",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "`Challenge Required\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\n------------------------------------------------------------------\n\nInvoking \"mae_hrt_raa_authenticate_subjourney\"\n`"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "name": "heading",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "\"Q10-Challenge-SCQ-Used\""
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "name": "comment",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "``"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        "type": "procedure",
                                                                                                                        "child": {
                                                                                                                            "debug_id": "84b32447-dce6-41a9-bb4c-99b2ae188d5e",
                                                                                                                            "escapes": {
                                                                                                                                "escapes": []
                                                                                                                            },
                                                                                                                            "strings": [],
                                                                                                                            "action": {
                                                                                                                                "variables": [
                                                                                                                                    {
                                                                                                                                        "name": "auth_regime_used",
                                                                                                                                        "value": {
                                                                                                                                            "type": "expression",
                                                                                                                                            "value": "\"SCQ\""
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                ],
                                                                                                                                "metadata": {
                                                                                                                                    "type": "set_variables"
                                                                                                                                },
                                                                                                                                "type": "set_variables"
                                                                                                                            },
                                                                                                                            "type": "action",
                                                                                                                            "child": {
                                                                                                                                "false_branch": {
                                                                                                                                    "debug_id": "87898f46-8281-47ce-98eb-06d6f9e7fc91",
                                                                                                                                    "metadata": {
                                                                                                                                        "notes": " Valid scenario - When challenge question has been reset.",
                                                                                                                                        "label": "Debug output (CHALLENGE)"
                                                                                                                                    },
                                                                                                                                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                                                    "frame_config": {
                                                                                                                                        "params": [
                                                                                                                                            {
                                                                                                                                                "name": "debug",
                                                                                                                                                "value": {
                                                                                                                                                    "type": "expression",
                                                                                                                                                    "value": "debug"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "name": "text",
                                                                                                                                                "value": {
                                                                                                                                                    "type": "expression",
                                                                                                                                                    "value": "`Challenge Required - No questions registered\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\nscq_question_registered=${scq_question_registered}\n------------------------------------------------------------------\n`"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "name": "heading",
                                                                                                                                                "value": {
                                                                                                                                                    "type": "expression",
                                                                                                                                                    "value": "`Challenge Required`"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "name": "comment",
                                                                                                                                                "value": {
                                                                                                                                                    "type": "expression",
                                                                                                                                                    "value": "``"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "type": "procedure"
                                                                                                                                },
                                                                                                                                "debug_id": "858b894f-e6c4-4217-924f-9d2eca9e6f50",
                                                                                                                                "condition": {
                                                                                                                                    "negated": false,
                                                                                                                                    "metadata": {
                                                                                                                                        "type": "generic_condition"
                                                                                                                                    },
                                                                                                                                    "field": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "scq_question_registered"
                                                                                                                                    },
                                                                                                                                    "data_type": "boolean",
                                                                                                                                    "type": "generic",
                                                                                                                                    "operation": "==",
                                                                                                                                    "value": {
                                                                                                                                        "type": "expression",
                                                                                                                                        "value": "true"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "true_branch": {
                                                                                                                                    "debug_id": "f9fb46ec-6264-410d-b07f-19b511d78b61",
                                                                                                                                    "metadata": {
                                                                                                                                        "notes": null,
                                                                                                                                        "label": "HRT Challenge with SCQ"
                                                                                                                                    },
                                                                                                                                    "block": {
                                                                                                                                        "debug_id": "45766fff-3612-4a9d-b576-2ba0b1571360",
                                                                                                                                        "metadata": {},
                                                                                                                                        "procedure_id": "7e48d76c-bc6d-4726-8879-56e8091f9945",
                                                                                                                                        "frame_config": {
                                                                                                                                            "params": [
                                                                                                                                                {
                                                                                                                                                    "name": "rsa_transaction_id",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "\"\" + transactionId"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "name": "rsa_request_id",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "\"\" + requestId"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "name": "rsa_key",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "rsa_id"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "name": "user_session_token",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "@policy.device().session.session_id"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "name": "sso_hash_id",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "sso_hash_id"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "name": "allow_url",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "allow_url"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "name": "device_print",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "raa_device_fingerprint"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "name": "hrt_policy_id",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "hrt_policy_id"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "name": "max_failed_attempts",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "3"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "name": "ip_address",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "\"\" + @policy.request().client_ip"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "name": "login_id",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "\"\" + @policy.user().id"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "name": "rsa_risk_score",
                                                                                                                                                    "value": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "\"\" + riskScore"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        "type": "procedure",
                                                                                                                                        "child": {
                                                                                                                                            "debug_id": "c218f800-3b56-4bf6-87c2-8f8ecab9b06c",
                                                                                                                                            "escapes": {
                                                                                                                                                "escapes": []
                                                                                                                                            },
                                                                                                                                            "strings": [],
                                                                                                                                            "action": {
                                                                                                                                                "variables": [
                                                                                                                                                    {
                                                                                                                                                        "name": "authenticateActionCode",
                                                                                                                                                        "value": {
                                                                                                                                                            "type": "expression",
                                                                                                                                                            "value": "try mae_hrt_raa_authenticate_subjourney_output.actionCode catch \"\""
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "name": "lockUser",
                                                                                                                                                        "value": {
                                                                                                                                                            "type": "expression",
                                                                                                                                                            "value": "try mae_hrt_raa_authenticate_subjourney_output.lockUser catch \"\""
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "name": "subJourneyStatus",
                                                                                                                                                        "value": {
                                                                                                                                                            "type": "expression",
                                                                                                                                                            "value": "try mae_hrt_raa_authenticate_subjourney_output.subJourneyStatus catch \"\""
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "name": "subJourneyError",
                                                                                                                                                        "value": {
                                                                                                                                                            "type": "expression",
                                                                                                                                                            "value": "try mae_hrt_raa_authenticate_subjourney_output.subJourneyError catch \"\""
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                ],
                                                                                                                                                "metadata": {
                                                                                                                                                    "type": "set_variables"
                                                                                                                                                },
                                                                                                                                                "type": "set_variables"
                                                                                                                                            },
                                                                                                                                            "type": "action",
                                                                                                                                            "child": {
                                                                                                                                                "debug_id": "71e7907e-881c-4296-8040-a60a2b7fe164",
                                                                                                                                                "metadata": {
                                                                                                                                                    "notes": " Q20-Challenge-SCQ (authenticate subjourney output)",
                                                                                                                                                    "label": "Debug output"
                                                                                                                                                },
                                                                                                                                                "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                                                                "frame_config": {
                                                                                                                                                    "params": [
                                                                                                                                                        {
                                                                                                                                                            "name": "debug",
                                                                                                                                                            "value": {
                                                                                                                                                                "type": "expression",
                                                                                                                                                                "value": "debug"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "name": "text",
                                                                                                                                                            "value": {
                                                                                                                                                                "type": "expression",
                                                                                                                                                                "value": "`MAE HRT Authenticate Subjourney Output\n-----------------------------------------\nauthenticateActionCode = ${authenticateActionCode}\nlockUser = ${lockUser}\nsubJourneyStatus = ${subJourneyStatus}\nsubJourneyError = ${subJourneyError}\n----------------------------------------------\nmae_hrt_raa_authenticate_subjourney_output =\n  ${mae_hrt_raa_authenticate_subjourney_output}\n`"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "name": "heading",
                                                                                                                                                            "value": {
                                                                                                                                                                "type": "expression",
                                                                                                                                                                "value": "\"Q20-Challenge-SCQ\""
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "name": "comment",
                                                                                                                                                            "value": {
                                                                                                                                                                "type": "expression",
                                                                                                                                                                "value": "`\n\nALLOW\n\n\nDENY\n{\"actionCode\":\"DENY\",\"lockUser\":false,\"subJourneyStatus\":\"Completed with errors\",\"subJourneyError\":{\"isValid\":false,\"shouldBlock\":false,\"faultString\":\"User answered incorrectly\"}}\n{\"actionCode\":\"DENY\",\"lockUser\":true,\"subJourneyStatus\":\"Completed with errors\",\"subJourneyError\":{\"isValid\":false,\"shouldBlock\":true,\"faultString\":\"User answered incorrectly\"}}\n\nNO CHALLENGE QUESTION REGISTERED\n{\"actionCode\":\"ERROR\",\"lockUser\":false}\n\n\n\n`"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                "type": "procedure",
                                                                                                                                                "child": {
                                                                                                                                                    "debug_id": "52f2369e-445f-46b4-ae3e-cbc20d173104",
                                                                                                                                                    "metadata": {
                                                                                                                                                        "data_type": "string",
                                                                                                                                                        "type": "match_case"
                                                                                                                                                    },
                                                                                                                                                    "field": {
                                                                                                                                                        "type": "expression",
                                                                                                                                                        "value": "authenticateActionCode"
                                                                                                                                                    },
                                                                                                                                                    "otherwise_branch": {
                                                                                                                                                        "debug_id": "7defbd03-8029-409f-9b3c-c5bda2525e63",
                                                                                                                                                        "metadata": {},
                                                                                                                                                        "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                                                                                                                        "frame_config": {
                                                                                                                                                            "params": [
                                                                                                                                                                {
                                                                                                                                                                    "name": "is_login_flow",
                                                                                                                                                                    "value": {
                                                                                                                                                                        "type": "expression",
                                                                                                                                                                        "value": "is_login_flow"
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            ]
                                                                                                                                                        },
                                                                                                                                                        "type": "procedure"
                                                                                                                                                    },
                                                                                                                                                    "matched_branches": [
                                                                                                                                                        {
                                                                                                                                                            "matcher": {
                                                                                                                                                                "metadata": {
                                                                                                                                                                    "type": "generic_condition",
                                                                                                                                                                    "matcherId": "a31ca80f-af0a-4ae6-afac-09343b2c16a7"
                                                                                                                                                                },
                                                                                                                                                                "data_type": "string",
                                                                                                                                                                "type": "generic_operation",
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "expression",
                                                                                                                                                                    "value": "\"ALLOW\""
                                                                                                                                                                },
                                                                                                                                                                "operation": "=="
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "matcher": {
                                                                                                                                                                "metadata": {
                                                                                                                                                                    "type": "generic_condition",
                                                                                                                                                                    "matcherId": "025dd0d4-e4bc-4a88-a343-dca800b03c87"
                                                                                                                                                                },
                                                                                                                                                                "data_type": "string",
                                                                                                                                                                "type": "generic_operation",
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "expression",
                                                                                                                                                                    "value": "\"DENY\""
                                                                                                                                                                },
                                                                                                                                                                "operation": "=="
                                                                                                                                                            },
                                                                                                                                                            "child": {
                                                                                                                                                                "debug_id": "c8a40a59-95e2-48f7-b8b3-890bdd244f68",
                                                                                                                                                                "metadata": {},
                                                                                                                                                                "procedure_id": "e22d3218-2be2-47fd-b0cb-9689301b363c",
                                                                                                                                                                "frame_config": {
                                                                                                                                                                    "params": [
                                                                                                                                                                        {
                                                                                                                                                                            "name": "is_login_flow",
                                                                                                                                                                            "value": {
                                                                                                                                                                                "type": "expression",
                                                                                                                                                                                "value": "is_login_flow"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "type": "procedure"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    ],
                                                                                                                                                    "type": "match_case"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "type": "block"
                                                                                                                                },
                                                                                                                                "type": "condition"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "type": "condition"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        ],
                                                                                        "type": "match_case"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "type": "condition"
                                                                }
                                                            },
                                                            "type": "block"
                                                        },
                                                        "type": "block"
                                                    }
                                                }
                                            ],
                                            "type": "match_case"
                                        },
                                        "type": "block",
                                        "child": {
                                            "debug_id": "d3d9b85c-655f-492a-b724-909f02d944f5",
                                            "metadata": {},
                                            "procedure_id": "6665f553-9b15-42cb-9140-bf0b42f727a8",
                                            "frame_config": {
                                                "params": [
                                                    {
                                                        "name": "is_login_flow",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "is_login_flow"
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "procedure",
                                            "child": {
                                                "debug_id": "6e48b865-f13b-4178-aed2-d1ea3679fb1f",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "metadata": {
                                                        "type": "auth_pass"
                                                    },
                                                    "type": "auth_pass"
                                                },
                                                "type": "action"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "name": "tab_hrt_analyze_subjourney",
                "id": "4ee5620a-8c1a-4edc-a31d-07381eca9980"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/d577efbc-e5c1-4a72-9761-3fd84179a114",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_boku_says_phone_is_mobile_and_us",
                "provider_id": "d577efbc-e5c1-4a72-9761-3fd84179a114",
                "config": {
                    "return_type": {
                        "type": "boolean"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let response = @customFunctions.mae_api_authscriptfunction_phone_risk_evaluation_phone_info(phone_info.phoneNumber,phone_risk_transaction_id)\nreturn response.phoneRiskResults.phoneInfo.serviceType == \"Mobile\" && response.phoneRiskResults.phoneInfo.countryPhoneCode == \"US\""
                    },
                    "description": "Returns boolean indicating whether the phone number passed in is a Mobile number in the US according to Boku evaluate-phone-risk",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "phone_info",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "description": "Phone number info as returned by the userphones API",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "phone_risk_transaction_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/1c931b22-d12b-4be3-9e35-578db14c0aab",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "mae_soapify_rsa_adaptive_auth_request_subjourney_output",
                            "description": "SOAP string"
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "any"
                            },
                            "name": "input",
                            "description": "any object"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "name",
                            "description": "name of the object in \"input\""
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "namespace",
                            "description": "XML namespace prefix for this element"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "namespace_url",
                            "description": "URL to use for the xmlns attribute"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "request_type"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "ab8d2b30-4436-4d47-93bd-a16381fd7cfb",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "variables": [
                            {
                                "name": "retval_format",
                                "value": {
                                    "type": "expression",
                                    "value": "\"<SOAP-ENV:Envelope xmlns:SOAP-ENV=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\n    <SOAP-ENV:Header/>\n    <SOAP-ENV:Body>\n        <%s xmlns=\\\"%s\\\">\n            <configurationHeader>\n                <instanceId>%s</instanceId>\n            </configurationHeader>\n            <securityHeader>\n                <callerCredential>%s</callerCredential>\n                <callerId>%s</callerId>\n                <method>PASSWORD</method>\n            </securityHeader>\n            %s\n        </%s>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\""
                                }
                            }
                        ],
                        "metadata": {
                            "label": "Skeleton of the SOAP message",
                            "type": "set_variables"
                        },
                        "type": "set_variables"
                    },
                    "type": "action",
                    "child": {
                        "debug_id": "50f2c5c2-7bba-4b9b-a7d9-671e11e1b889",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "variables": [
                                {
                                    "name": "retval",
                                    "value": {
                                        "type": "expression",
                                        "value": "@strings.format(retval_format, [\n  name,\n  namespace_url,\n  @customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"raa_instance_id\"),\n  @identities.extractCredentials(\"RSA_AA_API_Credentials\",\"db\").secret, \n  @identities.extractCredentials(\"RSA_AA_API_Credentials\",\"db\").id,\n  @std.jsonToXml(input),\n  name\n])"
                                    }
                                }
                            ],
                            "metadata": {
                                "label": "Build the SOAP message",
                                "type": "set_variables"
                            },
                            "type": "set_variables"
                        },
                        "type": "action",
                        "child": {
                            "debug_id": "b85ec656-d80e-46a2-878d-edf820fec5ca",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "retval",
                                        "value": {
                                            "type": "expression",
                                            "value": "@strings.rereplace(retval, \"<identificationData>\", @strings.join([\n    \"<identificationData>\",\n        \"<orgName>\",@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"raa_org_name\"),\"</orgName>\"\n],\"\"), false)"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "label": "identificationData additions",
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "942ac4f9-5546-47d6-beb3-7b4248e15e3c",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "mae_soapify_rsa_adaptive_auth_request_subjourney_output",
                                            "value": {
                                                "type": "expression",
                                                "value": "@strings.rereplace(retval, \"<messageHeader>\", @strings.join([\n    \"<messageHeader>\",\n        \"<version>\",@namedContainers.namedStringListLookup(\"RSA_AA_Configuration\",\"version\",\"bogusVersion\"),\"</version>\",\n        \"<apiType>\",@namedContainers.namedStringListLookup(\"RSA_AA_Configuration\",\"apiType\",\"bogusApiType\"),\"</apiType>\",\n        \"<requestType>\",request_type,\"</requestType>\",\n        \"<timeStamp>\",@time.nowISO(@time.tz()),\"</timeStamp>\"\n],\"\"), false)"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "label": "messageHeader additions",
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "659aee41-383c-4adc-9e6d-f68ca72050d8",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "metadata": {
                                            "type": "auth_pass"
                                        },
                                        "type": "auth_pass"
                                    },
                                    "type": "action"
                                }
                            }
                        }
                    }
                },
                "name": "mae_soapify_rsa_adaptive_auth_request_subjourney",
                "id": "1c931b22-d12b-4be3-9e35-578db14c0aab"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/fb314752-c438-462d-bff5-bb8df59d46f1",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": {},
                                "type": "object"
                            },
                            "name": "mae_send_raa_notify_request_from_analyze_request_subjourney_output",
                            "description": "The result of the RAA Notify call. (Should be empty.)"
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "identificationData": {
                                            "type": "object",
                                            "properties": {
                                                "userStatus": {
                                                    "type": "string"
                                                },
                                                "sessionId": {
                                                    "type": "string"
                                                },
                                                "userName": {
                                                    "type": "string"
                                                },
                                                "transactionId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "userData": {
                                            "type": "object",
                                            "properties": {
                                                "lastAccoutOpenDate": {
                                                    "type": "string"
                                                },
                                                "onlineServiceEnrollDate": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "channelIndicator": {
                                            "type": "string"
                                        },
                                        "messageHeader": {
                                            "type": "object",
                                            "properties": {
                                                "requestId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "deviceRequest": {
                                            "type": "object",
                                            "properties": {
                                                "devicePrint": {
                                                    "type": "string"
                                                },
                                                "httpAcceptLanguage": {
                                                    "type": "string"
                                                },
                                                "httpAccept": {
                                                    "type": "string"
                                                },
                                                "ipAddress": {
                                                    "type": "string"
                                                },
                                                "userAgent": {
                                                    "type": "string"
                                                },
                                                "httpReferrer": {
                                                    "type": "string"
                                                },
                                                "deviceTokenCookie": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "eventDataList": {
                                            "type": "object",
                                            "properties": {
                                                "eventData": {
                                                    "type": "object",
                                                    "properties": {
                                                        "eventData": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "eventDescription": {
                                                                        "type": "string"
                                                                    },
                                                                    "clientDefinedAttributeList": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "dataType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "eventType": {
                                                                        "type": "string"
                                                                    },
                                                                    "clientDefinedEventType": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "analyze_request",
                            "description": "Analyze request as sent via mae_api_send_rsa_analyze_subjourney"
                        },
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "level": {
                                            "type": "integer"
                                        },
                                        "attemptsTryCount": {
                                            "type": "integer"
                                        },
                                        "successful": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "authentication_level",
                            "description": ""
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "transaction_id",
                            "description": "The transaction id returned by the original analyze call"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "3e9e1a3b-783f-420f-a514-978e20e1e856",
                    "metadata": {},
                    "procedure_id": "3cd43c56-e4ff-4cf8-972f-a83c9a58d8f8",
                    "frame_config": {
                        "params": [
                            {
                                "name": "analyze_request",
                                "value": {
                                    "type": "expression",
                                    "value": "analyze_request"
                                }
                            },
                            {
                                "name": "authentication_level",
                                "value": {
                                    "type": "expression",
                                    "value": "authentication_level"
                                }
                            },
                            {
                                "name": "transaction_id",
                                "value": {
                                    "type": "expression",
                                    "value": "transaction_id"
                                }
                            }
                        ]
                    },
                    "type": "procedure",
                    "child": {
                        "debug_id": "17272ece-824a-470d-bb1d-479a1a675837",
                        "metadata": {},
                        "procedure_id": "8fd29dc3-762d-4569-b261-7d46fcc67d04",
                        "frame_config": {
                            "params": [
                                {
                                    "name": "notify_request",
                                    "value": {
                                        "type": "expression",
                                        "value": "mae_create_raa_notify_request_from_analyze_request_subjourney_output"
                                    }
                                }
                            ]
                        },
                        "type": "procedure",
                        "child": {
                            "debug_id": "36ee3818-406b-4206-bd3a-9c96a4beb636",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "mae_send_raa_notify_request_from_analyze_request_subjourney_output",
                                        "value": {
                                            "type": "expression",
                                            "value": "mae_raa_notify_subjourney_result"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "5c5cf12b-4929-4686-b2b0-e819d3c54ff6",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "metadata": {
                                        "type": "auth_pass"
                                    },
                                    "type": "auth_pass"
                                },
                                "type": "action"
                            }
                        }
                    }
                },
                "name": "mae_send_raa_notify_request_from_analyze_request_subjourney",
                "id": "fb314752-c438-462d-bff5-bb8df59d46f1"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/df017958-7023-4ad6-bc57-50654bd31ff0",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "mae_persist_ping_fed_token_session_subjourney_output",
                            "description": "PingFed Reference Token "
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "auth_type",
                            "description": "Type of authorization SA | PA"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "mobile_user_status"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "ce43bb36-9778-41e4-9eb5-40e925aaf661",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "variables": [
                            {
                                "name": "transmit_jwt",
                                "value": {
                                    "type": "expression",
                                    "value": "@crypto.generateSignedJwt({\n    \"sub\":@policy.user().id,\n    \"SESSION_ID\":@policy.device().session.session_id,\n    \"AUTH_TYPE\":auth_type,\n    \"iss\":\"TS\",\n    \"aud\":`https://${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"mae_oa2_pingfed_api\")}`,\n    \"exp\":((@time.now()+7200000)/1000),\"iat\":@time.now(),\n    \"UB_MBL_USER_STATUS\":mobile_user_status\n  },\"pingts\",\"db\")"
                                }
                            }
                        ],
                        "metadata": {
                            "type": "set_variables"
                        },
                        "type": "set_variables"
                    },
                    "type": "action",
                    "child": {
                        "debug_id": "7a9975a9-8137-4e8b-b10d-fa044e8424eb",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "variables": [
                                {
                                    "name": "ping_reference_token",
                                    "value": {
                                        "type": "expression",
                                        "value": "@webrequests.oa2_api_webservicefunction_pingfed_token_oauth2(transmit_jwt).transformed_data"
                                    }
                                }
                            ],
                            "metadata": {
                                "notes": "Get the PingFed reference token",
                                "label": "Get the PingFed reference token",
                                "type": "set_variables"
                            },
                            "type": "set_variables"
                        },
                        "type": "action",
                        "child": {
                            "debug_id": "42d8db98-a20c-4d85-937d-9c76dd81210d",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "metadata": {
                                    "label": "Persist the PingFed reference token in session",
                                    "type": "custom_session_data"
                                },
                                "data": {
                                    "type": "expression",
                                    "value": "{\n    \"oa2_pf_access_token\": ping_reference_token\n}"
                                },
                                "scope": "session",
                                "deep_merge": false,
                                "type": "custom_data"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "3d2b6422-dad4-4da1-88f7-a56dae2c570a",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "mae_persist_ping_fed_token_session_subjourney_output",
                                            "value": {
                                                "type": "expression",
                                                "value": "\"\" + ping_reference_token"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "notes": "Set the subjourney output",
                                        "label": "Set the subjourney output",
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "2854dd74-3f4e-465b-820a-762fa165804c",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "metadata": {
                                            "type": "auth_pass"
                                        },
                                        "type": "auth_pass"
                                    },
                                    "type": "action"
                                }
                            }
                        }
                    }
                },
                "name": "mae_persist_ping_fed_token_session_subjourney",
                "id": "df017958-7023-4ad6-bc57-50654bd31ff0"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/e61291eb-86f0-4264-95fb-7ff978712c73",
            "data": {
                "provider_type": "function-web-request",
                "name": "mae_api_webservicefunction_customer_demographics_service",
                "provider_id": "e61291eb-86f0-4264-95fb-7ff978712c73",
                "config": {
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "body",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "The SOAP body of the request being sent to the customer demographics service",
                            "optional": false
                        }
                    ],
                    "wait_for_response": true,
                    "type": "function-web-request",
                    "web_request": {
                        "fail_on_non_2xx_response": false,
                        "headers": [
                            {
                                "name": "x-mufg-application-id",
                                "value": {
                                    "type": "expression",
                                    "value": "`MAE`"
                                }
                            },
                            {
                                "name": "Content-Type",
                                "value": {
                                    "type": "expression",
                                    "value": "`text/xml`"
                                }
                            }
                        ],
                        "response_format": {
                            "conversion_schema": "short",
                            "type": "xml"
                        },
                        "ssl_identities": {
                            "trusted_identities": []
                        },
                        "method": "post",
                        "connection_config": {
                            "follow_redirect": false,
                            "request_timeout": 60,
                            "use_cookie_store": false,
                            "connection_timeout": 5
                        },
                        "body": {
                            "type": "expression",
                            "value": "`${body}`"
                        },
                        "uri": {
                            "type": "expression",
                            "value": "`${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"mae_customer_demographics_service_uri\")}`"
                        },
                        "authentication": {
                            "type": "no"
                        },
                        "logging_config": {
                            "outgoing_requests_config": "info",
                            "ok_response_config": "info",
                            "failed_response_config": "warning"
                        }
                    }
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/authenticators/otp",
            "data": {
                "method": "otp",
                "level": 1,
                "provider_config": {
                    "method": "otp",
                    "config_id": "tab_mobile_app"
                },
                "category": "9668",
                "enabled": true
            },
            "category": "authconfig",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/caa22143-d843-4b45-b648-7280d3f6648d",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "ip_address",
                            "description": "ip address of the source"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "allow_url",
                            "description": ""
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "login_id",
                            "description": "login id (what the user types)"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "user_session_token",
                            "description": ""
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "raa_transaction_id",
                            "description": "Transaction ID returned by the RAA Analyze call"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "hrt_code",
                            "description": "HRT Code"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "sso_hash_id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "rsa_result",
                            "description": "\"ALLOW\", \"DENY\", \"CHALLENGE\", or \"ERROR\""
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "rsa_risk_score",
                            "description": "Risk score as returned by RAA Analyze"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "final_result",
                            "description": "\"SUCCESS\" or \"ERROR. \"ERROR\" means there was an error doing the authentication, like the server was down or something."
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "double"
                            },
                            "name": "rsa_stage_id",
                            "description": "Indicates where in the sequence diagram we are."
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "double"
                            },
                            "name": "failed_attempts",
                            "description": "Number of times authentication failed before the user succeeded or was locked out."
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "lock_user",
                            "description": "\"\" for no lock, \"regular\" for lock"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "user_failure_reason"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "tkn_or_otp",
                            "description": "\"TKN\" or \"OTP\""
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "cdde6df3-da90-4861-a667-0c0c2a94f53c",
                    "metadata": {},
                    "block": {
                        "false_branch": {
                            "debug_id": "eef1a2d4-64fd-416c-b8cf-58fdca123fbc",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "metadata": {
                                    "type": "custom_activity_log"
                                },
                                "data": {
                                    "type": "expression",
                                    "value": "{tkn_or_otp: tkn_or_otp}"
                                },
                                "report_type": {
                                    "type": "expression",
                                    "value": "`ERROR`"
                                },
                                "type": "custom_activity_log"
                            },
                            "type": "action"
                        },
                        "debug_id": "3a340972-3a85-4b89-a981-f4d36dc881b2",
                        "condition": {
                            "negated": false,
                            "metadata": {
                                "type": "generic_condition"
                            },
                            "field": {
                                "type": "expression",
                                "value": "tkn_or_otp == \"TKN\" || tkn_or_otp == \"OTP\""
                            },
                            "data_type": "boolean",
                            "type": "generic",
                            "operation": "==",
                            "value": {
                                "type": "expression",
                                "value": "true"
                            }
                        },
                        "true_branch": {
                            "debug_id": "d0a6481e-8668-426c-ae4a-8a3d0220e884",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "log_authentication_result_request",
                                        "value": {
                                            "type": "expression",
                                            "value": "{\n    \"hrtCode\": hrt_code,\n    \"rsaResult\": rsa_result,\n    \"rsaRiskScore\": rsa_risk_score,\n    \"finalResult\": final_result,\n    \"userName\": login_id,\n    \"rsaStageId\": \"\" + rsa_stage_id,\n    \"allowURL\": allow_url,\n    \"challengeType\": tkn_or_otp,\n    \"userFailureReason\": user_failure_reason,\n    \"failedAttempts\": \"\" + failed_attempts,\n    \"lockUser\": lock_user,\n    \"rsaFailurePayload\": \"\",\n    \"rsaFailureCode\": \"\",\n    \"rsaFailureMessage\": \"\"\n}"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "label": "Initialize request variable",
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "bd662336-fd07-4ab5-85e5-730936e7e786",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "log_authentication_result_response",
                                            "value": {
                                                "type": "expression",
                                                "value": "try \n    log_authentication_result_request != {}\n    ? @webrequests.wca_api_webservicefunction_log_authentication_result(sso_hash_id, log_authentication_result_request, raa_transaction_id, user_session_token) \n    : {\"responseCode\": \"9999\", \"responseDescription\": \"Empty RAA request\"}\ncatch (error) => {ERROR: error}"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "notes": null,
                                        "label": null,
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action"
                            }
                        },
                        "type": "condition"
                    },
                    "type": "block",
                    "child": {
                        "debug_id": "ad883771-fba3-4f69-ac1b-efce872bd35e",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "metadata": {
                                "type": "auth_pass"
                            },
                            "type": "auth_pass"
                        },
                        "type": "action"
                    }
                },
                "name": "mae_log_token_otp_authentication_result_sso_subjourney",
                "id": "caa22143-d843-4b45-b648-7280d3f6648d"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/76d8dbdd-7774-43f2-9e5a-68f91ab8bbff",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_salted_hash",
                "provider_id": "76d8dbdd-7774-43f2-9e5a-68f91ab8bbff",
                "config": {
                    "return_type": {
                        "type": "string"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "@strings.bytesToHex(@crypto.sha256(@strings.stringToBytes(@identities.extractCredentials(\"shp_hash_salt\", \"db\").secret + @strings.locase(string))))"
                    },
                    "description": "Take a string as an input and returns a salted string value of the input string.",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "string",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "string",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/policies/default_bind",
            "data": {
                "policy_id": "default_bind",
                "versions": [
                    {
                        "schema_version": 2,
                        "filter_criteria": {
                            "type": "expression",
                            "value": {
                                "type": "expression",
                                "value": "true"
                            }
                        },
                        "workflow": {
                            "debug_id": "c4689561-5978-4524-accc-3246312b7c78",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "debug",
                                        "value": {
                                            "type": "expression",
                                            "value": "@namedContainers.namedStringListLookup(\"tab_mobile_app_debug_user_list_login_pre_auth\", @policy.user().id, \"\") == \"\" ? false : true"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "notes": "Typed List: tab_mobile_app_debug_user_list_login_pre_auth",
                                    "label": "Debug base on User Id",
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "8a6eac3f-0219-4749-b92b-ed7675ea91ef",
                                "metadata": {
                                    "label": "Debug output"
                                },
                                "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                "frame_config": {
                                    "params": [
                                        {
                                            "name": "debug",
                                            "value": {
                                                "type": "expression",
                                                "value": "debug"
                                            }
                                        },
                                        {
                                            "name": "text",
                                            "value": {
                                                "type": "expression",
                                                "value": "`------------------------------------------------------------------\nPre-Login (Bind Journey)\n------------------------------------------------------------------\nuser id = ${@policy.user().id}\n------------------------------------------------------------------\nauth_type = ${@policy.request().params[\"auth_type\"]}\n------------------------------------------------------------------\ntab_app_version = ${@policy.request().params[\"tab_app_version\"]}\n------------------------------------------------------------------\nraa_device_fingerprint = ${@policy.request().params[\"raa_device_fingerprint\"]}\n------------------------------------------------------------------\nshp_telemetry_headers = ${@policy.request().params[\"shp_telemetry_headers\"]}\n------------------------------------------------------------------\n`"
                                            }
                                        },
                                        {
                                            "name": "heading",
                                            "value": {
                                                "type": "expression",
                                                "value": "\"Bind Journey\""
                                            }
                                        },
                                        {
                                            "name": "comment",
                                            "value": {
                                                "type": "expression",
                                                "value": "``"
                                            }
                                        }
                                    ]
                                },
                                "type": "procedure",
                                "child": {
                                    "debug_id": "07cf3d88-a8fb-49a9-9b66-fc24ce504de6",
                                    "metadata": {},
                                    "procedure_id": "0fc071bc-b598-4626-9f5a-19392699aa8a",
                                    "frame_config": {
                                        "params": [
                                            {
                                                "name": "debug",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "debug"
                                                }
                                            }
                                        ]
                                    },
                                    "type": "procedure",
                                    "child": {
                                        "debug_id": "d711a87f-d27e-4f87-9bae-6ac79adce141",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "metadata": {
                                                "type": "auth_pass"
                                            },
                                            "type": "auth_pass"
                                        },
                                        "type": "action"
                                    }
                                }
                            }
                        },
                        "version_id": "default_version",
                        "state": "version",
                        "desc": "Default Version"
                    }
                ],
                "type": "bind",
                "desc": "New device registration"
            },
            "category": "policy",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/ac9c9e4b-fb18-4b0c-9203-73c71db421da",
            "data": {
                "provider_type": "function-web-request",
                "name": "mae_api_webservicefunction_get_user_phone_numbers",
                "provider_id": "ac9c9e4b-fb18-4b0c-9203-73c71db421da",
                "config": {
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "user_hash_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        }
                    ],
                    "wait_for_response": true,
                    "type": "function-web-request",
                    "web_request": {
                        "fail_on_non_2xx_response": true,
                        "headers": [
                            {
                                "name": "X-MUFG-Request-Uuid",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@std.uuid()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-Request-Ts",
                                "value": {
                                    "type": "expression",
                                    "value": "`@time.nowISO(@time.tz())`"
                                }
                            }
                        ],
                        "response_format": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "headers": {
                                        "type": "object"
                                    },
                                    "multiValueHeaders": {
                                        "type": "object"
                                    },
                                    "body": {
                                        "type": "object",
                                        "properties": {
                                            "phones": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "phoneTypeDesc": {
                                                            "type": "string"
                                                        },
                                                        "oobStatusDesc": {
                                                            "type": "string"
                                                        },
                                                        "phoneTypeCd": {
                                                            "type": "string"
                                                        },
                                                        "phoneNumber": {
                                                            "type": "string"
                                                        },
                                                        "textBankingCode": {
                                                            "type": "string"
                                                        },
                                                        "oobStatusCode": {
                                                            "type": "number"
                                                        },
                                                        "smsStatusCode": {
                                                            "type": "string"
                                                        },
                                                        "lastUpdateDt": {
                                                            "type": "string"
                                                        },
                                                        "oobEligibilityDt": {
                                                            "type": "string"
                                                        },
                                                        "alertsStatusCode": {
                                                            "type": "string"
                                                        },
                                                        "createDt": {
                                                            "type": "string"
                                                        },
                                                        "phoneExtn": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "status": {
                                        "type": "number"
                                    }
                                }
                            },
                            "type": "json_object"
                        },
                        "ssl_identities": {
                            "trusted_identities": []
                        },
                        "method": "get",
                        "connection_config": {
                            "follow_redirect": false,
                            "request_timeout": 30,
                            "use_cookie_store": false,
                            "connection_timeout": 5
                        },
                        "uri": {
                            "type": "expression",
                            "value": "`${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"mae_userphones_url\")}/${user_hash_id}/phones`"
                        },
                        "authentication": {
                            "credentials_ref": {
                                "provider_type": "db",
                                "alias": "mae_wca_api_svc_wamae03",
                                "type": "credentials"
                            },
                            "type": "basic"
                        },
                        "logging_config": {
                            "outgoing_requests_config": "info",
                            "ok_response_config": "info",
                            "failed_response_config": "warning"
                        }
                    }
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/36a26f46-aaec-4867-b901-541dce7e8c30",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_parse_raa_requesttype_actioncode",
                "provider_id": "36a26f46-aaec-4867-b901-541dce7e8c30",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "raaRequestType": {
                                    "type": "string"
                                },
                                "raaActionCode": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let requestType = raa_response.messageHeader.requestType,\n    actionCode = !raa_response.success\n        ? \"DENY\"\n        : (\n            raa_response.messageHeader.requestType == \"ANALYZE\" \n            ? (\n                raa_response.riskResult.triggeredRule != null \n                ? (\n                    raa_response.riskResult.triggeredRule.actionCode == \"REDIRECT_CHALLENGE\" \n                    ? \"CHALLENGE\" \n                    : raa_response.riskResult.triggeredRule.actionCode\n                ) \n                : \"ALLOW\"\n            ) \n            : (\n                raa_response.credentialAuthResultList.challengeQuestionAuthResult.payload.challengeQuestionMatchResult.wasSuccessful == \"true\"\n                ? \"ALLOW\" \n                : (\n                    final_attempt\n                    ? \"DENY\" \n                    : \"CHALLENGE\"\n                )\n            )\n        )\nreturn {\n    \"raaRequestType\": requestType,\n    \"raaActionCode\": actionCode\n}"
                    },
                    "description": "Parse the RSA Adaptive Auth Response to determine the request type and action code",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "raa_response",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "description": "Response from RSA Adaptive Auth",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "final_attempt",
                            "type_descriptor": {
                                "type": "boolean"
                            },
                            "description": "Is this the user's last allowed attempt?",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/b0cdff20-fc72-4203-a661-71ea04bee268",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "challengeQuestionAuthResult": {
                                            "type": "object",
                                            "properties": {
                                                "payload": {
                                                    "type": "object",
                                                    "properties": {
                                                        "authenticationResult": {
                                                            "type": "object",
                                                            "properties": {
                                                                "authStatusCode": {
                                                                    "type": "string"
                                                                },
                                                                "risk": {
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "challengeQuestionMatchResult": {
                                                            "type": "object",
                                                            "properties": {
                                                                "failCount": {
                                                                    "type": "integer"
                                                                },
                                                                "wasSuccessful": {
                                                                    "type": "boolean"
                                                                },
                                                                "shouldBlock": {
                                                                    "type": "boolean"
                                                                },
                                                                "matchCount": {
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "mae_send_rsa_authenticate_subjourney_output",
                            "description": "The result of the RAA Authenticate call."
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "identificationData": {
                                            "type": "object",
                                            "properties": {
                                                "userStatus": {
                                                    "type": "string"
                                                },
                                                "sessionId": {
                                                    "type": "string"
                                                },
                                                "userName": {
                                                    "type": "string"
                                                },
                                                "transactionId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "messageHeader": {
                                            "type": "object",
                                            "properties": {
                                                "requestId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "credentialDataList": {
                                            "type": "object",
                                            "properties": {
                                                "challengeQuestionData": {
                                                    "type": "object",
                                                    "properties": {
                                                        "payload": {
                                                            "type": "object",
                                                            "properties": {
                                                                "challengeQuestion": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "challengeQuestions": {
                                                                            "minItems": 0,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "questionId": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userAnswer": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "actualAnswerOnFile": {
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "deviceRequest": {
                                            "type": "object",
                                            "properties": {
                                                "devicePrint": {
                                                    "type": "string"
                                                },
                                                "httpAcceptLanguage": {
                                                    "type": "string"
                                                },
                                                "httpAccept": {
                                                    "type": "string"
                                                },
                                                "ipAddress": {
                                                    "type": "string"
                                                },
                                                "userAgent": {
                                                    "type": "string"
                                                },
                                                "httpReferrer": {
                                                    "type": "string"
                                                },
                                                "deviceTokenCookie": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "authenticate_request",
                            "description": "An analyze request following the RSA Adaptive Auth swagger"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "cb00124d-fced-415e-9926-86d8f76fa29b",
                    "metadata": {
                        "label": "Build the SOAP message"
                    },
                    "procedure_id": "1c931b22-d12b-4be3-9e35-578db14c0aab",
                    "frame_config": {
                        "params": [
                            {
                                "name": "input",
                                "value": {
                                    "type": "expression",
                                    "value": "authenticate_request"
                                }
                            },
                            {
                                "name": "name",
                                "value": {
                                    "type": "expression",
                                    "value": "\"request3\""
                                }
                            },
                            {
                                "name": "namespace",
                                "value": {
                                    "type": "expression",
                                    "value": "\"ns2\""
                                }
                            },
                            {
                                "name": "namespace_url",
                                "value": {
                                    "type": "expression",
                                    "value": "\"http://ws.csd.rsa.com\""
                                }
                            },
                            {
                                "name": "request_type",
                                "value": {
                                    "type": "expression",
                                    "value": "\"AUTHENTICATE\""
                                }
                            }
                        ]
                    },
                    "type": "procedure",
                    "child": {
                        "debug_id": "0e09ae74-c522-4f0e-b607-e3b8018506ee",
                        "metadata": {
                            "label": "Send to RSA AA"
                        },
                        "procedure_id": "cdf61358-f547-41bf-b353-01cb18b7de8c",
                        "frame_config": {
                            "params": [
                                {
                                    "name": "rsa_soap_request",
                                    "value": {
                                        "type": "expression",
                                        "value": "mae_soapify_rsa_adaptive_auth_request_subjourney_output"
                                    }
                                }
                            ]
                        },
                        "type": "procedure",
                        "child": {
                            "false_branch": {
                                "debug_id": "0afe7d88-37be-4002-9e1a-4580827f3c02",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "mae_send_rsa_authenticate_subjourney_output",
                                            "value": {
                                                "type": "expression",
                                                "value": "{} + mae_invoke_rsa_api_subjourney_result"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "label": "Failed",
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "593af5e2-3e35-41bc-9f11-c1298083e639",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "metadata": {
                                            "type": "auth_pass"
                                        },
                                        "type": "auth_pass"
                                    },
                                    "type": "action"
                                }
                            },
                            "debug_id": "d6a54233-f026-40ac-96dd-b0716e551985",
                            "condition": {
                                "negated": false,
                                "metadata": {
                                    "label": "Did it work?",
                                    "type": "generic_condition"
                                },
                                "field": {
                                    "type": "expression",
                                    "value": "mae_invoke_rsa_api_subjourney_result.success"
                                },
                                "data_type": "boolean",
                                "type": "generic",
                                "operation": "==",
                                "value": {
                                    "type": "expression",
                                    "value": "true"
                                }
                            },
                            "true_branch": {
                                "debug_id": "51a475fd-4214-4d7f-b80c-1bd6daf637a9",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "authret",
                                            "value": {
                                                "type": "expression",
                                                "value": "mae_invoke_rsa_api_subjourney_result.output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:authenticateReturn\"][0]"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "label": "Succeeded!",
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "412511fc-f0f4-4922-97f8-95e232628ae4",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "variables": [
                                            {
                                                "name": "mae_send_rsa_authenticate_subjourney_output",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "{\n    success: true,\n    statusCode: \"200\",\n    statusHeader: {\n        statusCode: authret[\"ns0:statusHeader\"][0][\"ns0:statusCode\"][0].__text\n    },\n    credentialAuthResultList: {\n        challengeQuestionAuthResult: {\n            payload: {\n                challengeQuestionMatchResult: {\n                    failCount: authret[\"ns0:credentialAuthResultList\"][0][\"ns0:challengeQuestionAuthResult\"][0][\"ns0:payload\"][0][\"ns0:challengeQuestionMatchResult\"][0][\"ns0:failCount\"][0].__text,\n                    wasSuccessful: authret[\"ns0:credentialAuthResultList\"][0][\"ns0:challengeQuestionAuthResult\"][0][\"ns0:payload\"][0][\"ns0:challengeQuestionMatchResult\"][0][\"ns0:wasSuccessful\"][0].__text,\n                    matchCount: authret[\"ns0:credentialAuthResultList\"][0][\"ns0:challengeQuestionAuthResult\"][0][\"ns0:payload\"][0][\"ns0:challengeQuestionMatchResult\"][0][\"ns0:matchCount\"][0].__text,\n                    shouldBlock: authret[\"ns0:credentialAuthResultList\"][0][\"ns0:challengeQuestionAuthResult\"][0][\"ns0:payload\"][0][\"ns0:challengeQuestionMatchResult\"][0][\"ns0:shouldBlock\"][0].__text\n                }\n            }\n        }\n    },\n    messageHeader: {\n        requestId: authret[\"ns0:messageHeader\"][0][\"ns0:requestId\"][0].__text,\n        requestType: authret[\"ns0:messageHeader\"][0][\"ns0:requestType\"][0].__text,\n        timeStamp: authret[\"ns0:messageHeader\"][0][\"ns0:timeStamp\"][0].__text,\n        version: authret[\"ns0:messageHeader\"][0][\"ns0:version\"][0].__text\n    }\n}"
                                                }
                                            }
                                        ],
                                        "metadata": {
                                            "label": "Build return value",
                                            "type": "set_variables"
                                        },
                                        "type": "set_variables"
                                    },
                                    "type": "action",
                                    "child": {
                                        "debug_id": "a32158eb-0767-4438-a86e-8ced9fb5d563",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "metadata": {
                                                "type": "auth_pass"
                                            },
                                            "type": "auth_pass"
                                        },
                                        "type": "action"
                                    }
                                }
                            },
                            "type": "condition"
                        }
                    }
                },
                "name": "mae_send_rsa_authenticate_subjourney",
                "id": "b0cdff20-fc72-4203-a661-71ea04bee268"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/ee677234-d021-4b13-a366-f540c19514bd",
            "data": {
                "provider_type": "function-authscript",
                "name": "bco_api_authscriptfunction_is_bco_user",
                "provider_id": "ee677234-d021-4b13-a366-f540c19514bd",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "call_status": {
                                    "type": "string"
                                },
                                "is_bco_user": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let failure_response = {\n            call_status: \"Unspecified Error\",\n            is_bco_user: false\n          }\nreturn\n  try\n    let result = @webrequests.bco_webservicefunction_is_bco_user(ssoHashId)\n    return\n      result.status == 200 || result.status == 400\n        ? {\n            call_status: \"Succeeded\", \n            is_bco_user: result.transformed_data.isBCOUser\n          }\n        : failure_response + {call_status: \"Call returned status code \" + result.status}\n  catch failure_response"
                    },
                    "description": "This function wraps the call to bco_webservicefunction_is_bco_user external connection and handles any errors.",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "ssoHashId",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "SSO Hash Id of the user",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/63ca7ec8-3739-4a35-9d3f-944d62aec5ad",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_get",
                "provider_id": "63ca7ec8-3739-4a35-9d3f-944d62aec5ad",
                "config": {
                    "return_type": {
                        "type": "any"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let collection = (x) => @contains([\"array\", \"object\"], @typeof(x)) return\n@reduce(path, object, (acc, x) => @(collection)(acc) ? acc[x] : null)"
                    },
                    "description": "given a nested object or array and a path, retrieve the value at the location given by the path array",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "object",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "description": "a container to be traversed",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "path",
                            "type_descriptor": {
                                "type": "array"
                            },
                            "description": "an array of property names or indexes",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/cd5f753f-f00b-4ab1-96b6-498004e0dcd6",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_get_session_object",
                "provider_id": "cd5f753f-f00b-4ab1-96b6-498004e0dcd6",
                "config": {
                    "return_type": {
                        "schema": {
                            "$schema": "http://json-schema.org/draft/2019-09/schema",
                            "type": "object",
                            "properties": {
                                "oa2": {
                                    "title": "The schema for oa2 properties",
                                    "type": "object",
                                    "properties": {
                                        "pf_access_token": {
                                            "title": "The ping federate access token",
                                            "type": "string"
                                        }
                                    }
                                },
                                "wca": {
                                    "title": "The schema for wca properties",
                                    "type": "object",
                                    "properties": {
                                        "customer_type": {
                                            "title": "The type of customer",
                                            "type": "string"
                                        },
                                        "rsa_id": {
                                            "title": "The rsa id for the user",
                                            "type": "string"
                                        },
                                        "sso_hash_id": {
                                            "title": "The SSO hash id of the user",
                                            "type": "string"
                                        },
                                        "is_token_enabled": {
                                            "title": "If the user has a token enabled",
                                            "type": "boolean"
                                        },
                                        "scq_question_registered": {
                                            "title": "Does the user have scq questions registered",
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "otp": {
                                    "title": "The schema for one time password properties",
                                    "type": "object",
                                    "properties": {
                                        "phone_numbers": {
                                            "title": "The phone numbers associated with the one time password",
                                            "type": "object"
                                        },
                                        "risk_transaction_id": {
                                            "title": "The phone risk transaction id",
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "$id": "http://example.com/example.json"
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "@policy.session().custom_data"
                    },
                    "description": "This function will return the session object with the schema",
                    "arguments": [],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/db3cc771-a36f-41a4-8bd0-b801e33f8030",
            "data": {
                "provider_type": "function-web-request",
                "name": "mae_api_webservicefunction_shape_service",
                "provider_id": "db3cc771-a36f-41a4-8bd0-b801e33f8030",
                "config": {
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "body",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "description": "Request body",
                            "optional": false
                        }
                    ],
                    "wait_for_response": true,
                    "type": "function-web-request",
                    "web_request": {
                        "fail_on_non_2xx_response": false,
                        "headers": [],
                        "transform": {
                            "type": "expression",
                            "value": "let data = response.body[\"data\"] return\nlet shapeResponse = @typeof(data) == \"string\" ? @strings.fromjson(@strings.fromjson(data)) : data\nreturn {\n  \"isBot\": shapeResponse.isBot,\n  \"recommendation\": shapeResponse.recommendation,\n  \"inference_results\": shapeResponse.inference_results\n}"
                        },
                        "response_format": {
                            "type": "json_object"
                        },
                        "ssl_identities": {
                            "trusted_identities": []
                        },
                        "method": "post",
                        "connection_config": {
                            "follow_redirect": false,
                            "request_timeout": 30,
                            "use_cookie_store": false,
                            "connection_timeout": 5
                        },
                        "transform_schema": {
                            "type": "object",
                            "properties": {
                                "isBot": {
                                    "type": "string"
                                },
                                "recommendation": {
                                    "type": "string"
                                },
                                "inference_results": {
                                    "type": "string"
                                }
                            }
                        },
                        "body": {
                            "type": "expression",
                            "value": "`${body}`"
                        },
                        "uri": {
                            "type": "expression",
                            "value": "`${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"mae_lambda_api\")}/shapeheaders`"
                        },
                        "authentication": {
                            "type": "no"
                        },
                        "logging_config": {
                            "outgoing_requests_config": "info",
                            "ok_response_config": "info",
                            "failed_response_config": "warning"
                        }
                    }
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/12611a2f-7384-4632-ac40-eb02b26d19aa",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_get_user_phone_numbers",
                "provider_id": "12611a2f-7384-4632-ac40-eb02b26d19aa",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "phoneTypeDesc": {
                                        "type": "string"
                                    },
                                    "oobStatusDesc": {
                                        "type": "string"
                                    },
                                    "phoneTypeCd": {
                                        "type": "string"
                                    },
                                    "phoneNumber": {
                                        "type": "string"
                                    },
                                    "textBankingCode": {
                                        "type": "string"
                                    },
                                    "oobStatusCode": {
                                        "type": "number"
                                    },
                                    "smsStatusCode": {
                                        "type": "string"
                                    },
                                    "lastUpdateDt": {
                                        "type": "string"
                                    },
                                    "oobEligibilityDt": {
                                        "type": "string"
                                    },
                                    "alertsStatusCode": {
                                        "type": "string"
                                    },
                                    "createDt": {
                                        "type": "string"
                                    },
                                    "phoneExtn": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "type": "array"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "try \n    let result = @webrequests.mae_api_webservicefunction_get_user_phone_numbers(user_hash_id)\n    return \n        result.status == 200\n            ? result.body.phones\n            : []\ncatch\n    []"
                    },
                    "description": "Given a user's hash id, returns a list of all phone numbers known for that user.",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "user_hash_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "The user's hash id",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/59454a78-0175-44af-ba27-36df4354e11e",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_build_address_from_demographics",
                "provider_id": "59454a78-0175-44af-ba27-36df4354e11e",
                "config": {
                    "return_type": {
                        "type": "boolean"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "{\n  \"addressSupplement\": null,\n  \"streetAddress\": demographics.addr1,\n  \"city\": demographics.city,\n  \"stateCode\": demographics.state,\n  \"zipcode\": demographics.zip,\n  \"postalCode\": null,\n  \"provinceCode\": null\n}"
                    },
                    "description": "Calls the Customer Demographics service and returns an address object for use with Boku calls",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "demographics",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///credentials_identities/db/mae_wca_api_svc_wamae03#1",
            "constrains": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "category": "credentials",
            "type": "placeholder"
        },
        {
            "path": "tsasm:///providers/de2b5ccf-8471-470a-a8a4-7d97aeea245c",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_create_shape_lambda_request",
                "provider_id": "de2b5ccf-8471-470a-a8a4-7d97aeea245c",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "headers": {
                                    "type": "object"
                                },
                                "endpoint": {
                                    "type": "string"
                                },
                                "host": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "{\n    \"host\": shape_host,\n    \"endpoint\": shape_endpoint,\n    \"headers\": shape_headers\n}"
                    },
                    "description": "Create the request for the Shape lambda service",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "shape_host",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "shape host",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "shape_endpoint",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Shape Endpoint",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "shape_headers",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "description": "shape headers",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/844ad3b5-88df-48e7-b225-ca60f11e7a83",
            "data": {
                "provider_type": "function-web-request",
                "name": "rsa_adaptive_authentication",
                "provider_id": "844ad3b5-88df-48e7-b225-ca60f11e7a83",
                "config": {
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "body",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "The SOAP body of the request being sent to RSA Adaptive Auth",
                            "optional": false
                        }
                    ],
                    "wait_for_response": true,
                    "type": "function-web-request",
                    "web_request": {
                        "fail_on_non_2xx_response": false,
                        "headers": [
                            {
                                "name": "x-mufg-application-id",
                                "value": {
                                    "type": "expression",
                                    "value": "`MAE`"
                                }
                            },
                            {
                                "name": "Content-Type",
                                "value": {
                                    "type": "expression",
                                    "value": "`text/xml`"
                                }
                            }
                        ],
                        "response_format": {
                            "conversion_schema": "short",
                            "type": "xml"
                        },
                        "ssl_identities": {
                            "trusted_identities": []
                        },
                        "method": "post",
                        "connection_config": {
                            "follow_redirect": false,
                            "request_timeout": 60,
                            "use_cookie_store": false,
                            "connection_timeout": 5
                        },
                        "body": {
                            "type": "expression",
                            "value": "`${body}`"
                        },
                        "uri": {
                            "type": "expression",
                            "value": "`${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"mae_rsa_adaptive_auth_api\")}`"
                        },
                        "authentication": {
                            "type": "no"
                        },
                        "logging_config": {
                            "outgoing_requests_config": "info",
                            "ok_response_config": "info",
                            "failed_response_config": "warning"
                        }
                    }
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/9fd82a14-90ce-4051-8974-ddc07289c565",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_scq_form_input",
                "provider_id": "9fd82a14-90ce-4051-8974-ddc07289c565",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "scq_session_id": {
                                    "type": "string"
                                },
                                "scq_question": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "try\n  {\n    \"scq_question_text\": challenge_question.body.questionText,\n    \"scq_question_id\": challenge_question.body.questionId,\n    \"scq_response_invalid\": total_attempts > 0\n  }\ncatch\n  {\n    \"scq_question_text\": \"\",\n    \"scq_question_id\": \"0000000000\",\n    \"scq_response_invalid\": true\n  }"
                    },
                    "description": "Maps input to SCQ contract",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "challenge_question",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "total_attempts",
                            "type_descriptor": {
                                "type": "double"
                            },
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/92c51e49-93fa-4a82-9838-89750eddaae2",
            "data": {
                "provider_type": "function-web-request",
                "name": "wca_api_webservicefunction_log_authentication_result",
                "provider_id": "92c51e49-93fa-4a82-9838-89750eddaae2",
                "config": {
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "ssoHashId",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "SSO Hash Id of the user",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "requestBody",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "description": "Response from any SSO Auth API calls",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "rsaTransactionId",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "RSA Transaction Id",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "mufgUserSessionToken",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "MUFG User Session Token",
                            "optional": false
                        }
                    ],
                    "wait_for_response": true,
                    "type": "function-web-request",
                    "web_request": {
                        "fail_on_non_2xx_response": false,
                        "headers": [
                            {
                                "name": "Content-Type",
                                "value": {
                                    "type": "expression",
                                    "value": "`application/json`"
                                }
                            },
                            {
                                "name": "X-MUFG-Request-Uuid",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@std.uuid()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-Request-Ts",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@customFunctions.mae_api_authscriptfunction_request_timestamp()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-Application-Id",
                                "value": {
                                    "type": "expression",
                                    "value": "`SSO`"
                                }
                            },
                            {
                                "name": "X-WCA-RSA-TransactionId",
                                "value": {
                                    "type": "expression",
                                    "value": "`${rsaTransactionId}`"
                                }
                            },
                            {
                                "name": "X-MUFG-User-Session-Token",
                                "value": {
                                    "type": "expression",
                                    "value": "`${mufgUserSessionToken}`"
                                }
                            }
                        ],
                        "response_format": {
                            "type": "json_object"
                        },
                        "ssl_identities": {
                            "trusted_identities": []
                        },
                        "method": "post",
                        "connection_config": {
                            "follow_redirect": false,
                            "request_timeout": 30,
                            "use_cookie_store": false,
                            "connection_timeout": 5
                        },
                        "body": {
                            "type": "expression",
                            "value": "`${requestBody}`"
                        },
                        "uri": {
                            "type": "expression",
                            "value": "`https://${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"mae_wca_auth_rest_api\")}/ssoapi/mae/user-security/v1/iam/users/${ssoHashId}/log-authentication-result`"
                        },
                        "authentication": {
                            "credentials_ref": {
                                "provider_type": "db",
                                "alias": "mae_wca_api_svc_wamae03",
                                "type": "credentials"
                            },
                            "type": "basic"
                        },
                        "logging_config": {
                            "outgoing_requests_config": "info",
                            "ok_response_config": "info",
                            "failed_response_config": "warning"
                        }
                    }
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/f7e1481b-4827-4e0b-a604-3e4c413e2aeb",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "isBot": {
                                            "type": "string"
                                        },
                                        "recommendation": {
                                            "type": "string"
                                        },
                                        "inference_results": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "mae_shape_decision_subjourney_output",
                            "description": "response from the shape api call"
                        },
                        {
                            "type_descriptor": {
                                "type": "any"
                            },
                            "name": "shape_lambda_request_body"
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "type": "any"
                            },
                            "name": "policyRequest"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "channelType",
                            "description": "Valid values are 'mobile' or 'web'."
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "36c11536-902d-4724-b1ba-dca4d47971f2",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "variables": [
                            {
                                "name": "user_id",
                                "value": {
                                    "type": "expression",
                                    "value": "\"\" + policyRequest.userid"
                                }
                            }
                        ],
                        "metadata": {
                            "label": "Set User ID.",
                            "type": "set_variables"
                        },
                        "type": "set_variables"
                    },
                    "type": "action",
                    "child": {
                        "debug_id": "1b6f606a-159d-4e73-8975-c603008f0ff3",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "variables": [
                                {
                                    "name": "shapeTelemetryHeaders",
                                    "value": {
                                        "type": "expression",
                                        "value": "@std.typeof(policyRequest.params.shp_telemetry_headers) == \"string\" ? @strings.fromjson(policyRequest.params.shp_telemetry_headers) : policyRequest.params.shp_telemetry_headers"
                                    }
                                },
                                {
                                    "name": "saltedHashUserId",
                                    "value": {
                                        "type": "expression",
                                        "value": "@customFunctions.mae_api_authscriptfunction_salted_hash(user_id)"
                                    }
                                }
                            ],
                            "metadata": {
                                "label": "Set Shape Telemetry Headers Variable",
                                "type": "set_variables"
                            },
                            "type": "set_variables"
                        },
                        "type": "action",
                        "child": {
                            "false_branch": {
                                "debug_id": "4814dc02-8844-46b9-932d-118321d1cfd8",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "shape_lambda_request_body",
                                            "value": {
                                                "type": "expression",
                                                "value": "let shapeHeaders = {\n\"Accept\": policyRequest.headers.accept,\n\"Referer\": policyRequest.headers?.referer,\n\"Accept-Language\": policyRequest.headers[\"accept-language\"],\n\"Cookie\": policyRequest.headers.cookie,\n\"User-Agent\": policyRequest.headers[\"user-agent\"],\n\"sed-api-host\": policyRequest.headers.host,\n\"sed-api-ip\": policyRequest.client_ip,\n\"sed-api-path\":@customFunctions.mae_api_authscriptfunction_lookup_channel_env_setting(\"mae_shape_api_path\", \"mobile_consumer\"),\n\"sed-api-content-type\":\"application/json\",\n\"sed-api-userid\": saltedHashUserId,\n\"sed-api-txn-id\": @uuid(),\n\"sed-api-srcport\": @strings.split(policyRequest.headers[\"remote-address\"], \":\")[1],\n\"sed-api-timestamp\": @time.formatDateTime(\"E, d MMM y HH:mm:ss z\", @time.now()),\n\"sed-api-content-length\": policyRequest.headers[\"Content-Length\"] ? policyRequest.headers[\"Content-Length\"] : \"5509\" ,\n\"sed-api-txn-result\":\"false\",\n\"sed-api-method\": policyRequest.http_method,\n\"sed-api-scheme\":\"https\",\n\"sed-api-key\": @identities.extractCredentials(\"mae_shape_api_key\", \"db\").secret,\n\"x-forwarded-for\": policyRequest.headers[\"x-forwarded-for\"]} return\n@customFunctions.mae_api_authscriptfunction_create_shape_lambda_request(\n     @customFunctions.mae_api_authscriptfunction_lookup_channel_env_setting(\"mae_shape_api\", channelType), \n     @customFunctions.mae_api_authscriptfunction_lookup_channel_env_setting(\"mae_shape_endpoint\", channelType),\n     shapeHeaders + shapeTelemetryHeaders)"
                                            }
                                        },
                                        {
                                            "name": "mae_shape_decision_subjourney_output",
                                            "value": {
                                                "type": "expression",
                                                "value": "{\n    \"isBot\": \"False\",\n    \"recommendation\": \"MITIGATE\",\n    \"inference_results\": \"\"\n}"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "notes": "Create the request body for the Shape lambda service and initialize mae_shape_decision_subjourney_output variable",
                                        "label": "Create the request body for the Shape lambda service",
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "f380573f-53ff-4d8e-9e0a-7ba538d07769",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "variables": [
                                            {
                                                "name": "shape_decision",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "try \n    @webrequests.mae_api_webservicefunction_shape_service(shape_lambda_request_body)\ncatch (error) => {ERROR: error}"
                                                }
                                            }
                                        ],
                                        "metadata": {
                                            "notes": "shape_decision",
                                            "label": "Invoke the Shape Lambda",
                                            "type": "set_variables"
                                        },
                                        "type": "set_variables"
                                    },
                                    "type": "action",
                                    "child": {
                                        "debug_id": "e9eeb11a-55b0-44d5-a008-4d236d2494bb",
                                        "metadata": {},
                                        "procedure_id": "ad79d624-af71-42c9-91a6-3c644e67f8f7",
                                        "frame_config": {
                                            "params": [
                                                {
                                                    "name": "mae_response",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "shape_decision.transformed_data"
                                                    }
                                                },
                                                {
                                                    "name": "mae_response_type",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "`SHAPE`"
                                                    }
                                                },
                                                {
                                                    "name": "mae_ip_address",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "@policy.request().client_ip"
                                                    }
                                                },
                                                {
                                                    "name": "mae_allow_url",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "\"/auth/post-login-v3\""
                                                    }
                                                },
                                                {
                                                    "name": "mae_login_id",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "user_id"
                                                    }
                                                },
                                                {
                                                    "name": "mae_user_session_token",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "@policy.session().id"
                                                    }
                                                },
                                                {
                                                    "name": "mae_raa_transaction_id",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "\"\""
                                                    }
                                                },
                                                {
                                                    "name": "mae_hrt_code",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "\"11\""
                                                    }
                                                },
                                                {
                                                    "name": "mae_sso_hash_id",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "user_id"
                                                    }
                                                },
                                                {
                                                    "name": "final_attempt",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "false"
                                                    }
                                                }
                                            ]
                                        },
                                        "type": "procedure",
                                        "child": {
                                            "debug_id": "1aa34788-2563-47fb-afbe-86ac132a6d21",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "variables": [
                                                    {
                                                        "name": "mae_shape_decision_subjourney_output",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "shape_decision.transformed_data"
                                                        }
                                                    }
                                                ],
                                                "metadata": {
                                                    "notes": "Set the subjourney output",
                                                    "label": "Set the subjourney output",
                                                    "type": "set_variables"
                                                },
                                                "type": "set_variables"
                                            },
                                            "type": "action",
                                            "child": {
                                                "debug_id": "9ea3c8c0-590f-436a-821c-cf8173aec1e4",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "metadata": {
                                                        "type": "auth_pass"
                                                    },
                                                    "type": "auth_pass"
                                                },
                                                "type": "action"
                                            }
                                        }
                                    }
                                }
                            },
                            "debug_id": "a9533244-1919-441a-aaeb-eb010529873e",
                            "condition": {
                                "negated": false,
                                "metadata": {
                                    "label": "Is BOT from Telemetry",
                                    "type": "generic_condition"
                                },
                                "field": {
                                    "type": "expression",
                                    "value": "@contains(@keys(shapeTelemetryHeaders),\"isBot\") && @strings.locase(shapeTelemetryHeaders[\"isBot\"]) == \"true\""
                                },
                                "data_type": "boolean",
                                "type": "generic",
                                "operation": "==",
                                "value": {
                                    "type": "expression",
                                    "value": "true"
                                }
                            },
                            "true_branch": {
                                "debug_id": "e84a64eb-2a10-44e0-9609-f52ee5c00da2",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "mae_shape_decision_subjourney_output",
                                            "value": {
                                                "type": "expression",
                                                "value": "{\n  \"isBot\": \"N/A\",\n  \"recommendation\": \"MITIGATE\",\n  \"inference_results\": \"X Header isBot set to true\"\n}"
                                            }
                                        },
                                        {
                                            "name": "shape_lambda_request_body",
                                            "value": {
                                                "type": "expression",
                                                "value": "{}"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "bb40003d-79ef-451a-8be6-5d86c9d80ebe",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "metadata": {
                                            "type": "auth_pass"
                                        },
                                        "type": "auth_pass"
                                    },
                                    "type": "action"
                                }
                            },
                            "type": "condition"
                        }
                    }
                },
                "name": "mae_shape_decision_subjourney",
                "id": "f7e1481b-4827-4e0b-a604-3e4c413e2aeb"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/142eacd4-1be4-4cb7-af31-fe8c7ed7ef6a",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "type": "array"
                            },
                            "name": "mae_get_otp_phone_numbers_subjourney_output",
                            "description": "A list of phone numbers that are valid for OTP for the user specified"
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "sso_hash_id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "user_id"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "95f91519-8b0f-4028-b73c-c4ae81ee746d",
                    "metadata": {},
                    "procedure_id": "b7f1ace9-1395-4d32-9d41-f9ae13c9574e",
                    "frame_config": {
                        "params": [
                            {
                                "name": "ssoHashId",
                                "value": {
                                    "type": "expression",
                                    "value": "sso_hash_id"
                                }
                            }
                        ]
                    },
                    "type": "procedure",
                    "child": {
                        "debug_id": "fbfe7939-acc3-41b6-8a8c-8f43552c38f4",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "variables": [
                                {
                                    "name": "user_info",
                                    "value": {
                                        "type": "expression",
                                        "value": "@customFunctions.oa2_api_authscriptfunction_search_online_user_details(user_id)"
                                    }
                                },
                                {
                                    "name": "phone_risk_transaction_id",
                                    "value": {
                                        "type": "expression",
                                        "value": "@uuid()"
                                    }
                                }
                            ],
                            "metadata": {
                                "type": "set_variables"
                            },
                            "type": "set_variables"
                        },
                        "type": "action",
                        "child": {
                            "debug_id": "92b8ce88-cbd7-4133-be71-5e58ad19a43b",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "mae_get_otp_phone_numbers_subjourney_output",
                                        "value": {
                                            "type": "expression",
                                            "value": "@customFunctions.mae_api_authscriptfunction_get_phone_numbers_for_otp(user_info,@customFunctions.mae_api_authscriptfunction_get_session_object().otp.phone_numbers, phone_risk_transaction_id)"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "f7ce3ec7-9a01-4fd9-a5fb-c6eeef428804",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "metadata": {
                                        "type": "custom_session_data"
                                    },
                                    "data": {
                                        "type": "expression",
                                        "value": "let sessionData = [\n    {\n        \"path\": [\"otp\", \"phone_numbers\"],\n        \"value\": mae_get_otp_phone_numbers_subjourney_output\n    },\n    {\n        \"path\": [\"otp_phone_numbers\"],\n        \"value\": mae_get_otp_phone_numbers_subjourney_output\n    },\n    {\n        \"path\": [\"otp\", \"risk_transaction_id\"],\n        \"value\": phone_risk_transaction_id\n    },\n    {\n        \"path\": [\"phone_risk_transaction_id\"],\n        \"value\": phone_risk_transaction_id\n    }\n]\nreturn @reduce(sessionData, @policy.session().custom_data, (accum, x) => @customFunctions.mae_api_authscriptfunction_set(accum, x.path, x.value))"
                                    },
                                    "scope": "session",
                                    "deep_merge": false,
                                    "type": "custom_data"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "381d7a4b-b975-4dd1-b0de-701ddef215a7",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "metadata": {
                                            "type": "auth_pass"
                                        },
                                        "type": "auth_pass"
                                    },
                                    "type": "action"
                                }
                            }
                        }
                    }
                },
                "name": "mae_get_otp_phone_numbers_subjourney",
                "id": "142eacd4-1be4-4cb7-af31-fe8c7ed7ef6a"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/0da22fa0-59c8-404f-b185-d2453e0887e8",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_phone_risk_evaluation_phone_info",
                "provider_id": "0da22fa0-59c8-404f-b185-d2453e0887e8",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "phoneRiskTransactionId"
                            ],
                            "properties": {
                                "phoneRiskTransactionId": {
                                    "description": "This is a unique id for all calls to Boku in one transaction.  Note that one transaction may be multiple steps, and a customer may need to complete a phone risk process  multiple times, each time being a separate transaction.",
                                    "type": "string"
                                },
                                "phoneRiskResults": {
                                    "type": "object",
                                    "properties": {
                                        "confidenceScore": {
                                            "description": "This score indicates the level of confidence Boku has for the phone number. The score ranges from 0 - 100. A higher score indicates higher confidence. The confidence score considers all the attributes configured for the merchant at the time of onboarding.    Example: confidenceScore: 50",
                                            "type": "integer"
                                        },
                                        "phoneNumber": {
                                            "description": "The phone number on which the risk assessment is performed. It should in E.164 international format.      Example: +14085551234",
                                            "type": "string"
                                        },
                                        "phoneInfo": {
                                            "type": "object",
                                            "properties": {
                                                "serviceType": {
                                                    "description": "Indicates if the phone number is a mobile, fixed or VOIP. Example serviceType: mobile",
                                                    "type": "string"
                                                },
                                                "countryPhoneCode": {
                                                    "description": "The unique number given to each country for dialing a Telephone Number in that country from abroad. e.g. 1 (USA) e.g. 32 (Belgium) e.g. 353 (Ireland) e.g. 44 (UK)",
                                                    "type": "string"
                                                },
                                                "serviceProvider": {
                                                    "description": "Specifies the name of the carrier the phone number is registered to. Example serviceProvider: AT&T Wireless",
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "phoneVerificationMatchScores": {
                                            "type": "object",
                                            "properties": {
                                                "streetAddressScore": {
                                                    "description": "Level of match for the Street Address attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.      The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *5= Partial Match   *9=High Partial Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                },
                                                "lastNameScore": {
                                                    "description": "Level of match for the Last Name attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.      The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *5= Partial Match   *9=High Partial Match   *10=Exact Match   Example lastNameScore: 10",
                                                    "type": "integer"
                                                },
                                                "emailAddressScore": {
                                                    "description": "Level of match for the Email Address attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                },
                                                "cityScore": {
                                                    "description": "Level of match for the City attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                },
                                                "zipCodeScore": {
                                                    "description": "Level of match for the Postal Codeattribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                },
                                                "dataSourceForVerification": {
                                                    "description": "Returns the data source that the merchant data was compared against. Values can be Carrier or Third-Party . Example dataSource: Carrier",
                                                    "type": "string"
                                                },
                                                "firstNameScore": {
                                                    "description": "Level of match for the First Name attribute assigned to the submitted mobile number from low to high the higher the Match score, more accurate is the match. The Values could be: -2=Merchant did not submit data for attribute -1=Data not available for attribute 0=No Match 5= Partial Match 9=High Partial Match 10=Exact Match Example firstNameScore: 10",
                                                    "type": "integer"
                                                },
                                                "stateScore": {
                                                    "description": "Level of match for the State attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let failure_response = {\n    \"statusCode\": 0,\n    \"phoneRiskResults\": {\n        \"phoneNumber\": risk_evaluation_phone,\n        \"phoneVerificationMatchScores\": {\n            \"dataSourceForVerification\": null,\n            \"firstNameScore\": null,\n            \"lastNameScore\": null,\n            \"streetAddressScore\": null,\n            \"cityScore\": null,\n            \"stateScore\": null,\n            \"zipCodeScore\": null,\n            \"emailAddressScore\": null\n        },\n        \"phoneInfo\": {\n            \"serviceProvider\": \"Request Failed\",\n            \"serviceType\": \"Failed\",\n            \"countryPhoneCode\": \"XX\"\n        },\n        \"confidenceScore\": null\n    },\n    \"phoneRiskTransactionId\": phone_risk_transaction_id\n}\nreturn\n    try\n        let result = @webrequests.mol_phone_risk_evaluation({\n            \"requestType\":\"Phone Info\",\n            \"riskEvaluationPhone\":risk_evaluation_phone,\n            \"firstName\":null,\n            \"lastName\":null,\n            \"address\":{\n                \"addressSupplement\": null,\n                \"streetAddress\": null,\n                \"city\": null,\n                \"stateCode\": null,\n                \"zipcode\": null,\n                \"postalCode\": null,\n                \"provinceCode\": null\n            },\n            \"emailAddress\": null,\n            \"phoneRiskTransactionId\": phone_risk_transaction_id\n        })\n        return\n            result.status == 200\n                ? result.body + {statusCode: 200}\n                : failure_response + {statusCode: result.status}\n    catch failure_response"
                    },
                    "description": "Invokes mol_phone_risk_evaluation with requestType \"Phone Info\"",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "risk_evaluation_phone",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Goes in request.riskEvaluationPhone",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "phone_risk_transaction_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Goes in phoneRiskTransactionId. The same value should be used for all phone_risk_evaluation calls in a session.",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/410d422c-df49-470c-b30c-ba3dc0b88a52",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_create_shape_lar_request",
                "provider_id": "410d422c-df49-470c-b30c-ba3dc0b88a52",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "hrtCode": {
                                    "type": "string"
                                },
                                "logReason": {
                                    "type": "string"
                                },
                                "allowUrl": {
                                    "type": "string"
                                },
                                "ipAddress": {
                                    "type": "string"
                                },
                                "userName": {
                                    "type": "string"
                                },
                                "finalResult": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let finalResult = shape_response && shape_response.isBot != null ? \n                  (shape_response.recommendation == \"ALLOW\" ? \"ALLOW\" : \"DENY\") :\n                  \"ERROR\"\nreturn {\n    \"finalResult\": finalResult,\n    \"userName\": username,\n    \"allowURL\": allow_url,\n    \"logReason\": \"shape-analyze-result\",\n    \"ipAddress\": ip_address\n}"
                    },
                    "description": "Creates the Shape request object for LogAuthenticationResult",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "shape_response",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "description": "Response from Shape",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "username",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Username",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "ip_address",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "IP Address of the referrer",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "allow_url",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Domain name of the referrer (Probably optional)",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/296d6169-292b-497a-9d9f-8c11775d6358",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [],
                    "inputs": []
                },
                "workflow": {
                    "debug_id": "21cc4854-d638-4657-9ce3-7e0cc3a6c008",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "metadata": {
                            "type": "custom_token_enrichment"
                        },
                        "claims": [
                            {
                                "claim": "mcg_hrt_protected_endpoints",
                                "value": {
                                    "type": "expression",
                                    "value": "`{'/sec/transfer/execute-transfer-v1':'tab_hrt_transfer_execute_transfer','/sec/payment/execute-payment-v1':'tab_hrt_payment_execute_payment'}`"
                                }
                            }
                        ],
                        "type": "custom_token_enrichment"
                    },
                    "type": "action",
                    "child": {
                        "debug_id": "8eda423f-ef24-4227-9737-4dfd20370920",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "metadata": {
                                "type": "auth_pass"
                            },
                            "type": "auth_pass"
                        },
                        "type": "action"
                    }
                },
                "name": "Data-MCG-TSProtectedEndpoints",
                "id": "296d6169-292b-497a-9d9f-8c11775d6358"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/5f54801d-a845-4f14-a92c-dd3b8ecfd336",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_lookup_channel_env_setting",
                "provider_id": "5f54801d-a845-4f14-a92c-dd3b8ecfd336",
                "config": {
                    "return_type": {
                        "type": "string"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let env = @customFunctions.mae_api_authscriptfunction_get_current_environment()\nreturn @namedContainers.namedStringListLookup(list_id, channel_id + \"|\" + env,  @namedContainers.namedStringListLookup(list_id, channel_id, null))"
                    },
                    "description": "Given a Typed List / Named Container attempt to find a configuration setting by channel and environment.",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "list_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "List identifier",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "channel_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Valid vaules are 'mobile' or 'web'",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/bff5f063-8377-4ae5-8ace-e1356c3d21ce",
            "data": {
                "provider_type": "token-validation-external",
                "name": "wca_tokenvalidationservice_customwebservice_ca_strong_auth",
                "provider_id": "bff5f063-8377-4ae5-8ace-e1356c3d21ce",
                "config": {
                    "request": {
                        "fail_on_non_2xx_response": false,
                        "headers": [
                            {
                                "name": "X-MUFG-Request-Uuid",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@uuid()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-Request-Ts",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@customFunctions.mae_api_authscriptfunction_request_timestamp()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-Application-Id",
                                "value": {
                                    "type": "expression",
                                    "value": "`MAE`"
                                }
                            },
                            {
                                "name": "Content-Type",
                                "value": {
                                    "type": "expression",
                                    "value": "`application/json`"
                                }
                            }
                        ],
                        "transform": {
                            "type": "expression",
                            "value": "let wca_status = {\n  \"wca_status_code\": @namedContainers.namedStringListLookup(\"status_codes_map\", response.body[\"responseCode\"], response.body[\"responseCode\"])\n}, \nwca_response = {\n  \"responseCode\": null,\n  \"responseDescription\": null\n}\n\nreturn @contains([\"0000\",\"0010\",\"1000\",\"1040\",\"5001\",\"5002\"], wca_status.wca_status_code)\n  ? response.body + wca_status - wca_response\n  : wca_status"
                        },
                        "response_format": {
                            "type": "json_object"
                        },
                        "ssl_identities": {
                            "local_identity": {
                                "provider_type": "db",
                                "alias": "ssl_mobile_app_key",
                                "type": "local",
                                "version": "1"
                            },
                            "trusted_identities": []
                        },
                        "method": "post",
                        "connection_config": {
                            "follow_redirect": false,
                            "request_timeout": 30,
                            "use_cookie_store": false,
                            "connection_timeout": 5
                        },
                        "body": {
                            "type": "expression",
                            "value": "`${{\n    \"credential\": {\n        \"credentialAnswer\": @strings.urlDecode(token),\n        \"credentialType\": \"BIOMETRICS\",\n        \"credentialId\": \"\"\n    },\n    \"ipAddress\": @policy.request().client_ip,\n    \"userAgent\": @policy.request().headers.userAgent,\n    \"userName\": user_id,\n    \"channel\":\"MOBILE\"\n}}`"
                        },
                        "uri": {
                            "type": "expression",
                            "value": "`https://${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"mae_wca_auth_rest_api\")}/ssoapi/mae/user-security/v1/iam/authenticate-user`"
                        },
                        "authentication": {
                            "credentials_ref": {
                                "provider_type": "db",
                                "alias": "mae_wca_api_svc_wamae03",
                                "type": "credentials"
                            },
                            "type": "basic"
                        },
                        "logging_config": {
                            "outgoing_requests_config": "off",
                            "ok_response_config": "off",
                            "failed_response_config": "off"
                        }
                    },
                    "classifiers": {
                        "values": [
                            {
                                "expr": {
                                    "type": "expression",
                                    "value": "@contains([\"0000\",\"0010\",\"1000\",\"1040\",\"5001\",\"5002\"], response.body[\"responseCode\"])"
                                },
                                "value": "valid"
                            },
                            {
                                "expr": {
                                    "type": "expression",
                                    "value": "@contains([\"9999\"], response.body[\"responseCode\"])"
                                },
                                "value": "error"
                            }
                        ],
                        "fallback": "invalid"
                    },
                    "type": "token-validation-external"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/8acf5db4-7500-4f5d-bd1a-5a87b0645214",
            "data": {
                "provider_type": "function-web-request",
                "name": "wca_api_webservicefunction_get_active_answer",
                "provider_id": "8acf5db4-7500-4f5d-bd1a-5a87b0645214",
                "config": {
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "userId",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "SSO Hash Id of the user",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "questionId",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Question Id for which we need the answer for",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "rsaTransactionId",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "RSA Transaction Id",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "mufgUserSessionToken",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "MUFG User Session Token",
                            "optional": false
                        }
                    ],
                    "wait_for_response": true,
                    "type": "function-web-request",
                    "web_request": {
                        "fail_on_non_2xx_response": false,
                        "headers": [
                            {
                                "name": "Content-Type",
                                "value": {
                                    "type": "expression",
                                    "value": "`application/json`"
                                }
                            },
                            {
                                "name": "X-MUFG-Request-Uuid",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@std.uuid()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-Request-Ts",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@customFunctions.mae_api_authscriptfunction_request_timestamp()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-Application-Id",
                                "value": {
                                    "type": "expression",
                                    "value": "`SSO`"
                                }
                            },
                            {
                                "name": "X-WCA-RSA-TransactionId",
                                "value": {
                                    "type": "expression",
                                    "value": "`${rsaTransactionId}`"
                                }
                            },
                            {
                                "name": "X-MUFG-User-Session-Token",
                                "value": {
                                    "type": "expression",
                                    "value": "`${mufgUserSessionToken}`"
                                }
                            }
                        ],
                        "response_format": {
                            "type": "json_object"
                        },
                        "ssl_identities": {
                            "trusted_identities": []
                        },
                        "method": "get",
                        "connection_config": {
                            "follow_redirect": false,
                            "request_timeout": 30,
                            "use_cookie_store": false,
                            "connection_timeout": 5
                        },
                        "uri": {
                            "type": "expression",
                            "value": "`https://${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"mae_wca_auth_rest_api\")}/ssoapi/mae/user-security/v1/iam/users/${userId}/questions/${questionId}/answer`"
                        },
                        "authentication": {
                            "credentials_ref": {
                                "provider_type": "db",
                                "alias": "mae_wca_api_svc_wamae03",
                                "type": "credentials"
                            },
                            "type": "basic"
                        },
                        "logging_config": {
                            "outgoing_requests_config": "info",
                            "ok_response_config": "info",
                            "failed_response_config": "warning"
                        }
                    }
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/b5b5372b-1d12-4278-93ee-36f7625131a5",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_build_eventdata",
                "provider_id": "b5b5372b-1d12-4278-93ee-36f7625131a5",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "eventDescription": {
                                    "type": "string"
                                },
                                "eventType": {
                                    "type": "string"
                                },
                                "clientDefinedEventType": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "{\n    eventType: @namedContainers.namedStringListLookup(\"mae_hrt_code_map\", hrt_code + \"|event_type\", \"ERROR\"),\n    eventDescription: @namedContainers.namedStringListLookup(\"mae_hrt_code_map\", hrt_code + \"|event_description\", \"ERROR\"),\n    clientDefinedEventType: @namedContainers.namedStringListLookup(\"mae_hrt_code_map\", hrt_code + \"|client_defined_event_type\", \"ERROR\")\n}"
                    },
                    "description": "Given an HRT Code, return event type, event description, and client-defined event type",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "hrt_code",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "HRT Code",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/b645e024-2d03-4b13-bfc4-e7420176351f",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_get_current_environment",
                "provider_id": "b645e024-2d03-4b13-bfc4-e7420176351f",
                "config": {
                    "return_type": {
                        "type": "string"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "@strings.locase(@tsProp(\"env\", \"sandbox\"))"
                    },
                    "description": "Get the environment of this Transmit instance.",
                    "arguments": [],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/abd527c0-13c6-4419-8a85-05b3f86dcfc4",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_create_raa_lar_request",
                "provider_id": "abd527c0-13c6-4419-8a85-05b3f86dcfc4",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "rsaFailurePayload": {
                                    "type": "string"
                                },
                                "hrtCode": {
                                    "type": "string"
                                },
                                "failedAttempts": {
                                    "type": "string"
                                },
                                "challengeType": {
                                    "type": "string"
                                },
                                "rsaFailureMessage": {
                                    "type": "string"
                                },
                                "userName": {
                                    "type": "string"
                                },
                                "rsaResult": {
                                    "type": "string"
                                },
                                "rsaRiskScore": {
                                    "type": "string"
                                },
                                "userFailureReason": {
                                    "type": "string"
                                },
                                "allowUrl": {
                                    "type": "string"
                                },
                                "lockUser": {
                                    "type": "string"
                                },
                                "rsaFailureCode": {
                                    "type": "string"
                                },
                                "rsaStageId": {
                                    "type": "string"
                                },
                                "finalResult": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let rsaStageId = @namedContainers.namedStringListLookup(\"mae_raa_result_stageid_map\", `${raa_request_type}_${raa_action_code}`, \"\"),\n    rsaRiskScore = raa_response.riskResult == null ? \"\" : raa_response.riskResult.riskScore,\n    finalResult = raa_response.success ? \"SUCCESS\" : \"FAILURE\",\n    challengeType = raa_response.success && raa_request_type == \"AUTHENTICATE\" ? \"SCQ\" : \"\",\n    userFailureReason = (raa_action_code == \"DENY\" || !raa_response.success) ? \"RSA DENY\" : \"\",\n    failedAttempts = raa_response.success && raa_request_type == \"AUTHENTICATE\" \n                     ? raa_response.credentialAuthResultList.challengeQuestionAuthResult.payload.challengeQuestionMatchResult.failCount\n                     : \"0\",\n    lockUser = raa_action_code == \"DENY\" && raa_response.success ? \"regular\" : \"\",\n    rsaFailureCode = raa_action_code == \"DENY\" && raa_response.success ? raa_response.statusHeader.statusCode : \"\",\n    rsaFailurePayload = raa_action_code == \"DENY\" && raa_response.success ? raa_response.faultString : \"\",\n    rsaFailureMessage = raa_response.success ? \"\" : \"Error or exception occurred\"\nreturn {\n    \"hrtCode\": raa_hrt_code,\n    \"rsaResult\": raa_action_code,\n    \"rsaRiskScore\": rsaRiskScore,\n    \"finalResult\": finalResult,\n    \"userName\": username,\n    \"rsaStageId\": rsaStageId,\n    \"allowURL\": allow_url,\n    \"challengeType\": challengeType,\n    \"userFailureReason\": userFailureReason,\n    \"failedAttempts\": failedAttempts,\n    \"lockUser\": lockUser,\n    \"rsaFailurePayload\": rsaFailurePayload,\n    \"rsaFailureCode\": rsaFailureCode,\n    \"rsaFailureMessage\": rsaFailureMessage,\n    \"rsaStageId\": rsaStageId\n}"
                    },
                    "description": "Creates the RAA object request for LogAuthenticationResult",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "raa_response",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "description": "JSON Response from RSA AA",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "allow_url",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Domain of the requestor",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "raa_action_code",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "RSA AA Action Code",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "raa_request_type",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "RSA AA Request Type",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "username",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Username",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "raa_hrt_code",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "RSA AA HRT Code",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/5de752d3-8bfb-47f5-a2b4-ae0f7fdaf594",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_get_customer_demographics",
                "provider_id": "5de752d3-8bfb-47f5-a2b4-ae0f7fdaf594",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "zip": {
                                    "type": "string"
                                },
                                "cif": {
                                    "type": "string"
                                },
                                "addr1": {
                                    "type": "string"
                                },
                                "city": {
                                    "type": "string"
                                },
                                "officer": {
                                    "type": "string"
                                },
                                "homePhone": {
                                    "type": "string"
                                },
                                "tin": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "businessPhone": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "branch": {
                                    "type": "string"
                                },
                                "customerName": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "try \nlet request = `<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:impl=\"http://xml.generic.gateway.sso.uboc.com\">\n<soap:Body>\n<impl:performQuery>\n<impl:appId>${@identities.extractCredentials(\"ssoa\",\"db\").id}</impl:appId>\n<impl:passphrase>${@identities.extractCredentials(\"ssoa\",\"db\").secret}</impl:passphrase>\n<impl:query>query-customer-cif-information</impl:query>\n<impl:xml><![CDATA[<map><entry><string>sso-customer-cif</string><string>${cif}</string></entry></map>]]></impl:xml>\n</impl:performQuery>\n</soap:Body>\n</soap:Envelope>`\nreturn @xmlToJson(\n    @webrequests.mae_api_webservicefunction_customer_demographics_service(request)[\"body\"][\"env:Envelope\"][\"env:Body\"][0][\"performQueryResponse\"][0][\"performQueryReturn\"][0][\"__text\"]\n)[\"list\"][\"com.uboc.sso.host.cif.Customer\"]\ncatch\n{\n    \"tin\": null,\n    \"customerName\": null,\n    \"addr1\": null,\n    \"city\": null,\n    \"state\": null,\n    \"zip\": null,\n    \"cif\": null,\n    \"homePhone\": null,\n    \"businessPhone\": null,\n    \"branch\": null,\n    \"officer\": null,\n    \"message\": null\n}"
                    },
                    "description": "Call the customer demographics API and return the demographics information. On failure, returns the demographics object with all fields nulled out.",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "cif",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/633206e9-de9c-4fa5-85a0-c4cf8da149e0",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_phone_risk_evaluation_confidence_score",
                "provider_id": "633206e9-de9c-4fa5-85a0-c4cf8da149e0",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "phoneRiskTransactionId"
                            ],
                            "properties": {
                                "phoneRiskTransactionId": {
                                    "description": "This is a unique id for all calls to Boku in one transaction.  Note that one transaction may be multiple steps, and a customer may need to complete a phone risk process  multiple times, each time being a separate transaction.",
                                    "type": "string"
                                },
                                "phoneRiskResults": {
                                    "type": "object",
                                    "properties": {
                                        "confidenceScore": {
                                            "description": "This score indicates the level of confidence Boku has for the phone number. The score ranges from 0 - 100. A higher score indicates higher confidence. The confidence score considers all the attributes configured for the merchant at the time of onboarding.    Example: confidenceScore: 50",
                                            "type": "integer"
                                        },
                                        "phoneNumber": {
                                            "description": "The phone number on which the risk assessment is performed. It should in E.164 international format.      Example: +14085551234",
                                            "type": "string"
                                        },
                                        "phoneInfo": {
                                            "type": "object",
                                            "properties": {
                                                "serviceType": {
                                                    "description": "Indicates if the phone number is a mobile, fixed or VOIP. Example serviceType: mobile",
                                                    "type": "string"
                                                },
                                                "countryPhoneCode": {
                                                    "description": "The unique number given to each country for dialing a Telephone Number in that country from abroad. e.g. 1 (USA) e.g. 32 (Belgium) e.g. 353 (Ireland) e.g. 44 (UK)",
                                                    "type": "string"
                                                },
                                                "serviceProvider": {
                                                    "description": "Specifies the name of the carrier the phone number is registered to. Example serviceProvider: AT&T Wireless",
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "phoneVerificationMatchScores": {
                                            "type": "object",
                                            "properties": {
                                                "streetAddressScore": {
                                                    "description": "Level of match for the Street Address attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.      The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *5= Partial Match   *9=High Partial Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                },
                                                "lastNameScore": {
                                                    "description": "Level of match for the Last Name attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.      The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *5= Partial Match   *9=High Partial Match   *10=Exact Match   Example lastNameScore: 10",
                                                    "type": "integer"
                                                },
                                                "emailAddressScore": {
                                                    "description": "Level of match for the Email Address attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                },
                                                "cityScore": {
                                                    "description": "Level of match for the City attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                },
                                                "zipCodeScore": {
                                                    "description": "Level of match for the Postal Codeattribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                },
                                                "dataSourceForVerification": {
                                                    "description": "Returns the data source that the merchant data was compared against. Values can be Carrier or Third-Party . Example dataSource: Carrier",
                                                    "type": "string"
                                                },
                                                "firstNameScore": {
                                                    "description": "Level of match for the First Name attribute assigned to the submitted mobile number from low to high the higher the Match score, more accurate is the match. The Values could be: -2=Merchant did not submit data for attribute -1=Data not available for attribute 0=No Match 5= Partial Match 9=High Partial Match 10=Exact Match Example firstNameScore: 10",
                                                    "type": "integer"
                                                },
                                                "stateScore": {
                                                    "description": "Level of match for the State attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let failure_response = {\n        \"phoneRiskResults\": {\n        \"phoneNumber\": risk_evaluation_phone,\n        \"phoneVerificationMatchScores\": {\n            \"dataSourceForVerification\": null,\n            \"firstNameScore\": null,\n            \"lastNameScore\": null,\n            \"streetAddressScore\": null,\n            \"cityScore\": null,\n            \"stateScore\": null,\n            \"zipCodeScore\": null,\n            \"emailAddressScore\": null\n        },\n        \"phoneInfo\": {\n            \"serviceProvider\": null,\n            \"serviceType\": null,\n            \"countryPhoneCode\": null\n        },\n        \"confidenceScore\": 0\n    },\n    \"phoneRiskTransactionId\": phone_risk_transaction_id\n}\nreturn \n    try\n        let result = @webrequests.mol_phone_risk_evaluation({\n            \"requestType\":\"Confidence Score\",\n            \"riskEvaluationPhone\":risk_evaluation_phone,\n            \"firstName\":null,\n            \"lastName\":null,\n            \"address\":{\n                \"addressSupplement\": null,\n                \"streetAddress\": null,\n                \"city\": null,\n                \"stateCode\": null,\n                \"zipcode\": null,\n                \"postalCode\": null,\n                \"provinceCode\": null\n            },\n            \"emailAddress\": null,\n            \"phoneRiskTransactionId\": phone_risk_transaction_id\n        })\n        return\n            result.status == 200\n                ? result.body\n                : failure_response\n    catch failure_response"
                    },
                    "description": "Invokes mol_phone_risk_evaluation with requestType \"Confidence Score\"",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "risk_evaluation_phone",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Goes in request.riskEvaluationPhone",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "phone_risk_transaction_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Goes in phoneRiskTransactionId. The same value should be used for all phone_risk_evaluation calls in a session.",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/b8517516-afa4-4317-a95b-8c12fc49f58f",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_separate_seasoned_unseasoned_phone_numbers",
                "provider_id": "b8517516-afa4-4317-a95b-8c12fc49f58f",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "phoneNumber": {
                                    "type": "string"
                                },
                                "seasoned": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let now = @time.now()\nreturn {\n    seasoned: @time.isoToEpoch(phone_object.oobEligibilityDatetime) <= now,\n    phoneNumber: phone_object.phoneNumber\n}"
                    },
                    "description": "Takes the results of the userphones service and determines which phone numbers are seasoned and which aren't",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "phone_object",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "description": "One \"phone\" object from the results from a userphones call",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/f19002aa-72d8-44fb-8f2c-f400ac79472c",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "is_login_flow"
                        }
                    ]
                },
                "workflow": {
                    "false_branch": {
                        "debug_id": "671ca807-2dc4-4db8-8879-5ab34b5b09cd",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "clear_session": false,
                            "metadata": {
                                "type": "reject"
                            },
                            "type": "reject",
                            "failure_data": {
                                "type": "expression",
                                "value": "{\n  \"ub_reject_access_code\": \"2999\",\n  \"ub_reject_access_message\": \"An unexpected error occurred. Please try again, or tap Call Us for assistance.\"\n}"
                            }
                        },
                        "type": "action"
                    },
                    "debug_id": "ecc76a3b-45da-425b-9eb6-5589ef5f7d94",
                    "condition": {
                        "negated": false,
                        "metadata": {
                            "type": "generic_condition"
                        },
                        "field": {
                            "type": "expression",
                            "value": "is_login_flow"
                        },
                        "data_type": "boolean",
                        "type": "generic",
                        "operation": "==",
                        "value": {
                            "type": "expression",
                            "value": "true"
                        }
                    },
                    "true_branch": {
                        "debug_id": "0c3c1185-2a24-452b-a36f-b3e218aecd58",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "clear_session": false,
                            "metadata": {
                                "type": "reject"
                            },
                            "type": "reject",
                            "failure_data": {
                                "type": "expression",
                                "value": "{\n  \"ub_reject_access_code\": \"1999\",\n  \"ub_reject_access_message\": \"The login system is temporarily unavailable. Please try again, or contact us for assistance. Tap Call Us for contact information or to schedule a callback.\"\n}"
                            }
                        },
                        "type": "action"
                    },
                    "type": "condition"
                },
                "name": "tab_reject_access_error_subjourney",
                "id": "f19002aa-72d8-44fb-8f2c-f400ac79472c"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/e22d3218-2be2-47fd-b0cb-9689301b363c",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "is_login_flow"
                        }
                    ]
                },
                "workflow": {
                    "false_branch": {
                        "debug_id": "671ca807-2dc4-4db8-8879-5ab34b5b09cd",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "clear_session": true,
                            "metadata": {
                                "type": "reject"
                            },
                            "type": "reject",
                            "failure_data": {
                                "type": "expression",
                                "value": "{\n  \"ub_reject_access_code\": \"2000\",\n  \"ub_reject_access_message\": \"For security reasons, your User ID has been locked. Please contact us for assistance. Tap Call Us for contact information or to schedule a callback.\"\n}"
                            }
                        },
                        "type": "action"
                    },
                    "debug_id": "ecc76a3b-45da-425b-9eb6-5589ef5f7d94",
                    "condition": {
                        "negated": false,
                        "metadata": {
                            "type": "generic_condition"
                        },
                        "field": {
                            "type": "expression",
                            "value": "is_login_flow"
                        },
                        "data_type": "boolean",
                        "type": "generic",
                        "operation": "==",
                        "value": {
                            "type": "expression",
                            "value": "true"
                        }
                    },
                    "true_branch": {
                        "debug_id": "0c3c1185-2a24-452b-a36f-b3e218aecd58",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "clear_session": true,
                            "metadata": {
                                "type": "reject"
                            },
                            "type": "reject",
                            "failure_data": {
                                "type": "expression",
                                "value": "{\n  \"ub_reject_access_code\": \"1000\",\n  \"ub_reject_access_message\": \"For security reasons, your User ID has been locked. Please contact us for assistance. Tap Call Us for contact information or to schedule a callback.\"\n}"
                            }
                        },
                        "type": "action"
                    },
                    "type": "condition"
                },
                "name": "tab_reject_access_deny_subjourney",
                "id": "e22d3218-2be2-47fd-b0cb-9689301b363c"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/b41f8185-2807-46a9-bb75-90643722a51c",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "debug",
                            "description": "Debug enabled or not"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "text",
                            "description": "Debug text to display"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "heading"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "comment",
                            "description": "Comment Field only"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "11211af6-6119-4e54-ad80-b8ce445437e7",
                    "metadata": {},
                    "block": {
                        "debug_id": "53aa1ecc-5eab-40c5-a93b-d037d5d6c038",
                        "condition": {
                            "negated": false,
                            "metadata": {
                                "type": "generic_condition"
                            },
                            "field": {
                                "type": "expression",
                                "value": "debug"
                            },
                            "data_type": "boolean",
                            "type": "generic",
                            "operation": "==",
                            "value": {
                                "type": "expression",
                                "value": "true"
                            }
                        },
                        "true_branch": {
                            "debug_id": "f2511dd2-cf0e-4a7f-9170-6771b33b48a8",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "metadata": {
                                    "type": "information"
                                },
                                "text": {
                                    "type": "expression",
                                    "value": "`${text}\n`"
                                },
                                "button_text": {
                                    "type": "expression",
                                    "value": "`OK`"
                                },
                                "title": {
                                    "type": "expression",
                                    "value": "`Journey Debug: ${heading}`"
                                },
                                "type": "information",
                                "parameters": []
                            },
                            "type": "action"
                        },
                        "type": "condition"
                    },
                    "type": "block",
                    "child": {
                        "debug_id": "cc52a432-0f30-4dc1-8a44-85ccf6613cfb",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "metadata": {
                                "type": "auth_pass"
                            },
                            "type": "auth_pass"
                        },
                        "type": "action"
                    }
                },
                "name": "tab_debug_subjourney",
                "id": "b41f8185-2807-46a9-bb75-90643722a51c"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/62da81d1-5ee4-4441-92fc-75c60c745784",
            "data": {
                "provider_type": "otp-external",
                "name": "eip_otp_generator_boku",
                "provider_id": "62da81d1-5ee4-4441-92fc-75c60c745784",
                "config": {
                    "otp_format": {
                        "length": 4,
                        "type": "numeric"
                    },
                    "code_extraction": {
                        "type": "expression",
                        "value": "\"\""
                    },
                    "type": "otp-external",
                    "generate": {
                        "request": {
                            "fail_on_non_2xx_response": false,
                            "headers": [
                                {
                                    "name": "X-MUFG-Application-Id",
                                    "value": {
                                        "type": "expression",
                                        "value": "`MAE`"
                                    }
                                },
                                {
                                    "name": "X-MUFG-Request-Uuid",
                                    "value": {
                                        "type": "expression",
                                        "value": "`${@std.uuid()}`"
                                    }
                                },
                                {
                                    "name": "X-MUFG-Request-Ts",
                                    "value": {
                                        "type": "expression",
                                        "value": "`${@customFunctions.mae_api_authscriptfunction_request_timestamp()}`"
                                    }
                                },
                                {
                                    "name": "Content-Type",
                                    "value": {
                                        "type": "expression",
                                        "value": "`application/json`"
                                    }
                                }
                            ],
                            "response_format": {
                                "type": "json_object"
                            },
                            "ssl_identities": {
                                "trusted_identities": []
                            },
                            "method": "post",
                            "connection_config": {
                                "follow_redirect": false,
                                "request_timeout": 30,
                                "use_cookie_store": false,
                                "connection_timeout": 5
                            },
                            "body": {
                                "type": "expression",
                                "value": "`${\n    {\n        \"phoneNumber\":let tid=@strToInt(@policy.request().body.data.data.target_id)-1 return @policy.session().custom_data.otp_phone_numbers[tid],\n        \"phoneRiskTransactionId\": @policy.session().custom_data.phone_risk_transaction_id \n    }\n}`"
                            },
                            "uri": {
                                "type": "expression",
                                "value": "`${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"eip_boku_otp_service_url\")+\"/send-one-time-passcode\"}`"
                            },
                            "authentication": {
                                "credentials_ref": {
                                    "provider_type": "db",
                                    "alias": "muc_client_credentials",
                                    "type": "credentials"
                                },
                                "scope": "api_n_mol_19596501",
                                "type": "oauth2",
                                "auth_header": true,
                                "url": {
                                    "type": "expression",
                                    "value": "`${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"eip_oa2_bearer_token_service_url\")}`"
                                }
                            },
                            "logging_config": {
                                "outgoing_requests_config": "info",
                                "ok_response_config": "info",
                                "failed_response_config": "warning"
                            }
                        },
                        "classifiers": {
                            "values": [
                                {
                                    "expr": {
                                        "type": "expression",
                                        "value": "response.status == 200"
                                    },
                                    "value": "generated"
                                }
                            ],
                            "fallback": "error"
                        }
                    },
                    "validate": {
                        "request": {
                            "fail_on_non_2xx_response": false,
                            "headers": [
                                {
                                    "name": "X-MUFG-Request-Ts",
                                    "value": {
                                        "type": "expression",
                                        "value": "`${@customFunctions.mae_api_authscriptfunction_request_timestamp()}`"
                                    }
                                },
                                {
                                    "name": "X-MUFG-Application-Id",
                                    "value": {
                                        "type": "expression",
                                        "value": "`MAE`"
                                    }
                                },
                                {
                                    "name": "X-MUFG-Request-Uuid",
                                    "value": {
                                        "type": "expression",
                                        "value": "`${@std.uuid()}`"
                                    }
                                },
                                {
                                    "name": "Content-Type",
                                    "value": {
                                        "type": "expression",
                                        "value": "`application/json`"
                                    }
                                }
                            ],
                            "response_format": {
                                "type": "json_object"
                            },
                            "ssl_identities": {
                                "trusted_identities": []
                            },
                            "method": "post",
                            "connection_config": {
                                "follow_redirect": false,
                                "request_timeout": 30,
                                "use_cookie_store": false,
                                "connection_timeout": 5
                            },
                            "body": {
                                "type": "expression",
                                "value": "`{\n\t\"oneTimePasscode\":${otp_code},\n\t\"phoneRiskTransactionId\":\"${generate_result.phoneRiskTransactionId}\",\n\t\"otpAuthenticationId\":\"${generate_result.otpAuthenticationId}\"\n}`"
                            },
                            "uri": {
                                "type": "expression",
                                "value": "`${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"eip_boku_otp_service_url\")+\"/verify-one-time-passcode\"}`"
                            },
                            "authentication": {
                                "credentials_ref": {
                                    "provider_type": "db",
                                    "alias": "muc_client_credentials",
                                    "type": "credentials"
                                },
                                "scope": "api_n_mol_19596501",
                                "type": "oauth2",
                                "auth_header": true,
                                "url": {
                                    "type": "expression",
                                    "value": "`${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"eip_oa2_bearer_token_service_url\")}`"
                                }
                            },
                            "logging_config": {
                                "outgoing_requests_config": "info",
                                "ok_response_config": "info",
                                "failed_response_config": "warning"
                            }
                        },
                        "classifiers": {
                            "values": [
                                {
                                    "expr": {
                                        "type": "expression",
                                        "value": "response.status == 200"
                                    },
                                    "value": "valid"
                                },
                                {
                                    "expr": {
                                        "type": "expression",
                                        "value": "response.status == 422 && response.body.standardCode == \"7261\""
                                    },
                                    "value": "invalid"
                                },
                                {
                                    "expr": {
                                        "type": "expression",
                                        "value": "response.status == 422 && response.body.standardCode == \"7262\""
                                    },
                                    "value": "locked"
                                },
                                {
                                    "expr": {
                                        "type": "expression",
                                        "value": "response.status == 422 && response.body.standardCode == \"7259\""
                                    },
                                    "value": "expired"
                                }
                            ],
                            "fallback": "error"
                        }
                    }
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/3cd43c56-e4ff-4cf8-972f-a83c9a58d8f8",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "identificationData": {
                                            "type": "object",
                                            "properties": {
                                                "userStatus": {
                                                    "type": "string"
                                                },
                                                "sessionId": {
                                                    "type": "string"
                                                },
                                                "userName": {
                                                    "type": "string"
                                                },
                                                "transactionId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "userData": {
                                            "type": "object",
                                            "properties": {
                                                "lastAccoutOpenDate": {
                                                    "type": "string"
                                                },
                                                "onlineServiceEnrollDate": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "channelIndicator": {
                                            "type": "string"
                                        },
                                        "messageHeader": {
                                            "type": "object",
                                            "properties": {
                                                "requestId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "deviceRequest": {
                                            "type": "object",
                                            "properties": {
                                                "devicePrint": {
                                                    "type": "string"
                                                },
                                                "httpAcceptLanguage": {
                                                    "type": "string"
                                                },
                                                "httpAccept": {
                                                    "type": "string"
                                                },
                                                "ipAddress": {
                                                    "type": "string"
                                                },
                                                "userAgent": {
                                                    "type": "string"
                                                },
                                                "httpReferrer": {
                                                    "type": "string"
                                                },
                                                "deviceTokenCookie": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "eventDataList": {
                                            "type": "object",
                                            "properties": {
                                                "eventData": {
                                                    "type": "object",
                                                    "properties": {
                                                        "eventData": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "authenticationLevel": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "attemptsTryCount": {
                                                                                "type": "string"
                                                                            },
                                                                            "successful": {
                                                                                "type": "boolean"
                                                                            }
                                                                        }
                                                                    },
                                                                    "eventDescription": {
                                                                        "type": "string"
                                                                    },
                                                                    "clientDefinedAttributeList": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "dataType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "eventType": {
                                                                        "type": "string"
                                                                    },
                                                                    "clientDefinedEventType": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "mae_create_raa_notify_request_from_analyze_request_subjourney_output",
                            "description": "Notify request, ready to be passed to mae_send_rsa_notify_subjourney"
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "identificationData": {
                                            "type": "object",
                                            "properties": {
                                                "userStatus": {
                                                    "type": "string"
                                                },
                                                "sessionId": {
                                                    "type": "string"
                                                },
                                                "userName": {
                                                    "type": "string"
                                                },
                                                "transactionId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "userData": {
                                            "type": "object",
                                            "properties": {
                                                "lastAccoutOpenDate": {
                                                    "type": "string"
                                                },
                                                "onlineServiceEnrollDate": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "channelIndicator": {
                                            "type": "string"
                                        },
                                        "messageHeader": {
                                            "type": "object",
                                            "properties": {
                                                "requestId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "deviceRequest": {
                                            "type": "object",
                                            "properties": {
                                                "devicePrint": {
                                                    "type": "string"
                                                },
                                                "httpAcceptLanguage": {
                                                    "type": "string"
                                                },
                                                "httpAccept": {
                                                    "type": "string"
                                                },
                                                "ipAddress": {
                                                    "type": "string"
                                                },
                                                "userAgent": {
                                                    "type": "string"
                                                },
                                                "httpReferrer": {
                                                    "type": "string"
                                                },
                                                "deviceTokenCookie": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "eventDataList": {
                                            "type": "object",
                                            "properties": {
                                                "eventData": {
                                                    "type": "object",
                                                    "properties": {
                                                        "eventData": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "eventDescription": {
                                                                        "type": "string"
                                                                    },
                                                                    "clientDefinedAttributeList": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "dataType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "eventType": {
                                                                        "type": "string"
                                                                    },
                                                                    "clientDefinedEventType": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "analyze_request",
                            "description": "Analyze request as sent via mae_api_send_rsa_analyze_subjourney"
                        },
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "level": {
                                            "type": "integer"
                                        },
                                        "attemptsTryCount": {
                                            "type": "integer"
                                        },
                                        "successful": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "authentication_level",
                            "description": ""
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "transaction_id",
                            "description": "The transaction id returned by the original analyze call"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "7c04e33c-bcd3-4a97-b751-5a4c74cec659",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "variables": [
                            {
                                "name": "event_data_list",
                                "value": {
                                    "type": "expression",
                                    "value": "[]"
                                }
                            },
                            {
                                "name": "num_items",
                                "value": {
                                    "type": "expression",
                                    "value": "@len(analyze_request.eventDataList.eventData.eventData)"
                                }
                            },
                            {
                                "name": "i",
                                "value": {
                                    "type": "expression",
                                    "value": "0"
                                }
                            }
                        ],
                        "metadata": {
                            "type": "set_variables"
                        },
                        "type": "set_variables"
                    },
                    "type": "action",
                    "child": {
                        "max_iterations": 10,
                        "loop_body": {
                            "debug_id": "bf08c69e-121f-4a14-9314-e0561be0d169",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "event_data",
                                        "value": {
                                            "type": "expression",
                                            "value": "analyze_request.eventDataList.eventData.eventData[i] + {authenticationLevel: authentication_level}"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "notes": "Note that we only really expect one eventData. If there's more then one, all of them get the same authenticationLevel.",
                                    "label": "Add authenticationLevel to eventData",
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "c8c6cda1-af74-46eb-8d4f-53f2c42d837d",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "event_data_list",
                                            "value": {
                                                "type": "expression",
                                                "value": "event_data_list + [event_data]"
                                            }
                                        },
                                        {
                                            "name": "i",
                                            "value": {
                                                "type": "expression",
                                                "value": "i + 1"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action"
                            }
                        },
                        "debug_id": "f480cd5d-c40a-42ac-a57d-14b751ec8c55",
                        "condition": {
                            "type": "expression",
                            "value": "i < num_items"
                        },
                        "iteration_count": 0,
                        "metadata": {},
                        "type": "loop",
                        "child": {
                            "debug_id": "bd78d0c3-6151-4ccc-b8e5-8be46cbe5c96",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "identification_data",
                                        "value": {
                                            "type": "expression",
                                            "value": "analyze_request.identificationData + {transactionId: transaction_id}"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "cf8631e3-5324-4ca4-8cdf-58689db57cdc",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "mae_create_raa_notify_request_from_analyze_request_subjourney_output",
                                            "value": {
                                                "type": "expression",
                                                "value": "analyze_request + {eventDataList:{eventData:{eventData: event_data_list}}} + {identificationData: identification_data}"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "5c5cf12b-4929-4686-b2b0-e819d3c54ff6",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "metadata": {
                                            "type": "auth_pass"
                                        },
                                        "type": "auth_pass"
                                    },
                                    "type": "action"
                                }
                            }
                        }
                    }
                },
                "name": "mae_create_raa_notify_request_from_analyze_request_subjourney",
                "id": "3cd43c56-e4ff-4cf8-972f-a83c9a58d8f8"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/cdf61358-f547-41bf-b353-01cb18b7de8c",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "output": {
                                            "type": "object"
                                        },
                                        "request": {
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "statusCode": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "mae_invoke_rsa_api_subjourney_result",
                            "description": "The result of the RAA API call. "
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "rsa_soap_request",
                            "description": "A SOAP request following the RSA Adaptive Auth WSDL"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "782962db-a093-468a-b756-c6cced272828",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "variables": [
                            {
                                "name": "output",
                                "value": {
                                    "type": "expression",
                                    "value": "try @webrequests.rsa_adaptive_authentication(rsa_soap_request) catch (error) => {ERROR: error}"
                                }
                            }
                        ],
                        "metadata": {
                            "label": "Send the SOAP message",
                            "type": "set_variables"
                        },
                        "type": "set_variables"
                    },
                    "type": "action",
                    "child": {
                        "false_branch": {
                            "debug_id": "0afe7d88-37be-4002-9e1a-4580827f3c02",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "mae_invoke_rsa_api_subjourney_result",
                                        "value": {
                                            "type": "expression",
                                            "value": "{\n    success: false,\n    statusCode: null,\n    request: rsa_soap_request,\n    error: output.error\n}"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "label": "No response",
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "593af5e2-3e35-41bc-9f11-c1298083e639",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "metadata": {
                                        "type": "auth_pass"
                                    },
                                    "type": "auth_pass"
                                },
                                "type": "action"
                            }
                        },
                        "debug_id": "d6a54233-f026-40ac-96dd-b0716e551985",
                        "condition": {
                            "negated": false,
                            "metadata": {
                                "label": "Did the service respond?",
                                "type": "generic_condition"
                            },
                            "field": {
                                "type": "expression",
                                "value": "@std.contains(@std.keys(output),\"status\")"
                            },
                            "data_type": "boolean",
                            "type": "generic",
                            "operation": "==",
                            "value": {
                                "type": "expression",
                                "value": "true"
                            }
                        },
                        "true_branch": {
                            "debug_id": "6471484f-5186-4f64-9776-049686bc7a80",
                            "metadata": {
                                "data_type": "integer",
                                "type": "match_case"
                            },
                            "field": {
                                "type": "expression",
                                "value": "output.status"
                            },
                            "otherwise_branch": {
                                "debug_id": "e6024e9f-8217-49a8-8eaa-742c56969ac8",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "mae_invoke_rsa_api_subjourney_result",
                                            "value": {
                                                "type": "expression",
                                                "value": "{\n    success: false,\n    statusCode: output.status,\n    request: rsa_soap_request,\n    faultString: (@std.contains(@std.keys(output),\"body\") && @std.contains(@std.keys(output.body[\"env:Envelope\"][\"env:Body\"][0]),\"env:Fault\") && @std.contains(@std.keys(output.body[\"env:Envelope\"][\"env:Body\"][0][\"env:Fault\"][0]),\"faultstring\")) ? output.body[\"env:Envelope\"][\"env:Body\"][0][\"env:Fault\"][0].faultstring[0][\"__text\"] : \"\"\n}"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "29ce4c96-0955-42fa-a1a3-755ab8645627",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "metadata": {
                                            "type": "auth_pass"
                                        },
                                        "type": "auth_pass"
                                    },
                                    "type": "action"
                                }
                            },
                            "matched_branches": [
                                {
                                    "matcher": {
                                        "metadata": {
                                            "type": "generic_condition",
                                            "matcherId": "b197274d-ac53-4fbd-82c2-9d66e49b198c"
                                        },
                                        "data_type": "integer",
                                        "type": "generic_operation",
                                        "value": {
                                            "type": "expression",
                                            "value": "200"
                                        },
                                        "operation": "=="
                                    },
                                    "child": {
                                        "debug_id": "9e1b62fe-9410-4ce6-9a17-3bea5468953a",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "variables": [
                                                {
                                                    "name": "mae_invoke_rsa_api_subjourney_result",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "{\n    success: true,\n    statusCode: \"200\",\n    output: output\n}"
                                                    }
                                                }
                                            ],
                                            "metadata": {
                                                "label": "Request completed",
                                                "type": "set_variables"
                                            },
                                            "type": "set_variables"
                                        },
                                        "type": "action",
                                        "child": {
                                            "debug_id": "1fb637b3-af60-4530-888c-601067fbdb6e",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "metadata": {
                                                    "type": "auth_pass"
                                                },
                                                "type": "auth_pass"
                                            },
                                            "type": "action"
                                        }
                                    }
                                }
                            ],
                            "type": "match_case"
                        },
                        "type": "condition"
                    }
                },
                "name": "mae_invoke_rsa_api_subjourney",
                "id": "cdf61358-f547-41bf-b353-01cb18b7de8c"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/fd0fa788-8429-4607-8bc7-d8074fcef13e",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "debug",
                            "description": "Debug Flag"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "cb3c2ecf-a9f9-44b4-8267-88472d984808",
                    "metadata": {},
                    "block": {
                        "debug_id": "cfcb444b-5223-422c-b4e6-511bdf958280",
                        "condition": {
                            "negated": false,
                            "metadata": {
                                "type": "generic_condition"
                            },
                            "field": {
                                "type": "expression",
                                "value": "@policy.user().id == \"testshape\""
                            },
                            "data_type": "boolean",
                            "type": "generic",
                            "operation": "==",
                            "value": {
                                "type": "expression",
                                "value": "true"
                            }
                        },
                        "true_branch": {
                            "debug_id": "83008649-e161-4b49-9e82-7c3ef6b47e50",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "debug",
                                        "value": {
                                            "type": "expression",
                                            "value": "true"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "dd97f69d-a80b-4864-95d6-cc6d019bb706",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "shp_telemetry_headers",
                                            "value": {
                                                "type": "expression",
                                                "value": "@policy.request().params[\"shp_telemetry_headers\"]"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "11ffc37a-4537-45a8-9e36-7699588ff6c9",
                                    "metadata": {
                                        "notes": "S100-Shape-Integration",
                                        "label": "Debug output"
                                    },
                                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                    "frame_config": {
                                        "params": [
                                            {
                                                "name": "debug",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "debug"
                                                }
                                            },
                                            {
                                                "name": "text",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "`\nuser id = ${@policy.user().id}\n------------------------------------------------------------------\nshp_telemetry_headers = ${shp_telemetry_headers}\n------------------------------------------------------------------\n`"
                                                }
                                            },
                                            {
                                                "name": "heading",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "`S100-Shape-Integration`"
                                                }
                                            },
                                            {
                                                "name": "comment",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "`LEGIT\n{\"isBot\":false,\"recommendation\":\"ALLOW\",\"inference_results\":\"\"}\n\nILLEGIT\n{\"isBot\":true,\"recommendation\":\"MITIGATE\",\"inference_results\":\"Token Missing\"}\n\nTRUSTED\n{\"isBot\": \"N/A IP Whitelisted\", \"recommendation\": \"ALLOW\", \"inference_results\": \"Attack Inference\", \"cookie\": \"N/A\"}\n\n`"
                                                }
                                            }
                                        ]
                                    },
                                    "type": "procedure",
                                    "child": {
                                        "debug_id": "4cc2a481-6a13-46f7-b8a1-ece7490fdf38",
                                        "metadata": {},
                                        "procedure_id": "f7e1481b-4827-4e0b-a604-3e4c413e2aeb",
                                        "frame_config": {
                                            "params": [
                                                {
                                                    "name": "policyRequest",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "@policy.request()"
                                                    }
                                                },
                                                {
                                                    "name": "channelType",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "\"mobile\""
                                                    }
                                                }
                                            ]
                                        },
                                        "type": "procedure",
                                        "child": {
                                            "debug_id": "077e65c2-e6ce-4969-808b-7a14b5c42e3f",
                                            "metadata": {
                                                "notes": "S200-Shape-Integration",
                                                "label": "Debug output"
                                            },
                                            "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                            "frame_config": {
                                                "params": [
                                                    {
                                                        "name": "debug",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "debug"
                                                        }
                                                    },
                                                    {
                                                        "name": "text",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "`\nmae_shape_decision_subjourney_output = ${mae_shape_decision_subjourney_output}\n------------------------------------------------------------------\nuser id = ${@policy.user().id}\n------------------------------------------------------------------\nshp_telemetry_headers = ${shp_telemetry_headers}\n------------------------------------------------------------------\n`"
                                                        }
                                                    },
                                                    {
                                                        "name": "heading",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "`S200-Shape-Integration`"
                                                        }
                                                    },
                                                    {
                                                        "name": "comment",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "`LEGIT\n{\"isBot\":false,\"recommendation\":\"ALLOW\",\"inference_results\":\"\"}\n\nILLEGIT\n{\"isBot\":true,\"recommendation\":\"MITIGATE\",\"inference_results\":\"Token Missing\"}\n\nTRUSTED\n{\"isBot\": \"N/A IP Whitelisted\", \"recommendation\": \"ALLOW\", \"inference_results\": \"Attack Inference\", \"cookie\": \"N/A\"}\n\n`"
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "procedure",
                                            "child": {
                                                "debug_id": "30cf6889-bca1-4216-93c4-17ff0a93344d",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "variables": [
                                                        {
                                                            "name": "shape_recommendation",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "mae_shape_decision_subjourney_output?.recommendation"
                                                            }
                                                        },
                                                        {
                                                            "name": "shape_isBot",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "mae_shape_decision_subjourney_output?.isBot"
                                                            }
                                                        },
                                                        {
                                                            "name": "shape_inference_results",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "mae_shape_decision_subjourney_output?.inference_results"
                                                            }
                                                        }
                                                    ],
                                                    "metadata": {
                                                        "type": "set_variables"
                                                    },
                                                    "type": "set_variables"
                                                },
                                                "type": "action",
                                                "child": {
                                                    "debug_id": "990ef96e-0610-4c8e-a307-d2b35fc294c9",
                                                    "metadata": {
                                                        "data_type": "string",
                                                        "type": "match_case"
                                                    },
                                                    "field": {
                                                        "type": "expression",
                                                        "value": "shape_recommendation"
                                                    },
                                                    "otherwise_branch": {
                                                        "debug_id": "1346035a-bc1c-4f42-8d03-0d56ecb42bb0",
                                                        "metadata": {},
                                                        "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                        "frame_config": {
                                                            "params": [
                                                                {
                                                                    "name": "is_login_flow",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "true"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "procedure"
                                                    },
                                                    "matched_branches": [
                                                        {
                                                            "matcher": {
                                                                "metadata": {
                                                                    "type": "generic_condition",
                                                                    "matcherId": "8394712f-c306-435b-8240-8d5016fc970f"
                                                                },
                                                                "data_type": "string",
                                                                "type": "generic_operation",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "\"ALLOW\""
                                                                },
                                                                "operation": "=="
                                                            },
                                                            "child": {
                                                                "debug_id": "6f0fbe74-5843-4e70-84a6-abe2da1d6bde",
                                                                "metadata": {
                                                                    "notes": "S300-Shape-Integration",
                                                                    "label": "Debug output"
                                                                },
                                                                "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                "frame_config": {
                                                                    "params": [
                                                                        {
                                                                            "name": "debug",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "true"
                                                                            }
                                                                        },
                                                                        {
                                                                            "name": "text",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "`\nTempoary Reject Error for Testing only.\n`"
                                                                            }
                                                                        },
                                                                        {
                                                                            "name": "heading",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "`S300-Shape-Integration`"
                                                                            }
                                                                        },
                                                                        {
                                                                            "name": "comment",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "`LEGIT\n{\"isBot\":false,\"recommendation\":\"ALLOW\",\"inference_results\":\"\"}\n\nILLEGIT\n{\"isBot\":true,\"recommendation\":\"MITIGATE\",\"inference_results\":\"Token Missing\"}\n\nTRUSTED\n{\"isBot\": \"N/A IP Whitelisted\", \"recommendation\": \"ALLOW\", \"inference_results\": \"Attack Inference\", \"cookie\": \"N/A\"}\n\n`"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "procedure",
                                                                "child": {
                                                                    "debug_id": "5627b6c7-a051-4166-b95f-95e0164b9caf",
                                                                    "metadata": {},
                                                                    "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                                    "frame_config": {
                                                                        "params": [
                                                                            {
                                                                                "name": "is_login_flow",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "true"
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "procedure"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "matcher": {
                                                                "metadata": {
                                                                    "type": "generic_condition",
                                                                    "matcherId": "6e378156-487b-4291-9684-dae7939547af"
                                                                },
                                                                "data_type": "string",
                                                                "type": "generic_operation",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "\"MITIGATE\""
                                                                },
                                                                "operation": "=="
                                                            },
                                                            "child": {
                                                                "debug_id": "57504c9b-a57d-40a3-8190-a0d76d946c9a",
                                                                "metadata": {},
                                                                "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                                "frame_config": {
                                                                    "params": [
                                                                        {
                                                                            "name": "is_login_flow",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "true"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "procedure"
                                                            }
                                                        }
                                                    ],
                                                    "type": "match_case"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "type": "condition"
                    },
                    "type": "block",
                    "child": {
                        "debug_id": "4c18b4ef-3b62-48b2-8062-9bdecb4cfce5",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "metadata": {
                                "type": "auth_pass"
                            },
                            "type": "auth_pass"
                        },
                        "type": "action"
                    }
                },
                "name": "tab_shape_decision_subjourney",
                "id": "fd0fa788-8429-4607-8bc7-d8074fcef13e"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/8fd29dc3-762d-4569-b261-7d46fcc67d04",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": {},
                                "type": "object"
                            },
                            "name": "mae_raa_notify_subjourney_result",
                            "description": "The result of the RAA Notify call. (Should be empty.)"
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "identificationData": {
                                            "type": "object",
                                            "properties": {
                                                "userStatus": {
                                                    "type": "string"
                                                },
                                                "sessionId": {
                                                    "type": "string"
                                                },
                                                "userName": {
                                                    "type": "string"
                                                },
                                                "transactionId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "userData": {
                                            "type": "object",
                                            "properties": {
                                                "lastAccoutOpenDate": {
                                                    "type": "string"
                                                },
                                                "onlineServiceEnrollDate": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "channelIndicator": {
                                            "type": "string"
                                        },
                                        "messageHeader": {
                                            "type": "object",
                                            "properties": {
                                                "requestId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "deviceRequest": {
                                            "type": "object",
                                            "properties": {
                                                "devicePrint": {
                                                    "type": "string"
                                                },
                                                "httpAcceptLanguage": {
                                                    "type": "string"
                                                },
                                                "httpAccept": {
                                                    "type": "string"
                                                },
                                                "ipAddress": {
                                                    "type": "string"
                                                },
                                                "userAgent": {
                                                    "type": "string"
                                                },
                                                "httpReferrer": {
                                                    "type": "string"
                                                },
                                                "deviceTokenCookie": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "eventDataList": {
                                            "type": "object",
                                            "properties": {
                                                "eventData": {
                                                    "type": "object",
                                                    "properties": {
                                                        "eventData": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "authenticationLevel": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "attemptsTryCount": {
                                                                                "type": "string"
                                                                            },
                                                                            "successful": {
                                                                                "type": "boolean"
                                                                            }
                                                                        }
                                                                    },
                                                                    "eventDescription": {
                                                                        "type": "string"
                                                                    },
                                                                    "clientDefinedAttributeList": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "dataType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "eventType": {
                                                                        "type": "string"
                                                                    },
                                                                    "clientDefinedEventType": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "notify_request",
                            "description": "A notify request following the RSA Adaptive Auth swagger"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "cb00124d-fced-415e-9926-86d8f76fa29b",
                    "metadata": {
                        "label": "Build the SOAP message"
                    },
                    "procedure_id": "1c931b22-d12b-4be3-9e35-578db14c0aab",
                    "frame_config": {
                        "params": [
                            {
                                "name": "input",
                                "value": {
                                    "type": "expression",
                                    "value": "notify_request"
                                }
                            },
                            {
                                "name": "name",
                                "value": {
                                    "type": "expression",
                                    "value": "\"request\""
                                }
                            },
                            {
                                "name": "namespace",
                                "value": {
                                    "type": "expression",
                                    "value": "\"ns2\""
                                }
                            },
                            {
                                "name": "namespace_url",
                                "value": {
                                    "type": "expression",
                                    "value": "\"http://ws.csd.rsa.com\""
                                }
                            },
                            {
                                "name": "request_type",
                                "value": {
                                    "type": "expression",
                                    "value": "\"NOTIFY\""
                                }
                            }
                        ]
                    },
                    "type": "procedure",
                    "child": {
                        "debug_id": "eb935f46-1f38-40e8-834b-3b8107e894dd",
                        "metadata": {
                            "label": "Send to RSA AA"
                        },
                        "procedure_id": "cdf61358-f547-41bf-b353-01cb18b7de8c",
                        "frame_config": {
                            "params": [
                                {
                                    "name": "rsa_soap_request",
                                    "value": {
                                        "type": "expression",
                                        "value": "mae_soapify_rsa_adaptive_auth_request_subjourney_output"
                                    }
                                }
                            ]
                        },
                        "type": "procedure",
                        "child": {
                            "false_branch": {
                                "debug_id": "ced9b4df-8e0c-4a57-a6ff-af74178269e2",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "mae_raa_notify_subjourney_result",
                                            "value": {
                                                "type": "expression",
                                                "value": "mae_invoke_rsa_api_subjourney_result"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "8b5d085b-f60e-4947-a1cc-fd06ffca7303",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "metadata": {
                                            "type": "auth_pass"
                                        },
                                        "type": "auth_pass"
                                    },
                                    "type": "action"
                                }
                            },
                            "debug_id": "b98f4688-ad79-4273-88d8-5989a5459293",
                            "condition": {
                                "negated": false,
                                "metadata": {
                                    "label": "Did it work?",
                                    "type": "generic_condition"
                                },
                                "field": {
                                    "type": "expression",
                                    "value": "mae_invoke_rsa_api_subjourney_result.success"
                                },
                                "data_type": "boolean",
                                "type": "generic",
                                "operation": "==",
                                "value": {
                                    "type": "expression",
                                    "value": "true"
                                }
                            },
                            "true_branch": {
                                "debug_id": "9e1b62fe-9410-4ce6-9a17-3bea5468953a",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "mae_raa_notify_subjourney_result",
                                            "value": {
                                                "type": "expression",
                                                "value": "{\n    success: mae_invoke_rsa_api_subjourney_result.success,\n    statusCode: mae_invoke_rsa_api_subjourney_result.statusCode\n}"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "label": "Request completed",
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "1fb637b3-af60-4530-888c-601067fbdb6e",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "metadata": {
                                            "type": "auth_pass"
                                        },
                                        "type": "auth_pass"
                                    },
                                    "type": "action"
                                }
                            },
                            "type": "condition"
                        }
                    }
                },
                "name": "mae_send_rsa_notify_subjourney",
                "id": "8fd29dc3-762d-4569-b261-7d46fcc67d04"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///credentials_identities/db/PFTSClient#1",
            "constrains": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "category": "credentials",
            "type": "placeholder"
        },
        {
            "path": "tsasm:///providers/ef439f33-9a18-4c2b-a98a-fbab98694d7a",
            "data": {
                "provider_type": "user-external",
                "name": "wca_identitystore_customwebservice_authentication",
                "provider_id": "ef439f33-9a18-4c2b-a98a-fbab98694d7a",
                "config": {
                    "password": {
                        "request": {
                            "fail_on_non_2xx_response": false,
                            "headers": [
                                {
                                    "name": "X-MUFG-Request-Uuid",
                                    "value": {
                                        "type": "expression",
                                        "value": "`${@uuid()}`"
                                    }
                                },
                                {
                                    "name": "X-MUFG-Request-Ts",
                                    "value": {
                                        "type": "expression",
                                        "value": "`${@customFunctions.mae_api_authscriptfunction_request_timestamp()}`"
                                    }
                                },
                                {
                                    "name": "X-MUFG-Application-Id",
                                    "value": {
                                        "type": "expression",
                                        "value": "`MAE`"
                                    }
                                },
                                {
                                    "name": "Content-Type",
                                    "value": {
                                        "type": "expression",
                                        "value": "`application/json`"
                                    }
                                }
                            ],
                            "transform": {
                                "type": "expression",
                                "value": "let wca_status = {\n  \"wca_status_code\": @namedContainers.namedStringListLookup(\"status_codes_map\", response.body[\"responseCode\"], response.body[\"responseCode\"])\n}, \nwca_response = {\n  \"responseCode\": null,\n  \"responseDescription\": null\n}\n\nreturn @contains([\"0000\",\"0010\",\"1000\",\"1040\",\"5001\",\"5002\"], wca_status.wca_status_code)\n  ? response.body + wca_status - wca_response\n  : wca_status"
                            },
                            "response_format": {
                                "type": "json_object"
                            },
                            "ssl_identities": {
                                "local_identity": {
                                    "provider_type": "db",
                                    "alias": "ssl_mobile_app_key",
                                    "type": "local",
                                    "version": "1"
                                },
                                "trusted_identities": []
                            },
                            "method": "post",
                            "connection_config": {
                                "follow_redirect": false,
                                "request_timeout": 30,
                                "use_cookie_store": false,
                                "connection_timeout": 5
                            },
                            "body": {
                                "type": "expression",
                                "value": "`${{\n    \"credential\": {\n        \"credentialAnswer\": password,\n        \"credentialType\": \"\",\n        \"credentialId\": \"\"\n    },\n    \"ipAddress\": @policy.request().client_ip,\n    \"userAgent\": @policy.request().headers.userAgent,\n    \"userName\": user_id,\n    \"channel\":\"MOBILE\"\n}}`"
                            },
                            "uri": {
                                "type": "expression",
                                "value": "`https://${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"mae_wca_auth_rest_api\")}/ssoapi/mae/user-security/v1/iam/authenticate-user`"
                            },
                            "authentication": {
                                "credentials_ref": {
                                    "provider_type": "db",
                                    "alias": "mae_wca_api_svc_wamae03",
                                    "type": "credentials"
                                },
                                "type": "basic"
                            },
                            "logging_config": {
                                "outgoing_requests_config": "debug",
                                "ok_response_config": "debug",
                                "failed_response_config": "debug"
                            }
                        },
                        "classifiers": {
                            "values": [
                                {
                                    "expr": {
                                        "type": "expression",
                                        "value": "@contains([\"0000\",\"0010\",\"1000\",\"1040\",\"5001\",\"5002\"], response.body[\"responseCode\"])"
                                    },
                                    "value": "valid"
                                },
                                {
                                    "expr": {
                                        "type": "expression",
                                        "value": "@contains([\"9999\"], response.body[\"responseCode\"])"
                                    },
                                    "value": "error"
                                }
                            ],
                            "fallback": "invalid"
                        }
                    },
                    "type": "user-external"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///credentials_identities/db/muc_client_credentials#1",
            "constrains": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "category": "credentials",
            "type": "placeholder"
        },
        {
            "path": "tsasm:///providers/619b1af8-770e-495a-b9aa-e11aaa41396d",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_lookup_app_env_setting",
                "provider_id": "619b1af8-770e-495a-b9aa-e11aaa41396d",
                "config": {
                    "return_type": {
                        "type": "string"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let env = @customFunctions.mae_api_authscriptfunction_get_current_environment()\n  , app = @policy.request().applicationid return\nlet lookup = @namedContainers.namedStringListLookup(list_id, app + \"|\" + env, @namedContainers.namedStringListLookup(list_id, env, null)) return\nlet template = \"<oa2_wca_environment>\" return\nlet oa2_wca_environment = @strings.refind(lookup, template) == null ? null : @strings.refind(@policy.request().headers.host, \"mae-auth-(.+).unionbank.com\") return\noa2_wca_environment == null ? lookup :\n    @strings.rereplace(lookup, template, oa2_wca_environment[1], false)"
                    },
                    "description": "Given a Typed List / Named Container attempt to find a configuration setting by application and/or environment.",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "list_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "List identifier",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/authenticators/placeholder_wca_tokenvalidationservice_customwebservice_ca_strong_auth",
            "data": {
                "method": "placeholder_wca_tokenvalidationservice_customwebservice_ca_strong_auth",
                "level": 1,
                "provider_config": {
                    "initial_status": "registered",
                    "token_validation_provider_id": "bff5f063-8377-4ae5-8ace-e1356c3d21ce",
                    "method": "placeholder_wca_tokenvalidationservice_customwebservice_ca_strong_auth",
                    "config_id": "tab_mobile_app",
                    "manage_registration_per_device": false,
                    "placeholder_type": {
                        "type": "internal",
                        "value": "fingerprint"
                    },
                    "allow_registration_without_token": false
                },
                "category": "7805",
                "enabled": true
            },
            "category": "authconfig",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/dd8a084d-3758-4f82-9ceb-e2d6d33ccf47",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "mae_determine_authentication_regime_subjourney_output",
                            "description": "One of \"SCQ\", \"OTP\", \"TKN\", \"OTP_SCQ\" (Default to OTP, but let user choose SCQ), or \"ERROR\""
                        },
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "type": "array"
                            },
                            "name": "mae_determine_authentication_regime_subjourney_otp_numbers",
                            "description": "For regime type \"OTP\" or \"OTP_SCQ\", this variable will contain a list of phone numbers to use for OTP."
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "sso_hash_id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "user_id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "is_token_enabled"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "customer_type"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "challenge_type",
                            "description": "Challenge type from RAA (\"QUESTION\", \"OOBPHONE\", or \"TKN\")"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "hrt_code"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "8d9bd3c0-201a-41ea-9d72-8c5482640d5d",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "variables": [
                            {
                                "name": "mae_determine_authentication_regime_subjourney_otp_numbers",
                                "value": {
                                    "type": "expression",
                                    "value": "[]"
                                }
                            }
                        ],
                        "metadata": {
                            "type": "set_variables"
                        },
                        "type": "set_variables"
                    },
                    "type": "action",
                    "child": {
                        "debug_id": "ac0e6755-9c96-44fc-a3ef-9b7c33fa0b6b",
                        "metadata": {
                            "data_type": "string",
                            "type": "match_case"
                        },
                        "field": {
                            "type": "expression",
                            "value": "challenge_type"
                        },
                        "otherwise_branch": {
                            "debug_id": "0ade0ef5-5a7c-4d9e-a081-7a07c0cf0adb",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "mae_determine_authentication_regime_subjourney_output",
                                        "value": {
                                            "type": "expression",
                                            "value": "`ERROR`"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "label": "ERROR",
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "2cbe60d7-a196-4e47-a48a-97a0b720a8c9",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "metadata": {
                                        "type": "auth_pass"
                                    },
                                    "type": "auth_pass"
                                },
                                "type": "action"
                            }
                        },
                        "matched_branches": [
                            {
                                "matcher": {
                                    "metadata": {
                                        "type": "generic_condition",
                                        "matcherId": "6a696477-edc9-43bf-bf1e-681b776ad1f8"
                                    },
                                    "data_type": "string",
                                    "type": "generic_operation",
                                    "value": {
                                        "type": "expression",
                                        "value": "`QUESTION`"
                                    },
                                    "operation": "=="
                                },
                                "child": {
                                    "debug_id": "e4a291f2-1709-430a-adad-0106cdd2e8f1",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "variables": [
                                            {
                                                "name": "mae_determine_authentication_regime_output",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "`SCQ`"
                                                }
                                            }
                                        ],
                                        "metadata": {
                                            "type": "set_variables"
                                        },
                                        "type": "set_variables"
                                    },
                                    "type": "action",
                                    "child": {
                                        "debug_id": "0dc377e7-57e1-428f-9a1b-efc169bc00f3",
                                        "metadata": {
                                            "data_type": "string",
                                            "label": "SCQ upgrade to OTP?",
                                            "type": "match_case"
                                        },
                                        "field": {
                                            "type": "expression",
                                            "value": "@namedContainers.namedStringListLookup(\"mae_hrt_ids_upgradeable_from_scq_to_otp\",\"\"+hrt_code,\"\")"
                                        },
                                        "otherwise_branch": {
                                            "false_branch": {
                                                "debug_id": "cae8e9f8-61ea-4b50-b31a-295cd2ed5468",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "variables": [
                                                        {
                                                            "name": "mae_determine_authentication_regime_subjourney_output",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "`SCQ`"
                                                            }
                                                        }
                                                    ],
                                                    "metadata": {
                                                        "label": "SCQ",
                                                        "type": "set_variables"
                                                    },
                                                    "type": "set_variables"
                                                },
                                                "type": "action",
                                                "child": {
                                                    "debug_id": "a3f96413-4313-445f-9bcb-b0f8323f9844",
                                                    "escapes": {
                                                        "escapes": []
                                                    },
                                                    "strings": [],
                                                    "action": {
                                                        "metadata": {
                                                            "type": "auth_pass"
                                                        },
                                                        "type": "auth_pass"
                                                    },
                                                    "type": "action"
                                                }
                                            },
                                            "debug_id": "4f224981-2b7c-4e5c-9c04-1a868d7056b1",
                                            "condition": {
                                                "negated": false,
                                                "metadata": {
                                                    "type": "generic_condition"
                                                },
                                                "field": {
                                                    "type": "expression",
                                                    "value": "customer_type == \"C\" || customer_type == \"T\""
                                                },
                                                "data_type": "boolean",
                                                "type": "generic",
                                                "operation": "==",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "true"
                                                }
                                            },
                                            "true_branch": {
                                                "false_branch": {
                                                    "debug_id": "fdc94764-9afb-4c9a-b1df-5597dd9b7558",
                                                    "escapes": {
                                                        "escapes": []
                                                    },
                                                    "strings": [],
                                                    "action": {
                                                        "variables": [
                                                            {
                                                                "name": "mae_determine_authentication_regime_subjourney_output",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "`SCQ`"
                                                                }
                                                            }
                                                        ],
                                                        "metadata": {
                                                            "label": "SCQ",
                                                            "type": "set_variables"
                                                        },
                                                        "type": "set_variables"
                                                    },
                                                    "type": "action",
                                                    "child": {
                                                        "debug_id": "579874b9-bd1a-4ce0-bd88-b5a02859c1ac",
                                                        "escapes": {
                                                            "escapes": []
                                                        },
                                                        "strings": [],
                                                        "action": {
                                                            "metadata": {
                                                                "type": "auth_pass"
                                                            },
                                                            "type": "auth_pass"
                                                        },
                                                        "type": "action"
                                                    }
                                                },
                                                "debug_id": "2a6888dd-3645-4a55-b4c8-8994cce16d88",
                                                "condition": {
                                                    "negated": false,
                                                    "metadata": {
                                                        "label": "User has token?",
                                                        "type": "generic_condition"
                                                    },
                                                    "field": {
                                                        "type": "expression",
                                                        "value": "is_token_enabled"
                                                    },
                                                    "data_type": "boolean",
                                                    "type": "generic",
                                                    "operation": "==",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "true"
                                                    }
                                                },
                                                "true_branch": {
                                                    "debug_id": "3dbbdbd3-c8e5-4c3d-b878-7c41d8c6d3b9",
                                                    "escapes": {
                                                        "escapes": []
                                                    },
                                                    "strings": [],
                                                    "action": {
                                                        "variables": [
                                                            {
                                                                "name": "mae_determine_authentication_regime_subjourney_output",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "`TKN`"
                                                                }
                                                            }
                                                        ],
                                                        "metadata": {
                                                            "label": "TKN",
                                                            "type": "set_variables"
                                                        },
                                                        "type": "set_variables"
                                                    },
                                                    "type": "action",
                                                    "child": {
                                                        "debug_id": "629471a5-50ad-480d-bb90-f6c51098ae78",
                                                        "escapes": {
                                                            "escapes": []
                                                        },
                                                        "strings": [],
                                                        "action": {
                                                            "metadata": {
                                                                "type": "auth_pass"
                                                            },
                                                            "type": "auth_pass"
                                                        },
                                                        "type": "action"
                                                    }
                                                },
                                                "type": "condition"
                                            },
                                            "type": "condition"
                                        },
                                        "matched_branches": [
                                            {
                                                "matcher": {
                                                    "metadata": {
                                                        "label": "SCQ upgrade to OTP?",
                                                        "type": "generic_condition",
                                                        "matcherId": "38c8579c-0495-4423-9331-eca27767d81f"
                                                    },
                                                    "data_type": "string",
                                                    "type": "generic_operation",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "hrt_code"
                                                    },
                                                    "operation": "=="
                                                },
                                                "child": {
                                                    "false_branch": {
                                                        "debug_id": "f950344b-0df2-4682-bb60-a2773871f306",
                                                        "metadata": {},
                                                        "procedure_id": "142eacd4-1be4-4cb7-af31-fe8c7ed7ef6a",
                                                        "frame_config": {
                                                            "params": [
                                                                {
                                                                    "name": "sso_hash_id",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "sso_hash_id"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "user_id",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "user_id"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "procedure",
                                                        "child": {
                                                            "false_branch": {
                                                                "debug_id": "ce941902-9cfd-4609-9bf5-407b25413a04",
                                                                "escapes": {
                                                                    "escapes": []
                                                                },
                                                                "strings": [],
                                                                "action": {
                                                                    "variables": [
                                                                        {
                                                                            "name": "mae_determine_authentication_regime_subjourney_output",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "`SCQ`"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "metadata": {
                                                                        "label": "SCQ",
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "set_variables"
                                                                },
                                                                "type": "action",
                                                                "child": {
                                                                    "debug_id": "1273c56f-16b8-4ae2-a4aa-34f6d73f5b6e",
                                                                    "escapes": {
                                                                        "escapes": []
                                                                    },
                                                                    "strings": [],
                                                                    "action": {
                                                                        "metadata": {
                                                                            "type": "auth_pass"
                                                                        },
                                                                        "type": "auth_pass"
                                                                    },
                                                                    "type": "action"
                                                                }
                                                            },
                                                            "debug_id": "9fb7455c-7406-4f85-96d2-503cda7f6caa",
                                                            "condition": {
                                                                "negated": false,
                                                                "metadata": {
                                                                    "label": "User has OTP numbers?",
                                                                    "type": "generic_condition"
                                                                },
                                                                "field": {
                                                                    "type": "expression",
                                                                    "value": "@len(mae_get_otp_phone_numbers_subjourney_output) > 0"
                                                                },
                                                                "data_type": "boolean",
                                                                "type": "generic",
                                                                "operation": "==",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "true"
                                                                }
                                                            },
                                                            "true_branch": {
                                                                "debug_id": "edfd8451-b5e3-42fe-857e-63aa38332469",
                                                                "escapes": {
                                                                    "escapes": []
                                                                },
                                                                "strings": [],
                                                                "action": {
                                                                    "variables": [
                                                                        {
                                                                            "name": "mae_determine_authentication_regime_subjourney_output",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "`OTP_SCQ`"
                                                                            }
                                                                        },
                                                                        {
                                                                            "name": "mae_determine_authentication_regime_subjourney_otp_numbers",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "mae_get_otp_phone_numbers_subjourney_output"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "metadata": {
                                                                        "label": "OTP_SCQ",
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "set_variables"
                                                                },
                                                                "type": "action",
                                                                "child": {
                                                                    "debug_id": "93106a1f-f26c-4b76-bf4b-3fcb715730e0",
                                                                    "escapes": {
                                                                        "escapes": []
                                                                    },
                                                                    "strings": [],
                                                                    "action": {
                                                                        "metadata": {
                                                                            "type": "auth_pass"
                                                                        },
                                                                        "type": "auth_pass"
                                                                    },
                                                                    "type": "action"
                                                                }
                                                            },
                                                            "type": "condition"
                                                        }
                                                    },
                                                    "debug_id": "da04015f-e57b-45ba-aa2c-14a31578f694",
                                                    "condition": {
                                                        "negated": false,
                                                        "metadata": {
                                                            "type": "generic_condition"
                                                        },
                                                        "field": {
                                                            "type": "expression",
                                                            "value": "customer_type == \"C\" || customer_type == \"T\""
                                                        },
                                                        "data_type": "boolean",
                                                        "type": "generic",
                                                        "operation": "==",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "true"
                                                        }
                                                    },
                                                    "true_branch": {
                                                        "false_branch": {
                                                            "debug_id": "390647f2-2e65-4923-a4d0-13bd72266279",
                                                            "metadata": {},
                                                            "procedure_id": "142eacd4-1be4-4cb7-af31-fe8c7ed7ef6a",
                                                            "frame_config": {
                                                                "params": [
                                                                    {
                                                                        "name": "sso_hash_id",
                                                                        "value": {
                                                                            "type": "expression",
                                                                            "value": "sso_hash_id"
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "user_id",
                                                                        "value": {
                                                                            "type": "expression",
                                                                            "value": "user_id"
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "type": "procedure",
                                                            "child": {
                                                                "false_branch": {
                                                                    "debug_id": "a59b7186-671d-4958-b1df-fb9e0a69ced1",
                                                                    "escapes": {
                                                                        "escapes": []
                                                                    },
                                                                    "strings": [],
                                                                    "action": {
                                                                        "variables": [
                                                                            {
                                                                                "name": "mae_determine_authentication_regime_subjourney_output",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "`SCQ`"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "metadata": {
                                                                            "label": "SCQ",
                                                                            "type": "set_variables"
                                                                        },
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "action",
                                                                    "child": {
                                                                        "debug_id": "25ee2719-c65d-417f-bcde-337a83378cf0",
                                                                        "escapes": {
                                                                            "escapes": []
                                                                        },
                                                                        "strings": [],
                                                                        "action": {
                                                                            "metadata": {
                                                                                "type": "auth_pass"
                                                                            },
                                                                            "type": "auth_pass"
                                                                        },
                                                                        "type": "action"
                                                                    }
                                                                },
                                                                "debug_id": "18b5d448-67ff-4da7-b128-18d7a90f98c1",
                                                                "condition": {
                                                                    "negated": false,
                                                                    "metadata": {
                                                                        "label": "User has OTP numbers?",
                                                                        "type": "generic_condition"
                                                                    },
                                                                    "field": {
                                                                        "type": "expression",
                                                                        "value": "@len(mae_get_otp_phone_numbers_subjourney_output) > 0"
                                                                    },
                                                                    "data_type": "boolean",
                                                                    "type": "generic",
                                                                    "operation": "==",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "true"
                                                                    }
                                                                },
                                                                "true_branch": {
                                                                    "debug_id": "e6a8291c-fa78-493b-a9d6-574bac57cc6e",
                                                                    "escapes": {
                                                                        "escapes": []
                                                                    },
                                                                    "strings": [],
                                                                    "action": {
                                                                        "variables": [
                                                                            {
                                                                                "name": "mae_determine_authentication_regime_subjourney_output",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "`OTP_SCQ`"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "mae_determine_authentication_regime_subjourney_otp_numbers",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "mae_get_otp_phone_numbers_subjourney_output"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "metadata": {
                                                                            "label": "OTP_SCQ",
                                                                            "type": "set_variables"
                                                                        },
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "action",
                                                                    "child": {
                                                                        "debug_id": "7b159c1f-faa4-425b-b8b5-0a1b1be334f4",
                                                                        "escapes": {
                                                                            "escapes": []
                                                                        },
                                                                        "strings": [],
                                                                        "action": {
                                                                            "metadata": {
                                                                                "type": "auth_pass"
                                                                            },
                                                                            "type": "auth_pass"
                                                                        },
                                                                        "type": "action"
                                                                    }
                                                                },
                                                                "type": "condition"
                                                            }
                                                        },
                                                        "debug_id": "fd07ff43-b5b7-48fd-bbc7-1cefc53014f4",
                                                        "condition": {
                                                            "negated": false,
                                                            "metadata": {
                                                                "label": "User has token?",
                                                                "type": "generic_condition"
                                                            },
                                                            "field": {
                                                                "type": "expression",
                                                                "value": "is_token_enabled"
                                                            },
                                                            "data_type": "boolean",
                                                            "type": "generic",
                                                            "operation": "==",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "true"
                                                            }
                                                        },
                                                        "true_branch": {
                                                            "debug_id": "6c44e2fc-1329-4476-93f4-f62b0753cee8",
                                                            "escapes": {
                                                                "escapes": []
                                                            },
                                                            "strings": [],
                                                            "action": {
                                                                "variables": [
                                                                    {
                                                                        "name": "mae_determine_authentication_regime_subjourney_output",
                                                                        "value": {
                                                                            "type": "expression",
                                                                            "value": "`TKN`"
                                                                        }
                                                                    }
                                                                ],
                                                                "metadata": {
                                                                    "label": "TKN",
                                                                    "type": "set_variables"
                                                                },
                                                                "type": "set_variables"
                                                            },
                                                            "type": "action",
                                                            "child": {
                                                                "debug_id": "0602b161-75dd-4ad2-8441-aba51328ea35",
                                                                "escapes": {
                                                                    "escapes": []
                                                                },
                                                                "strings": [],
                                                                "action": {
                                                                    "metadata": {
                                                                        "type": "auth_pass"
                                                                    },
                                                                    "type": "auth_pass"
                                                                },
                                                                "type": "action"
                                                            }
                                                        },
                                                        "type": "condition"
                                                    },
                                                    "type": "condition"
                                                }
                                            }
                                        ],
                                        "type": "match_case"
                                    }
                                }
                            },
                            {
                                "matcher": {
                                    "metadata": {
                                        "type": "generic_condition",
                                        "matcherId": "dc4ec094-8e03-4455-81eb-c54df87fa444"
                                    },
                                    "data_type": "string",
                                    "type": "generic_operation",
                                    "value": {
                                        "type": "expression",
                                        "value": "`OOBPHONE`"
                                    },
                                    "operation": "=="
                                },
                                "child": {
                                    "false_branch": {
                                        "debug_id": "69bb737a-76c1-430b-a0dc-7aa3d60c6588",
                                        "metadata": {},
                                        "procedure_id": "142eacd4-1be4-4cb7-af31-fe8c7ed7ef6a",
                                        "frame_config": {
                                            "params": [
                                                {
                                                    "name": "sso_hash_id",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "sso_hash_id"
                                                    }
                                                },
                                                {
                                                    "name": "user_id",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "user_id"
                                                    }
                                                }
                                            ]
                                        },
                                        "type": "procedure",
                                        "child": {
                                            "false_branch": {
                                                "debug_id": "07b0dd08-abe9-4d52-94ee-eef9f44f0abd",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "variables": [
                                                        {
                                                            "name": "mae_determine_authentication_regime_subjourney_output",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "`ERROR`"
                                                            }
                                                        }
                                                    ],
                                                    "metadata": {
                                                        "label": "ERROR",
                                                        "type": "set_variables"
                                                    },
                                                    "type": "set_variables"
                                                },
                                                "type": "action",
                                                "child": {
                                                    "debug_id": "8179bd60-4c05-49b6-a134-cd9bb90c6847",
                                                    "escapes": {
                                                        "escapes": []
                                                    },
                                                    "strings": [],
                                                    "action": {
                                                        "metadata": {
                                                            "type": "auth_pass"
                                                        },
                                                        "type": "auth_pass"
                                                    },
                                                    "type": "action"
                                                }
                                            },
                                            "debug_id": "c9ff2bab-b459-4781-b1fc-6362cc15e1e3",
                                            "condition": {
                                                "negated": false,
                                                "metadata": {
                                                    "label": "User has OTP numbers?",
                                                    "type": "generic_condition"
                                                },
                                                "field": {
                                                    "type": "expression",
                                                    "value": "@len(mae_get_otp_phone_numbers_subjourney_output) > 0"
                                                },
                                                "data_type": "boolean",
                                                "type": "generic",
                                                "operation": "==",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "true"
                                                }
                                            },
                                            "true_branch": {
                                                "debug_id": "ba539754-5c8a-4f4e-b2a4-746d5b6ba5fc",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "variables": [
                                                        {
                                                            "name": "mae_determine_authentication_regime_subjourney_output",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "`OTP`"
                                                            }
                                                        },
                                                        {
                                                            "name": "mae_determine_authentication_regime_subjourney_otp_numbers",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "mae_get_otp_phone_numbers_subjourney_output"
                                                            }
                                                        }
                                                    ],
                                                    "metadata": {
                                                        "label": "OTP",
                                                        "type": "set_variables"
                                                    },
                                                    "type": "set_variables"
                                                },
                                                "type": "action",
                                                "child": {
                                                    "debug_id": "70f2cfe9-152b-4fed-9698-d57aec6a70ac",
                                                    "escapes": {
                                                        "escapes": []
                                                    },
                                                    "strings": [],
                                                    "action": {
                                                        "metadata": {
                                                            "type": "auth_pass"
                                                        },
                                                        "type": "auth_pass"
                                                    },
                                                    "type": "action"
                                                }
                                            },
                                            "type": "condition"
                                        }
                                    },
                                    "debug_id": "18c92738-d73c-45ee-b213-e24800130965",
                                    "condition": {
                                        "negated": false,
                                        "metadata": {
                                            "label": "User has token?",
                                            "type": "generic_condition"
                                        },
                                        "field": {
                                            "type": "expression",
                                            "value": "is_token_enabled"
                                        },
                                        "data_type": "boolean",
                                        "type": "generic",
                                        "operation": "==",
                                        "value": {
                                            "type": "expression",
                                            "value": "true"
                                        }
                                    },
                                    "true_branch": {
                                        "debug_id": "761b5d4d-49d8-4d88-8efb-152ab1d1af17",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "variables": [
                                                {
                                                    "name": "mae_determine_authentication_regime_subjourney_output",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "`TKN`"
                                                    }
                                                }
                                            ],
                                            "metadata": {
                                                "label": "TKN",
                                                "type": "set_variables"
                                            },
                                            "type": "set_variables"
                                        },
                                        "type": "action",
                                        "child": {
                                            "debug_id": "256307d4-8318-460f-b464-d5fe33ff446e",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "metadata": {
                                                    "type": "auth_pass"
                                                },
                                                "type": "auth_pass"
                                            },
                                            "type": "action"
                                        }
                                    },
                                    "type": "condition"
                                }
                            },
                            {
                                "matcher": {
                                    "metadata": {
                                        "type": "generic_condition",
                                        "matcherId": "bef2190e-5475-4010-b670-45a0e91e751b"
                                    },
                                    "data_type": "string",
                                    "type": "generic_operation",
                                    "value": {
                                        "type": "expression",
                                        "value": "`TKN`"
                                    },
                                    "operation": "=="
                                },
                                "child": {
                                    "false_branch": {
                                        "debug_id": "558adb38-c435-49ed-b9a1-d1a8067f3048",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "variables": [
                                                {
                                                    "name": "mae_determine_authentication_regime_subjourney_output",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "`ERROR`"
                                                    }
                                                }
                                            ],
                                            "metadata": {
                                                "label": "ERROR",
                                                "type": "set_variables"
                                            },
                                            "type": "set_variables"
                                        },
                                        "type": "action",
                                        "child": {
                                            "debug_id": "017fb6e2-ce4a-443a-95b2-6e4975005925",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "metadata": {
                                                    "type": "auth_pass"
                                                },
                                                "type": "auth_pass"
                                            },
                                            "type": "action"
                                        }
                                    },
                                    "debug_id": "249dcbc2-09e2-49e4-919b-62f1fc438e2c",
                                    "condition": {
                                        "negated": false,
                                        "metadata": {
                                            "label": "User has token?",
                                            "type": "generic_condition"
                                        },
                                        "field": {
                                            "type": "expression",
                                            "value": "is_token_enabled"
                                        },
                                        "data_type": "boolean",
                                        "type": "generic",
                                        "operation": "==",
                                        "value": {
                                            "type": "expression",
                                            "value": "true"
                                        }
                                    },
                                    "true_branch": {
                                        "debug_id": "ed600b5b-6c9c-4f69-bb6b-3c08037f3482",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "variables": [
                                                {
                                                    "name": "mae_determine_authentication_regime_subjourney_output",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "`TKN`"
                                                    }
                                                }
                                            ],
                                            "metadata": {
                                                "label": "TKN",
                                                "type": "set_variables"
                                            },
                                            "type": "set_variables"
                                        },
                                        "type": "action",
                                        "child": {
                                            "debug_id": "4e1bb7d7-f0c4-460b-878d-4dbbba247932",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "metadata": {
                                                    "type": "auth_pass"
                                                },
                                                "type": "auth_pass"
                                            },
                                            "type": "action"
                                        }
                                    },
                                    "type": "condition"
                                }
                            }
                        ],
                        "type": "match_case"
                    }
                },
                "name": "mae_determine_authentication_regime_subjourney",
                "id": "dd8a084d-3758-4f82-9ceb-e2d6d33ccf47"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/cfb16102-eeaa-4a4e-ad55-e1c062a878ba",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_get_phone_numbers_for_otp",
                "provider_id": "cfb16102-eeaa-4a4e-ad55-e1c062a878ba",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "type": "array"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let is_bco_user = user_info.customerLobType == \"S\" && @customFunctions.bco_api_authscriptfunction_is_bco_user(user_info.userHashId).is_bco_user\nreturn\n  let cif_for_demographics = is_bco_user ? user_info.personalCifId : user_info.customerId,\n      filtered_phone_list = @filter(phone_list, (p) => @customFunctions.mae_api_authscriptfunction_phone_is_mobile_and_us(p,phone_risk_transaction_id) && @customFunctions.mae_api_authscriptfunction_phone_number_confidence_score_passes(p.phoneNumber,phone_risk_transaction_id))\n  return\n    let phones = @map(filtered_phone_list, (p) => @customFunctions.mae_api_authscriptfunction_separate_seasoned_unseasoned_phone_numbers(p))\n    return \n      let demographics = @customFunctions.mae_api_authscriptfunction_get_customer_demographics(cif_for_demographics)\n      return\n        let customerFullName = is_bco_user ? demographics.customerName : user_info.customerFullName\n        return\n          let parsedName = @customFunctions.mae_api_authscriptfunction_user_info_parse_name(customerFullName)\n          return\n            @map(\n              @filter(phones, (p) => p.seasoned || ((user_info.customerLobType == \"R\" || user_info.userRole == \"BCO\") && @customFunctions.mae_api_authscriptfunction_phone_number_match_score_info_passes(p.phoneNumber, parsedName.firstName, parsedName.lastName, user_info.primaryEmail, @customFunctions.mae_api_authscriptfunction_build_address_from_demographics(demographics),phone_risk_transaction_id))),\n              (p) => p.phoneNumber\n            )\n"
                    },
                    "description": "Returns a list of phone numbers for use with OTP, if the current user has any.",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "user_info",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "phone_list",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "List as returned in \"phones\" element of userphones/users/hashid/phones query",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "phone_risk_transaction_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Transaction ID to be used for all Boku calls in this session",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/909c2ad7-3928-4fe0-a1d7-f6ceff59ce05",
            "data": {
                "provider_type": "function-web-request",
                "name": "oa2_api_webservicefunction_pingfed_token_oauth2",
                "provider_id": "909c2ad7-3928-4fe0-a1d7-f6ceff59ce05",
                "config": {
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "jwtAssertion",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "jwt as assertion",
                            "optional": false
                        }
                    ],
                    "wait_for_response": true,
                    "type": "function-web-request",
                    "web_request": {
                        "fail_on_non_2xx_response": false,
                        "headers": [
                            {
                                "name": "X-Xsrf-Header",
                                "value": {
                                    "type": "expression",
                                    "value": "`Ping`"
                                }
                            },
                            {
                                "name": "Content-Type",
                                "value": {
                                    "type": "expression",
                                    "value": "`application/x-www-form-urlencoded`"
                                }
                            },
                            {
                                "name": "Accept",
                                "value": {
                                    "type": "expression",
                                    "value": "`text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8`"
                                }
                            }
                        ],
                        "transform": {
                            "type": "expression",
                            "value": "response.body.access_token"
                        },
                        "response_format": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "headers": {
                                        "type": "object"
                                    },
                                    "multiValueHeaders": {
                                        "type": "object"
                                    },
                                    "transformed_data": {
                                        "type": "string"
                                    },
                                    "body": {
                                        "type": "object",
                                        "properties": {
                                            "access_token": {
                                                "type": "string"
                                            },
                                            "token_type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "status": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "type": "json_object"
                        },
                        "ssl_identities": {
                            "trusted_identities": []
                        },
                        "method": "post",
                        "connection_config": {
                            "follow_redirect": true,
                            "request_timeout": 60,
                            "use_cookie_store": false,
                            "connection_timeout": 5
                        },
                        "body": {
                            "type": "expression",
                            "value": "`assertion=${jwtAssertion}`"
                        },
                        "uri": {
                            "type": "expression",
                            "value": "`https://${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"mae_oa2_pingfed_api\")}/as/token.oauth2?grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer`"
                        },
                        "authentication": {
                            "credentials_ref": {
                                "provider_type": "db",
                                "alias": "PFTSClient",
                                "type": "credentials"
                            },
                            "type": "basic"
                        },
                        "logging_config": {
                            "outgoing_requests_config": "info",
                            "ok_response_config": "info",
                            "failed_response_config": "warning"
                        }
                    }
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/12435840-4948-4280-8783-e2af122a125a",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "raaAnalyzeResponse": {
                                            "type": "object"
                                        },
                                        "actionCode": {
                                            "type": "string",
                                            "enum": [
                                                "ALLOW",
                                                "DENY",
                                                "CHALLENGE"
                                            ]
                                        },
                                        "challengeType": {
                                            "type": "string",
                                            "enum": [
                                                "QUESTION",
                                                "KBA",
                                                "OOB",
                                                "TKN"
                                            ]
                                        },
                                        "riskScore": {
                                            "type": "string"
                                        },
                                        "transactionId": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "mae_hrt_raa_analyze_subjourney_output",
                            "description": "The response from the RSA Adaptive Auth ANALYZE call"
                        },
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "identificationData": {
                                            "type": "object",
                                            "properties": {
                                                "userStatus": {
                                                    "type": "string"
                                                },
                                                "sessionId": {
                                                    "type": "string"
                                                },
                                                "userName": {
                                                    "type": "string"
                                                },
                                                "transactionId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "userData": {
                                            "type": "object",
                                            "properties": {
                                                "lastAccoutOpenDate": {
                                                    "type": "string"
                                                },
                                                "onlineServiceEnrollDate": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "channelIndicator": {
                                            "type": "string"
                                        },
                                        "messageHeader": {
                                            "type": "object",
                                            "properties": {
                                                "requestId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "deviceRequest": {
                                            "type": "object",
                                            "properties": {
                                                "devicePrint": {
                                                    "type": "string"
                                                },
                                                "httpAcceptLanguage": {
                                                    "type": "string"
                                                },
                                                "httpAccept": {
                                                    "type": "string"
                                                },
                                                "ipAddress": {
                                                    "type": "string"
                                                },
                                                "userAgent": {
                                                    "type": "string"
                                                },
                                                "httpReferrer": {
                                                    "type": "string"
                                                },
                                                "deviceTokenCookie": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "eventDataList": {
                                            "type": "object",
                                            "properties": {
                                                "eventData": {
                                                    "type": "object",
                                                    "properties": {
                                                        "eventData": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "eventDescription": {
                                                                        "type": "string"
                                                                    },
                                                                    "clientDefinedAttributeList": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "dataType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "eventType": {
                                                                        "type": "string"
                                                                    },
                                                                    "clientDefinedEventType": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "mae_hrt_raa_analyze_subjourney_request"
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "rsa_key",
                            "description": "Sent to RSA Analyze as userName"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "device_print",
                            "description": "devicePrint as provided by the RSA mobile SDK"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "allow_url"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "user_session_token"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "hrt_policy_id",
                            "description": "HRT Policy ID"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "username",
                            "description": "mae username"
                        },
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactionData": {
                                            "type": "object",
                                            "properties": {
                                                "amount": {
                                                    "type": "object",
                                                    "properties": {
                                                        "amount": {
                                                            "type": "string"
                                                        },
                                                        "currency": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "otherAccountData": {
                                                    "type": "object",
                                                    "properties": {
                                                        "accountType": {
                                                            "type": "string"
                                                        },
                                                        "accountNumberIntlFormat": {
                                                            "type": "object",
                                                            "properties": {
                                                                "format": {
                                                                    "type": "string"
                                                                },
                                                                "accountNumber": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "accountNumber": {
                                                            "type": "string"
                                                        },
                                                        "accountOwnershipType": {
                                                            "type": "string"
                                                        },
                                                        "routingCode": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "myAccountData": {
                                                    "type": "object",
                                                    "properties": {
                                                        "accountType": {
                                                            "type": "string"
                                                        },
                                                        "accountNumber": {
                                                            "type": "string"
                                                        },
                                                        "accountOwnershipType": {
                                                            "type": "string"
                                                        },
                                                        "routingCode": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "clientDefinedAttributeList": {
                                            "type": "object",
                                            "properties": {
                                                "fact": {
                                                    "type": "object",
                                                    "properties": {
                                                        "fact": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "dataType": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "newUserData": {
                                            "type": "object",
                                            "properties": {
                                                "userAddress": {
                                                    "type": "object",
                                                    "properties": {
                                                        "country": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "addressLine1": {
                                                            "type": "string"
                                                        },
                                                        "addressLine2": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": "string"
                                                        },
                                                        "region": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "userTelephones": {
                                                    "type": "object",
                                                    "properties": {
                                                        "contactList": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "areaCode": {
                                                                        "type": "string"
                                                                    },
                                                                    "phoneType": {
                                                                        "type": "string"
                                                                    },
                                                                    "phoneNumber": {
                                                                        "type": "string"
                                                                    },
                                                                    "label": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "additional_event_data",
                            "description": "additional event data (e.g. clientDefinedAttributeList, transactionData, newUserData)"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "sso_hash_id",
                            "description": "SSO Hash ID"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "7a923d48-06fc-4a8f-90a2-c816d28f34e3",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "variables": [
                            {
                                "name": "event_data",
                                "value": {
                                    "type": "expression",
                                    "value": "@customFunctions.mae_api_authscriptfunction_build_eventdata(hrt_policy_id)"
                                }
                            },
                            {
                                "name": "client_ip",
                                "value": {
                                    "type": "expression",
                                    "value": "@policy.request().client_ip"
                                }
                            },
                            {
                                "name": "transaction_id",
                                "value": {
                                    "type": "expression",
                                    "value": "@std.uuid()"
                                }
                            }
                        ],
                        "metadata": {
                            "notes": "Use custom function to create the eventData object based on the HRT ID",
                            "label": "Create eventData",
                            "type": "set_variables"
                        },
                        "type": "set_variables"
                    },
                    "type": "action",
                    "child": {
                        "debug_id": "79cf4c57-231e-4a57-aaaf-07c3af1e5963",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "variables": [
                                {
                                    "name": "mae_hrt_raa_analyze_subjourney_request",
                                    "value": {
                                        "type": "expression",
                                        "value": "{\n    deviceRequest: {\n        \"httpAccept\": \"tablet/json\",\n        \"ipAddress\": client_ip,\n        \"deviceSpecific\": {\n            \"mobile\": {\n                \"mobileInfoSdk\": device_print\n            }\n        }\n    },\n    identificationData:{\n        \"transactionId\": transaction_id,\n        \"userName\": rsa_key\n    },\n    messageHeader:{\n        \"requestId\": @std.uuid()\n    },\n    channelIndicator: \"MOBILE\",\n    eventDataList: {\n        eventData: {\n            eventData: [{\n                /* explicitly remapping the properties within these objects; they will be serialized in insertion order */\n                /* the service may not work if the order that the properties appear in the resulting XML is not in this order */\n                clientDefinedAttributeList: additional_event_data.clientDefinedAttributeList || {},\n                clientDefinedEventType: event_data.clientDefinedEventType,\n                eventDescription: event_data.eventDescription,\n                eventType: event_data.eventType,\n                newUserData: additional_event_data.newUserData || {},\n                transactionData: additional_event_data.transactionData || {}\n            }]\n        }\n    }\n}"
                                    }
                                }
                            ],
                            "metadata": {
                                "label": "Build the Analyze request",
                                "type": "set_variables"
                            },
                            "type": "set_variables"
                        },
                        "type": "action",
                        "child": {
                            "debug_id": "f8b88e56-308b-4303-b95b-86e742dd5722",
                            "metadata": {
                                "label": "Send Analyze request "
                            },
                            "procedure_id": "15797b3b-5249-43c2-98b4-710f6f102a8d",
                            "frame_config": {
                                "params": [
                                    {
                                        "name": "analyze_request",
                                        "value": {
                                            "type": "expression",
                                            "value": "mae_hrt_raa_analyze_subjourney_request"
                                        }
                                    }
                                ]
                            },
                            "type": "procedure",
                            "child": {
                                "debug_id": "1d73428a-ef9a-473a-ae57-df075b55c317",
                                "metadata": {
                                    "notes": "Invoke subjourney to log the result of the Analyze call. If the result was DENY, the subjourney will log the user out.",
                                    "label": "Log result"
                                },
                                "procedure_id": "ad79d624-af71-42c9-91a6-3c644e67f8f7",
                                "frame_config": {
                                    "params": [
                                        {
                                            "name": "mae_response",
                                            "value": {
                                                "type": "expression",
                                                "value": "mae_send_rsa_analyze_subjourney_result"
                                            }
                                        },
                                        {
                                            "name": "mae_response_type",
                                            "value": {
                                                "type": "expression",
                                                "value": "`RAA`"
                                            }
                                        },
                                        {
                                            "name": "mae_ip_address",
                                            "value": {
                                                "type": "expression",
                                                "value": "client_ip"
                                            }
                                        },
                                        {
                                            "name": "mae_allow_url",
                                            "value": {
                                                "type": "expression",
                                                "value": "allow_url"
                                            }
                                        },
                                        {
                                            "name": "mae_login_id",
                                            "value": {
                                                "type": "expression",
                                                "value": "username"
                                            }
                                        },
                                        {
                                            "name": "mae_user_session_token",
                                            "value": {
                                                "type": "expression",
                                                "value": "user_session_token"
                                            }
                                        },
                                        {
                                            "name": "mae_raa_transaction_id",
                                            "value": {
                                                "type": "expression",
                                                "value": "mae_send_rsa_analyze_subjourney_result?.identificationData?.transactionId"
                                            }
                                        },
                                        {
                                            "name": "mae_hrt_code",
                                            "value": {
                                                "type": "expression",
                                                "value": "hrt_policy_id"
                                            }
                                        },
                                        {
                                            "name": "mae_sso_hash_id",
                                            "value": {
                                                "type": "expression",
                                                "value": "sso_hash_id"
                                            }
                                        },
                                        {
                                            "name": "final_attempt",
                                            "value": {
                                                "type": "expression",
                                                "value": "false"
                                            }
                                        }
                                    ]
                                },
                                "type": "procedure",
                                "child": {
                                    "false_branch": {
                                        "debug_id": "20a9977a-cc2b-41a5-8b0c-98e0b7393f2c",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "variables": [
                                                {
                                                    "name": "mae_hrt_raa_analyze_subjourney_output",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "{\n    raaAnalyzeResponse: mae_send_rsa_analyze_subjourney_result,\n    success: false\n}"
                                                    }
                                                }
                                            ],
                                            "metadata": {
                                                "label": "Build return value",
                                                "type": "set_variables"
                                            },
                                            "type": "set_variables"
                                        },
                                        "type": "action",
                                        "child": {
                                            "debug_id": "515cd13c-862e-4b1b-82b9-e2779f7d42e4",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "metadata": {
                                                    "type": "auth_pass"
                                                },
                                                "type": "auth_pass"
                                            },
                                            "type": "action"
                                        }
                                    },
                                    "debug_id": "91bbebb5-278b-49dd-bc32-6095951f3185",
                                    "condition": {
                                        "negated": false,
                                        "metadata": {
                                            "notes": "Did the analyze call succeed?",
                                            "label": "Success?",
                                            "type": "generic_condition"
                                        },
                                        "field": {
                                            "type": "expression",
                                            "value": "mae_send_rsa_analyze_subjourney_result.success"
                                        },
                                        "data_type": "boolean",
                                        "type": "generic",
                                        "operation": "==",
                                        "value": {
                                            "type": "expression",
                                            "value": "true"
                                        }
                                    },
                                    "true_branch": {
                                        "debug_id": "7c61c782-c5d2-4230-b8d5-3da2c9320bc2",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "variables": [
                                                {
                                                    "name": "action_code",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "mae_send_rsa_analyze_subjourney_result.success\n    ? (\n        mae_send_rsa_analyze_subjourney_result.riskResult.triggeredRule == null\n        ? \"ALLOW\" \n        : (\n            mae_send_rsa_analyze_subjourney_result.riskResult.triggeredRule.actionCode == \"REDIRECT_CHALLENGE\" \n            ? \"CHALLENGE\" \n            : mae_send_rsa_analyze_subjourney_result.riskResult.triggeredRule.actionCode\n        ) \n    )\n    : \"DENY\""
                                                    }
                                                }
                                            ],
                                            "metadata": {
                                                "label": "Get actionCode",
                                                "type": "set_variables"
                                            },
                                            "type": "set_variables"
                                        },
                                        "type": "action",
                                        "child": {
                                            "debug_id": "5fb7c200-f8f7-48ba-98d9-b938e8443638",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "variables": [
                                                    {
                                                        "name": "mae_hrt_raa_analyze_subjourney_output",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "{\n    success: true,\n    transactionId: mae_send_rsa_analyze_subjourney_result?.identificationData?.transactionId,\n    raaAnalyzeResponse: mae_send_rsa_analyze_subjourney_result,\n    riskScore: mae_send_rsa_analyze_subjourney_result?.riskResult?.riskScore,\n    actionCode: action_code,\n    requestId: mae_send_rsa_analyze_subjourney_result.messageHeader.requestId\n}"
                                                        }
                                                    }
                                                ],
                                                "metadata": {
                                                    "label": "Build return value",
                                                    "type": "set_variables"
                                                },
                                                "type": "set_variables"
                                            },
                                            "type": "action",
                                            "child": {
                                                "debug_id": "0af2ad8a-1bd9-4b74-bdaa-e4b64a5dc970",
                                                "metadata": {
                                                    "notes": "If actionCode was \"CHALLENGE\", include challengeType in the return value",
                                                    "label": "Add challengeType"
                                                },
                                                "block": {
                                                    "debug_id": "9f7a8304-fa9c-408d-807a-c791bbfa831e",
                                                    "metadata": {
                                                        "data_type": "string",
                                                        "type": "match_case"
                                                    },
                                                    "field": {
                                                        "type": "expression",
                                                        "value": "action_code"
                                                    },
                                                    "otherwise_branch": {
                                                        "debug_id": "63f2edf4-d2fe-4a0e-b464-a564b631cd54",
                                                        "escapes": {
                                                            "escapes": []
                                                        },
                                                        "strings": [],
                                                        "action": {
                                                            "variables": [
                                                                {
                                                                    "name": "stupid",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "\"If I don't have a tile here, the journey aborts. So here's a completely pointless tile. Yay.\""
                                                                    }
                                                                }
                                                            ],
                                                            "metadata": {
                                                                "label": "Ignore",
                                                                "type": "set_variables"
                                                            },
                                                            "type": "set_variables"
                                                        },
                                                        "type": "action"
                                                    },
                                                    "matched_branches": [
                                                        {
                                                            "matcher": {
                                                                "metadata": {
                                                                    "type": "generic_condition",
                                                                    "matcherId": "8e3e8742-15c9-43f7-8b0c-fa7d88bca8f0"
                                                                },
                                                                "data_type": "string",
                                                                "type": "generic_operation",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "\"CHALLENGE\""
                                                                },
                                                                "operation": "=="
                                                            },
                                                            "child": {
                                                                "debug_id": "741a7e3f-94f2-4855-8a1b-8040f450a077",
                                                                "escapes": {
                                                                    "escapes": []
                                                                },
                                                                "strings": [],
                                                                "action": {
                                                                    "variables": [
                                                                        {
                                                                            "name": "mae_hrt_raa_analyze_subjourney_output",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "mae_hrt_raa_analyze_subjourney_output + {challengeType: \"QUESTION\"}"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "metadata": {
                                                                        "label": "Add challengeType",
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "set_variables"
                                                                },
                                                                "type": "action"
                                                            }
                                                        }
                                                    ],
                                                    "type": "match_case"
                                                },
                                                "type": "block",
                                                "child": {
                                                    "debug_id": "240f0534-548b-43d5-b033-fbac651ca6d1",
                                                    "escapes": {
                                                        "escapes": []
                                                    },
                                                    "strings": [],
                                                    "action": {
                                                        "metadata": {
                                                            "type": "auth_pass"
                                                        },
                                                        "type": "auth_pass"
                                                    },
                                                    "type": "action"
                                                }
                                            }
                                        }
                                    },
                                    "type": "condition"
                                }
                            }
                        }
                    }
                },
                "name": "mae_hrt_raa_analyze_subjourney",
                "id": "12435840-4948-4280-8783-e2af122a125a"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/6e3ca1eb-278b-479a-a633-c84fa2f02d08",
            "data": {
                "provider_type": "function-web-request",
                "name": "bco_webservicefunction_is_bco_user",
                "provider_id": "6e3ca1eb-278b-479a-a633-c84fa2f02d08",
                "config": {
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "ssoHashId",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "SSO Hash Id of the user",
                            "optional": false
                        }
                    ],
                    "wait_for_response": true,
                    "type": "function-web-request",
                    "web_request": {
                        "fail_on_non_2xx_response": false,
                        "headers": [],
                        "transform": {
                            "type": "expression",
                            "value": "let get = (object, path) => @customFunctions.mae_api_authscriptfunction_get(object, path) return\nlet contents = @(get)(response, [\"body\", \"soapenv:Envelope\", \"soapenv:Body\", 0, \"v1:verifyBCOStatusResponse\", 0]) return\nlet isBCOUser = @(get)(contents, [\"isBCO\", 0, \"__text\"]) return \n{\n  \"isBCOUser\": isBCOUser == \"true\"\n}"
                        },
                        "response_format": {
                            "type": "json_object"
                        },
                        "ssl_identities": {
                            "trusted_identities": []
                        },
                        "method": "post",
                        "connection_config": {
                            "follow_redirect": false,
                            "request_timeout": 30,
                            "use_cookie_store": false,
                            "connection_timeout": 5
                        },
                        "transform_schema": {
                            "type": "object",
                            "properties": {
                                "isBCOUser": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "body": {
                            "type": "expression",
                            "value": "`<env:Envelope\nxmlns:env='http://schemas.xmlsoap.org/soap/envelope/'>\n<env:Header><wsse:Security xmlns:wsse=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\">\n   <wsse:UsernameToken wsu:Id=\"UsernameToken-92A855C0A9F6B7CDFE165064656139212\"><wsse:Username>${@identities.extractCredentials(\"mae_wca_api_svc_wamae03\").id}</wsse:Username>\n   <wsse:Password Type=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\">${@identities.extractCredentials(\"mae_wca_api_svc_wamae03\").secret}</wsse:Password>\n   <wsse:Nonce EncodingType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\">${@uuid()}</wsse:Nonce>\n   <wsu:Created>2022-04-22T16:56:01.392Z</wsu:Created></wsse:UsernameToken></wsse:Security></env:Header>\n<env:Body>\n<ns1:verifyBCOStatusRequest\nxmlns:ns2=\"http://soa.unionbank.com/internetBanking/types/common/v1\"\nxmlns:ns1=\"http://soa.unionbank.com/internetBanking/types/messages/bco/v1\">\n<ns2:requestContext>\n<ns2:requestUuid>b9d0052a-a79f-49b4-8067-b94148e5c882</ns2:requestUuid>\n<ns2:requestor>\n<ns2:requestorAppName>Txm</ns2:requestorAppName>\n</ns2:requestor>\n<ns2:requestDt>2022-04-01T20:40:55.175Z</ns2:requestDt>\n</ns2:requestContext>\n<ssoHashId>${ssoHashId}</ssoHashId>\n</ns1:verifyBCOStatusRequest>\n</env:Body>\n</env:Envelope>`"
                        },
                        "uri": {
                            "type": "expression",
                            "value": "`${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"soa_bco_service_url\")}`"
                        },
                        "authentication": {
                            "credentials_ref": {
                                "provider_type": "db",
                                "alias": "mae_wca_api_svc_wamae03",
                                "type": "credentials"
                            },
                            "type": "basic"
                        },
                        "logging_config": {
                            "outgoing_requests_config": "debug",
                            "ok_response_config": "info",
                            "failed_response_config": "info"
                        }
                    }
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/b7f1ace9-1395-4d32-9d41-f9ae13c9574e",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "ssoHashId",
                            "description": "The SSO Hash Id of the logged in user"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "11daca46-c36d-4eac-9e25-6e9c368fc6b3",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "variables": [
                            {
                                "name": "result",
                                "value": {
                                    "ns": "customFunctions",
                                    "function": "mae_api_authscriptfunction_get_user_phone_numbers",
                                    "argExpressions": [
                                        {
                                            "type": "expression",
                                            "value": "ssoHashId"
                                        }
                                    ],
                                    "type": "fnInvoke"
                                }
                            }
                        ],
                        "metadata": {
                            "function_name": "customFunctions:mae_api_authscriptfunction_get_user_phone_numbers",
                            "type": "function_invoke"
                        },
                        "type": "set_variables"
                    },
                    "type": "action",
                    "child": {
                        "debug_id": "0dfe72bb-fc2a-4800-83a2-403cba164fbe",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "metadata": {
                                "label": "Add to session",
                                "type": "custom_session_data"
                            },
                            "data": {
                                "type": "expression",
                                "value": "let sessionData = [\n    {\n        \"path\": [\"phoneNumbers\"],\n        \"value\": result\n    },\n    {\n        \"path\": [\"otp\", \"phone_numbers\"],\n        \"value\": result\n    }\n]\nreturn @reduce(sessionData, @policy.session().custom_data, (accum, x) => @customFunctions.mae_api_authscriptfunction_set(accum, x.path, x.value))"
                            },
                            "scope": "session",
                            "deep_merge": false,
                            "type": "custom_data"
                        },
                        "type": "action",
                        "child": {
                            "debug_id": "ce51b5a5-e043-4c14-bd0e-3bd5db4add28",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "metadata": {
                                    "type": "auth_pass"
                                },
                                "type": "auth_pass"
                            },
                            "type": "action"
                        }
                    }
                },
                "name": "mae_a4c_get_phone_numbers_subjourney",
                "id": "b7f1ace9-1395-4d32-9d41-f9ae13c9574e"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/3aa03860-9382-4d90-84df-bca752cbf4dc",
            "data": {
                "provider_type": "function-web-request",
                "name": "mol_phone_risk_evaluation",
                "provider_id": "3aa03860-9382-4d90-84df-bca752cbf4dc",
                "config": {
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "request",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "description": "Look at External Connection Request Body for details",
                            "optional": false
                        }
                    ],
                    "wait_for_response": true,
                    "type": "function-web-request",
                    "web_request": {
                        "fail_on_non_2xx_response": false,
                        "headers": [
                            {
                                "name": "X-MUFG-Request-Uuid",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@uuid()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-Request-Ts",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@customFunctions.mae_api_authscriptfunction_request_timestamp()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-User-Uuid",
                                "value": {
                                    "type": "expression",
                                    "value": "`a573443f-d5c4-4533-a2ac-060af7e0e4b`"
                                }
                            },
                            {
                                "name": "X-MUFG-Application-Id",
                                "value": {
                                    "type": "expression",
                                    "value": "`MAE`"
                                }
                            },
                            {
                                "name": "X-MUFG-ChannelId",
                                "value": {
                                    "type": "expression",
                                    "value": "`MAE`"
                                }
                            },
                            {
                                "name": "Content-Type",
                                "value": {
                                    "type": "expression",
                                    "value": "`application/json`"
                                }
                            }
                        ],
                        "response_format": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "headers": {
                                        "type": "object"
                                    },
                                    "multiValueHeaders": {
                                        "type": "object"
                                    },
                                    "body": {
                                        "type": "object",
                                        "required": [
                                            "phoneRiskTransactionId"
                                        ],
                                        "properties": {
                                            "phoneRiskTransactionId": {
                                                "description": "This is a unique id for all calls to Boku in one transaction.  Note that one transaction may be multiple steps, and a customer may need to complete a phone risk process  multiple times, each time being a separate transaction.",
                                                "type": "string"
                                            },
                                            "phoneRiskResults": {
                                                "type": "object",
                                                "properties": {
                                                    "confidenceScore": {
                                                        "description": "This score indicates the level of confidence Boku has for the phone number. The score ranges from 0 - 100. A higher score indicates higher confidence. The confidence score considers all the attributes configured for the merchant at the time of onboarding.    Example: confidenceScore: 50",
                                                        "type": "integer"
                                                    },
                                                    "phoneNumber": {
                                                        "description": "The phone number on which the risk assessment is performed. It should in E.164 international format.      Example: +14085551234",
                                                        "type": "string"
                                                    },
                                                    "phoneInfo": {
                                                        "type": "object",
                                                        "properties": {
                                                            "serviceType": {
                                                                "description": "Indicates if the phone number is a mobile, fixed or VOIP. Example serviceType: mobile",
                                                                "type": "string"
                                                            },
                                                            "countryPhoneCode": {
                                                                "description": "The unique number given to each country for dialing a Telephone Number in that country from abroad. e.g. 1 (USA) e.g. 32 (Belgium) e.g. 353 (Ireland) e.g. 44 (UK)",
                                                                "type": "string"
                                                            },
                                                            "serviceProvider": {
                                                                "description": "Specifies the name of the carrier the phone number is registered to. Example serviceProvider: AT&T Wireless",
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "phoneVerificationMatchScores": {
                                                        "type": "object",
                                                        "properties": {
                                                            "streetAddressScore": {
                                                                "description": "Level of match for the Street Address attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.      The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *5= Partial Match   *9=High Partial Match   *10=Exact Match   Example Score: 10",
                                                                "type": "integer"
                                                            },
                                                            "lastNameScore": {
                                                                "description": "Level of match for the Last Name attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.      The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *5= Partial Match   *9=High Partial Match   *10=Exact Match   Example lastNameScore: 10",
                                                                "type": "integer"
                                                            },
                                                            "emailAddressScore": {
                                                                "description": "Level of match for the Email Address attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                                "type": "integer"
                                                            },
                                                            "cityScore": {
                                                                "description": "Level of match for the City attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                                "type": "integer"
                                                            },
                                                            "zipCodeScore": {
                                                                "description": "Level of match for the Postal Codeattribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                                "type": "integer"
                                                            },
                                                            "dataSourceForVerification": {
                                                                "description": "Returns the data source that the merchant data was compared against. Values can be Carrier or Third-Party . Example dataSource: Carrier",
                                                                "type": "string"
                                                            },
                                                            "firstNameScore": {
                                                                "description": "Level of match for the First Name attribute assigned to the submitted mobile number from low to high the higher the Match score, more accurate is the match. The Values could be: -2=Merchant did not submit data for attribute -1=Data not available for attribute 0=No Match 5= Partial Match 9=High Partial Match 10=Exact Match Example firstNameScore: 10",
                                                                "type": "integer"
                                                            },
                                                            "stateScore": {
                                                                "description": "Level of match for the State attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                                "type": "integer"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "status": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "type": "json_object"
                        },
                        "ssl_identities": {
                            "trusted_identities": []
                        },
                        "method": "post",
                        "connection_config": {
                            "follow_redirect": false,
                            "request_timeout": 30,
                            "use_cookie_store": false,
                            "connection_timeout": 5
                        },
                        "body": {
                            "type": "expression",
                            "value": "`${{\n    \"requestType\": @contains([\"Phone Info\", \"Match Score Info\", \"Confidence Score\"], request.requestType) ? request.requestType : \"\",\n    \"riskEvaluationPhone\": request.riskEvaluationPhone,\n    \"consentId\": @uuid(),\n    \"firstName\": request.firstName,\n    \"lastName\": request.lastName,\n    \"consentTimeStamp\": @time.formatDateTime(\"YYYY-MM-dd'T'HH:mm:ss+00:00\",@time.now()),\n    \"address\": !request.address ? null : {\n        \"addressSupplement\": request.address.addressSupplement,\n        \"streetAddress\": request.address.streetAddress,\n        \"city\": request.address.city,\n        \"stateCode\": request.address.stateCode,\n        \"zipcode\": request.address.zipcode,\n        \"postalCode\": request.address.postalCode,\n        \"provinceCode\": request.address.provinceCode\n    },\n    \"emailAddress\": request.emailAddress,\n    \"phoneRiskTransactionId\": request.phoneRiskTransactionId || @uuid()\n}}`"
                        },
                        "uri": {
                            "type": "expression",
                            "value": "`${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"eip_boku_phone_risk_evaluation_service_url\")}`"
                        },
                        "authentication": {
                            "credentials_ref": {
                                "provider_type": "db",
                                "alias": "muc_client_credentials",
                                "type": "credentials"
                            },
                            "scope": "api_n_mol_5898029",
                            "type": "oauth2",
                            "auth_header": true,
                            "url": {
                                "type": "expression",
                                "value": "`${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"eip_oa2_bearer_token_service_url\")}`"
                            }
                        },
                        "logging_config": {
                            "outgoing_requests_config": "info",
                            "ok_response_config": "info",
                            "failed_response_config": "warning"
                        }
                    }
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/6f54f04b-5a07-48d9-90b0-94fe52dd44bb",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_set",
                "provider_id": "6f54f04b-5a07-48d9-90b0-94fe52dd44bb",
                "config": {
                    "return_type": {
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let range = (i, n) =>\n  let loop = (loop, i, acc) =>\n    i < n ? @(loop)(loop, i + 1, acc + [i]) : acc\n  return @(loop)(loop, i, []) return\n\nlet tail = (xs) => @slice(xs, 1, @len(xs)) return\n\nlet integer = (x) => @typeof(x) == \"number\" && @math.round(x) == x return\n\nlet set_array = (loop, xs, p) =>\n  let xs = @typeof(xs) == \"array\" ? xs : [], i = p[0], t = @(tail)(p) return\n  let xs =  @len(xs) >= i ? xs : @map(@(range)(0, i + 1), (x) => xs[x]) return\n  let x = xs[i] return\n  @len(xs) >= i ? @splice(xs, i, 1, [@(loop)(loop, xs[i], t)]) : [] return\n\nlet set_object = (loop, o, p) =>\n  let o = @typeof(o) == \"object\" ? o : {}, k = p[0], t = @(tail)(p) return\n  let v = o[k] return\n  o + @kv(\"\" + k, @(loop)(loop, v, t)) return\n\nlet loop = (loop, o, p) =>\n  (p == []) ? value :\n  ((@(integer)(p[0])) ? @(set_array)(loop, o, p) :\n  (@(set_object)(loop, o, p))) return\n@(loop)(loop, object, path)"
                    },
                    "description": "Sets the value at path of object. If a portion of path doesn't exist, it's created. Arrays are created for missing index properties while objects are created for all other missing properties. Based on: https://lodash.com/docs/4.17.15#set",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "object",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "description": "object to modify",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "path",
                            "type_descriptor": {
                                "type": "array"
                            },
                            "description": "path of the property to set",
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "value",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "value to set",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/15797b3b-5249-43c2-98b4-710f6f102a8d",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "identificationData": {
                                            "type": "object",
                                            "properties": {
                                                "userStatus": {
                                                    "type": "string"
                                                },
                                                "sessionId": {
                                                    "type": "string"
                                                },
                                                "transactionId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "messageHeader": {
                                            "type": "object",
                                            "properties": {
                                                "timeStamp": {
                                                    "type": "string"
                                                },
                                                "requestType": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "riskResult": {
                                            "type": "object",
                                            "properties": {
                                                "triggeredTestRule": {
                                                    "type": "object",
                                                    "properties": {
                                                        "actionType": {
                                                            "type": "string"
                                                        },
                                                        "ruleName": {
                                                            "type": "string"
                                                        },
                                                        "actionCode": {
                                                            "type": "string"
                                                        },
                                                        "ruleId": {
                                                            "type": "string"
                                                        },
                                                        "actionName": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "triggeredRule": {
                                                    "type": "object",
                                                    "properties": {
                                                        "actionType": {
                                                            "type": "string"
                                                        },
                                                        "ruleName": {
                                                            "type": "string"
                                                        },
                                                        "actionCode": {
                                                            "type": "string"
                                                        },
                                                        "ruleId": {
                                                            "type": "string"
                                                        },
                                                        "actionName": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "riskScore": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "statusHeader": {
                                            "type": "object",
                                            "properties": {
                                                "statusCode": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "collectableCredentialList": {
                                            "type": "object",
                                            "properties": {
                                                "collectableCredential": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "collectableCredential": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "credentialType": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "mae_send_rsa_analyze_subjourney_result",
                            "description": "The result of the RAA Analyze call. triggeredRule is only there if the riskScore triggers a rule."
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "identificationData": {
                                            "type": "object",
                                            "properties": {
                                                "userStatus": {
                                                    "type": "string"
                                                },
                                                "sessionId": {
                                                    "type": "string"
                                                },
                                                "userName": {
                                                    "type": "string"
                                                },
                                                "transactionId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "userData": {
                                            "type": "object",
                                            "properties": {
                                                "lastAccoutOpenDate": {
                                                    "type": "string"
                                                },
                                                "onlineServiceEnrollDate": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "channelIndicator": {
                                            "type": "string"
                                        },
                                        "messageHeader": {
                                            "type": "object",
                                            "properties": {
                                                "requestId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "deviceRequest": {
                                            "type": "object",
                                            "properties": {
                                                "devicePrint": {
                                                    "type": "string"
                                                },
                                                "httpAcceptLanguage": {
                                                    "type": "string"
                                                },
                                                "httpAccept": {
                                                    "type": "string"
                                                },
                                                "ipAddress": {
                                                    "type": "string"
                                                },
                                                "userAgent": {
                                                    "type": "string"
                                                },
                                                "httpReferrer": {
                                                    "type": "string"
                                                },
                                                "deviceTokenCookie": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "eventDataList": {
                                            "type": "object",
                                            "properties": {
                                                "eventData": {
                                                    "type": "object",
                                                    "properties": {
                                                        "eventData": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "eventDescription": {
                                                                        "type": "string"
                                                                    },
                                                                    "clientDefinedAttributeList": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "dataType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "eventType": {
                                                                        "type": "string"
                                                                    },
                                                                    "clientDefinedEventType": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "analyze_request",
                            "description": "An analyze request following the RSA Adaptive Auth swagger"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "cb00124d-fced-415e-9926-86d8f76fa29b",
                    "metadata": {
                        "label": "Build the SOAP message"
                    },
                    "procedure_id": "1c931b22-d12b-4be3-9e35-578db14c0aab",
                    "frame_config": {
                        "params": [
                            {
                                "name": "input",
                                "value": {
                                    "type": "expression",
                                    "value": "analyze_request"
                                }
                            },
                            {
                                "name": "name",
                                "value": {
                                    "type": "expression",
                                    "value": "\"request2\""
                                }
                            },
                            {
                                "name": "namespace",
                                "value": {
                                    "type": "expression",
                                    "value": "\"ns2\""
                                }
                            },
                            {
                                "name": "namespace_url",
                                "value": {
                                    "type": "expression",
                                    "value": "\"http://ws.csd.rsa.com\""
                                }
                            },
                            {
                                "name": "request_type",
                                "value": {
                                    "type": "expression",
                                    "value": "\"ANALYZE\""
                                }
                            }
                        ]
                    },
                    "type": "procedure",
                    "child": {
                        "debug_id": "c809bf71-b202-41d9-b4bf-c571c86bda37",
                        "metadata": {
                            "label": "Send to RSA AA"
                        },
                        "procedure_id": "cdf61358-f547-41bf-b353-01cb18b7de8c",
                        "frame_config": {
                            "params": [
                                {
                                    "name": "rsa_soap_request",
                                    "value": {
                                        "type": "expression",
                                        "value": "mae_soapify_rsa_adaptive_auth_request_subjourney_output"
                                    }
                                }
                            ]
                        },
                        "type": "procedure",
                        "child": {
                            "false_branch": {
                                "debug_id": "0afe7d88-37be-4002-9e1a-4580827f3c02",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "mae_send_rsa_analyze_subjourney_result",
                                            "value": {
                                                "type": "expression",
                                                "value": "{} + mae_invoke_rsa_api_subjourney_result"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "label": "Failed",
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "593af5e2-3e35-41bc-9f11-c1298083e639",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "metadata": {
                                            "type": "auth_pass"
                                        },
                                        "type": "auth_pass"
                                    },
                                    "type": "action"
                                }
                            },
                            "debug_id": "d6a54233-f026-40ac-96dd-b0716e551985",
                            "condition": {
                                "negated": false,
                                "metadata": {
                                    "label": "Did it work?",
                                    "type": "generic_condition"
                                },
                                "field": {
                                    "type": "expression",
                                    "value": "mae_invoke_rsa_api_subjourney_result.success"
                                },
                                "data_type": "boolean",
                                "type": "generic",
                                "operation": "==",
                                "value": {
                                    "type": "expression",
                                    "value": "true"
                                }
                            },
                            "true_branch": {
                                "debug_id": "047e4b65-38bf-4bc9-b234-80786fd6dab8",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "output",
                                            "value": {
                                                "type": "expression",
                                                "value": "mae_invoke_rsa_api_subjourney_result.output"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "label": "Succeeded!",
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "9657e403-50fc-4e9b-90cc-b459a5601a7d",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "variables": [
                                            {
                                                "name": "identification_data",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "{\n    transactionId: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:identificationData\"][0][\"ns0:transactionId\"][0].__text\n}"
                                                }
                                            }
                                        ],
                                        "metadata": {
                                            "label": null,
                                            "type": "set_variables"
                                        },
                                        "type": "set_variables"
                                    },
                                    "type": "action",
                                    "child": {
                                        "debug_id": "09ee46c3-22f6-487b-8564-1a95b35a1d04",
                                        "metadata": {
                                            "label": "Build identificationData"
                                        },
                                        "block": {
                                            "debug_id": "76a92c66-bbb0-4cd7-84e1-df8e577914b5",
                                            "condition": {
                                                "negated": false,
                                                "metadata": {
                                                    "label": "userStatus present?",
                                                    "type": "generic_condition"
                                                },
                                                "field": {
                                                    "type": "expression",
                                                    "value": "@std.keys(output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:identificationData\"][0])"
                                                },
                                                "data_type": "container",
                                                "type": "generic",
                                                "operation": "contains",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "\"ns0:userStatus\""
                                                }
                                            },
                                            "true_branch": {
                                                "debug_id": "a25f77d1-aa7d-4051-b1b9-ab1013a7f7e6",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "variables": [
                                                        {
                                                            "name": "identification_data",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "identification_data + \n{\n    userStatus: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:identificationData\"][0][\"ns0:userStatus\"][0].__text\n}"
                                                            }
                                                        }
                                                    ],
                                                    "metadata": {
                                                        "type": "set_variables"
                                                    },
                                                    "type": "set_variables"
                                                },
                                                "type": "action"
                                            },
                                            "type": "condition"
                                        },
                                        "type": "block",
                                        "child": {
                                            "debug_id": "92378ffb-d3f5-44c3-b52d-ca317e2ffc1f",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "variables": [
                                                    {
                                                        "name": "risk_result",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "{\n    riskScore: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0][\"ns0:riskScore\"][0].__text\n}"
                                                        }
                                                    }
                                                ],
                                                "metadata": {
                                                    "label": "Pull out riskScore",
                                                    "type": "set_variables"
                                                },
                                                "type": "set_variables"
                                            },
                                            "type": "action",
                                            "child": {
                                                "debug_id": "6f18e5bb-a786-47df-899a-f148cab6e446",
                                                "metadata": {
                                                    "label": "Pull out triggeredRule if present"
                                                },
                                                "block": {
                                                    "debug_id": "7143f149-85d9-4402-b222-1ac91bd782d3",
                                                    "condition": {
                                                        "negated": false,
                                                        "metadata": {
                                                            "label": "triggeredRule present?",
                                                            "type": "generic_condition"
                                                        },
                                                        "field": {
                                                            "type": "expression",
                                                            "value": "@std.keys(output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0])"
                                                        },
                                                        "data_type": "container",
                                                        "type": "generic",
                                                        "operation": "contains",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"ns0:triggeredRule\""
                                                        }
                                                    },
                                                    "true_branch": {
                                                        "debug_id": "f6803c16-c2b5-4332-9e93-9e7971388ed4",
                                                        "escapes": {
                                                            "escapes": []
                                                        },
                                                        "strings": [],
                                                        "action": {
                                                            "variables": [
                                                                {
                                                                    "name": "risk_result",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "risk_result +\n{\n    triggeredRule: {\n        ruleName: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0][\"ns0:triggeredRule\"][0][\"ns0:ruleName\"][0].__text,\n        actionType: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0][\"ns0:triggeredRule\"][0][\"ns0:actionType\"][0].__text,\n        actionCode: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0][\"ns0:triggeredRule\"][0][\"ns0:actionCode\"][0].__text,\n        ruleId: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0][\"ns0:triggeredRule\"][0][\"ns0:ruleId\"][0].__text,\n        actionName: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0][\"ns0:triggeredRule\"][0][\"ns0:actionName\"][0].__text\n    }\n}"
                                                                    }
                                                                }
                                                            ],
                                                            "metadata": {
                                                                "label": "Include triggeredRule",
                                                                "type": "set_variables"
                                                            },
                                                            "type": "set_variables"
                                                        },
                                                        "type": "action"
                                                    },
                                                    "type": "condition"
                                                },
                                                "type": "block",
                                                "child": {
                                                    "debug_id": "8269da24-5064-4d85-ae88-fedea301552a",
                                                    "metadata": {
                                                        "label": "Pull out triggeredTestRule if present"
                                                    },
                                                    "block": {
                                                        "debug_id": "a4e4c173-027d-453d-9ac0-77f250a4cef5",
                                                        "condition": {
                                                            "negated": false,
                                                            "metadata": {
                                                                "label": "triggeredTestRule present?",
                                                                "type": "generic_condition"
                                                            },
                                                            "field": {
                                                                "type": "expression",
                                                                "value": "@std.keys(output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0])"
                                                            },
                                                            "data_type": "container",
                                                            "type": "generic",
                                                            "operation": "contains",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "\"ns0:triggeredTestRule\""
                                                            }
                                                        },
                                                        "true_branch": {
                                                            "debug_id": "a8e7da2b-4a50-4bfc-8a01-0e2c825f445a",
                                                            "escapes": {
                                                                "escapes": []
                                                            },
                                                            "strings": [],
                                                            "action": {
                                                                "variables": [
                                                                    {
                                                                        "name": "risk_result",
                                                                        "value": {
                                                                            "type": "expression",
                                                                            "value": "risk_result +\n{\n    triggeredTestRule: {\n        ruleName: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0][\"ns0:triggeredTestRule\"][0][\"ns0:ruleName\"][0].__text,\n        actionType: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0][\"ns0:triggeredTestRule\"][0][\"ns0:actionType\"][0].__text,\n        actionCode: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0][\"ns0:triggeredTestRule\"][0][\"ns0:actionCode\"][0].__text,\n        ruleId: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0][\"ns0:triggeredTestRule\"][0][\"ns0:ruleId\"][0].__text,\n        actionName: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:riskResult\"][0][\"ns0:triggeredTestRule\"][0][\"ns0:actionName\"][0].__text\n    }\n}"
                                                                        }
                                                                    }
                                                                ],
                                                                "metadata": {
                                                                    "label": "Include triggeredRule",
                                                                    "type": "set_variables"
                                                                },
                                                                "type": "set_variables"
                                                            },
                                                            "type": "action"
                                                        },
                                                        "type": "condition"
                                                    },
                                                    "type": "block",
                                                    "child": {
                                                        "debug_id": "bcf8d85c-abda-426d-a688-3b4fc55d2a61",
                                                        "escapes": {
                                                            "escapes": []
                                                        },
                                                        "strings": [],
                                                        "action": {
                                                            "variables": [
                                                                {
                                                                    "name": "collectable_credential_list",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "{}"
                                                                    }
                                                                }
                                                            ],
                                                            "metadata": {
                                                                "label": "Initialize collectable_credential_list",
                                                                "type": "set_variables"
                                                            },
                                                            "type": "set_variables"
                                                        },
                                                        "type": "action",
                                                        "child": {
                                                            "debug_id": "3bc316ed-3cd8-46c9-b558-e01d28f1ab9b",
                                                            "metadata": {
                                                                "label": "Pull out collectableCredentialsList if present"
                                                            },
                                                            "block": {
                                                                "debug_id": "d4adf587-8a6c-4cdf-b98b-0a3254b7bfde",
                                                                "condition": {
                                                                    "negated": false,
                                                                    "metadata": {
                                                                        "label": "collectableCredentialsList present?",
                                                                        "type": "generic_condition"
                                                                    },
                                                                    "field": {
                                                                        "type": "expression",
                                                                        "value": "@std.keys(output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0])"
                                                                    },
                                                                    "data_type": "container",
                                                                    "type": "generic",
                                                                    "operation": "contains",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "\"ns0:collectableCredentialList\""
                                                                    }
                                                                },
                                                                "true_branch": {
                                                                    "debug_id": "af7773bb-24a1-4c1b-b386-bf979a9ad9ef",
                                                                    "escapes": {
                                                                        "escapes": []
                                                                    },
                                                                    "strings": [],
                                                                    "action": {
                                                                        "variables": [
                                                                            {
                                                                                "name": "collectable_credential_list",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "{\n    collectableCredentialList: {\n        collectableCredential: @std.map(output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:collectableCredentialList\"][0][\"ns0:collectableCredential\"], (cred) => {collectableCredential: {credentialType: cred[\"ns0:collectableCredential\"][0][\"ns0:credentialType\"][0].__text}})\n    }\n}"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "metadata": {
                                                                            "label": "Build collectableCredentialList",
                                                                            "type": "set_variables"
                                                                        },
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "action"
                                                                },
                                                                "type": "condition"
                                                            },
                                                            "type": "block",
                                                            "child": {
                                                                "debug_id": "691441e4-e993-4c9c-9b03-87f9e81acae3",
                                                                "escapes": {
                                                                    "escapes": []
                                                                },
                                                                "strings": [],
                                                                "action": {
                                                                    "variables": [
                                                                        {
                                                                            "name": "mae_send_rsa_analyze_subjourney_result",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "{\n    success: true,\n    statusCode: output.status,\n    statusHeader: {\n        statusCode: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:statusHeader\"][0][\"ns0:statusCode\"][0].__text\n    },\n    identificationData: identification_data,\n    messageHeader: {\n        requestId: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:messageHeader\"][0][\"ns0:requestId\"][0].__text,\n        requestType: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:messageHeader\"][0][\"ns0:requestType\"][0].__text,\n        timeStamp: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:messageHeader\"][0][\"ns0:timeStamp\"][0].__text,\n        version: output.body[\"env:Envelope\"][\"env:Body\"][0][\"ns0:analyzeReturn\"][0][\"ns0:messageHeader\"][0][\"ns0:version\"][0].__text\n    },\n    riskResult: risk_result\n}\n+ collectable_credential_list"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "metadata": {
                                                                        "label": "Build return value",
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "set_variables"
                                                                },
                                                                "type": "action",
                                                                "child": {
                                                                    "debug_id": "a32158eb-0767-4438-a86e-8ced9fb5d563",
                                                                    "escapes": {
                                                                        "escapes": []
                                                                    },
                                                                    "strings": [],
                                                                    "action": {
                                                                        "metadata": {
                                                                            "type": "auth_pass"
                                                                        },
                                                                        "type": "auth_pass"
                                                                    },
                                                                    "type": "action"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "type": "condition"
                        }
                    }
                },
                "name": "mae_send_rsa_analyze_subjourney",
                "id": "15797b3b-5249-43c2-98b4-710f6f102a8d"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/7e48d76c-bc6d-4726-8879-56e8091f9945",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "lockUser": {
                                            "type": "boolean"
                                        },
                                        "actionCode": {
                                            "type": "string"
                                        },
                                        "subJourneyStatus": {
                                            "type": "string"
                                        },
                                        "subJourneyError": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "name": "mae_hrt_raa_authenticate_subjourney_output",
                            "description": "mae hrt raa authenticate subjourney output"
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "rsa_transaction_id",
                            "description": "mae raa transaction id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "user_session_token",
                            "description": "mae mufg user session token"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "sso_hash_id",
                            "description": "mae user sso hash id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "any"
                            },
                            "name": "device_print",
                            "description": "device print"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "rsa_key",
                            "description": "rsa username"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "double"
                            },
                            "name": "max_failed_attempts",
                            "description": "user max failed attempts"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "allow_url",
                            "description": "allowed host url"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "hrt_policy_id",
                            "description": "hrt policy id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "rsa_request_id",
                            "description": "rsa request id"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "ip_address",
                            "description": "ip address of the host"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "login_id",
                            "description": "SSO Login ID (the one the user types in)"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "rsa_risk_score",
                            "description": "Risk score from RAA Analyze call"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "e02f5dbf-caa9-4043-8c96-80f6436325c2",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "variables": [
                            {
                                "name": "mae_hrt_raa_authenticate_subjourney_output",
                                "value": {
                                    "type": "expression",
                                    "value": "{\n  \"actionCode\": \"ERROR\",\n  \"lockUser\": false,\n  \"subJourneyStatus\": \"Completed with errors\",\n  \"subJourneyError\": \"\"\n}"
                                }
                            }
                        ],
                        "metadata": {
                            "label": "Initialize variables",
                            "type": "set_variables"
                        },
                        "type": "set_variables"
                    },
                    "type": "action",
                    "child": {
                        "debug_id": "cf4611f6-0a36-4e4c-b16e-966c27c674fe",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "variables": [
                                {
                                    "name": "challenge_question",
                                    "value": {
                                        "type": "expression",
                                        "value": "try \n    @webrequests.wca_api_webservicefunction_get_challenge_question(sso_hash_id, rsa_transaction_id, user_session_token)\ncatch (error) => {ERROR: error}"
                                    }
                                }
                            ],
                            "metadata": {
                                "notes": "challenge_question",
                                "label": "Get the challenge question",
                                "type": "set_variables"
                            },
                            "type": "set_variables"
                        },
                        "type": "action",
                        "child": {
                            "false_branch": {
                                "debug_id": "e1c97e0b-be3a-4426-8d07-e2fb384f15ce",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "mae_hrt_raa_authenticate_subjourney_output",
                                            "value": {
                                                "type": "expression",
                                                "value": "{\n  \"actionCode\": \"ERROR\",\n  \"lockUser\": false,\n  \"subJourneyStatus\": \"Completed with errors\",\n  \"subJourneyError\": challenge_question.ERROR != null ? challenge_question.ERROR : challenge_question\n}"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "label": "Get Challenge Question Error",
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "debug_id": "89d099fe-5d43-4d18-bbcc-acdc07295c53",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "metadata": {
                                            "type": "auth_pass"
                                        },
                                        "type": "auth_pass"
                                    },
                                    "type": "action"
                                }
                            },
                            "debug_id": "8e5f6f2c-92cc-4555-b441-00e2d5fae429",
                            "condition": {
                                "negated": false,
                                "metadata": {
                                    "label": "Got questions for the user?",
                                    "type": "generic_condition"
                                },
                                "field": {
                                    "type": "expression",
                                    "value": "challenge_question.ERROR == null && challenge_question.status == 200"
                                },
                                "data_type": "boolean",
                                "type": "generic",
                                "operation": "==",
                                "value": {
                                    "type": "expression",
                                    "value": "true"
                                }
                            },
                            "true_branch": {
                                "debug_id": "26cddddb-c902-47df-aa37-7194979a94cb",
                                "escapes": {
                                    "escapes": []
                                },
                                "strings": [],
                                "action": {
                                    "variables": [
                                        {
                                            "name": "active_answer",
                                            "value": {
                                                "type": "expression",
                                                "value": "try \n    @webrequests.wca_api_webservicefunction_get_active_answer(sso_hash_id, challenge_question.body.questionId, rsa_transaction_id, user_session_token)\ncatch (error) => {ERROR: error}"
                                            }
                                        }
                                    ],
                                    "metadata": {
                                        "notes": "active_answer",
                                        "label": "Get the active answer for the challenge question",
                                        "type": "set_variables"
                                    },
                                    "type": "set_variables"
                                },
                                "type": "action",
                                "child": {
                                    "false_branch": {
                                        "debug_id": "2f832aaf-2ed2-4d05-a49e-8a1271aa017a",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "variables": [
                                                {
                                                    "name": "mae_hrt_raa_authenticate_subjourney_output",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "{\n  \"actionCode\": \"ERROR\",\n  \"lockUser\": false,\n  \"subJourneyStatus\": \"Completed with errors\",\n  \"subJourneyError\": active_answer.ERROR != null ? active_answer.ERROR : active_answer\n}"
                                                    }
                                                }
                                            ],
                                            "metadata": {
                                                "label": "Get Active Answer Error",
                                                "type": "set_variables"
                                            },
                                            "type": "set_variables"
                                        },
                                        "type": "action",
                                        "child": {
                                            "debug_id": "cf80bfba-1d23-4dad-a911-fd2b3f8eda50",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "metadata": {
                                                    "type": "auth_pass"
                                                },
                                                "type": "auth_pass"
                                            },
                                            "type": "action"
                                        }
                                    },
                                    "debug_id": "c10e7e62-da21-4c1f-b82a-9fb6026aa034",
                                    "condition": {
                                        "negated": false,
                                        "metadata": {
                                            "label": "Got an active answer for the question?",
                                            "type": "generic_condition"
                                        },
                                        "field": {
                                            "type": "expression",
                                            "value": "active_answer.ERROR == null && active_answer.status == 200 && active_answer.body.responseCode == \"0000\""
                                        },
                                        "data_type": "boolean",
                                        "type": "generic",
                                        "operation": "==",
                                        "value": {
                                            "type": "expression",
                                            "value": "true"
                                        }
                                    },
                                    "true_branch": {
                                        "debug_id": "3fba5a29-1b0c-49eb-a25b-c9453b877e3e",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "variables": [
                                                {
                                                    "name": "user_scq_authentication",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "{\n    \"isValid\": false,\n    \"shouldBlock\": false,\n    \"faultString\": \"\",\n    \"statusCode\": \"200\"\n}"
                                                    }
                                                },
                                                {
                                                    "name": "attempt_counter",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "@policy.user().custom_data[\"scq_failed_attempt_counter\"] || 0"
                                                    }
                                                }
                                            ],
                                            "metadata": {
                                                "label": "Initialize looping variables",
                                                "type": "set_variables"
                                            },
                                            "type": "set_variables"
                                        },
                                        "type": "action",
                                        "child": {
                                            "max_iterations": 10,
                                            "loop_body": {
                                                "debug_id": "4692491b-7b41-452e-a3b9-a48173eb72d1",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "metadata": {
                                                        "type": "form"
                                                    },
                                                    "form_id": "scq_form",
                                                    "app_data": {
                                                        "type": "expression",
                                                        "value": "@customFunctions.mae_scq_form_input(challenge_question, current_attempt_counter)"
                                                    },
                                                    "type": "form",
                                                    "var_name": "scq_response"
                                                },
                                                "type": "action",
                                                "child": {
                                                    "debug_id": "da719994-c3d3-4af8-9fe7-928a6f3555e1",
                                                    "escapes": {
                                                        "escapes": []
                                                    },
                                                    "strings": [],
                                                    "action": {
                                                        "variables": [
                                                            {
                                                                "name": "raa_authenticate_request",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "{\n    \"messageHeader\": {\n        \"requestId\": rsa_request_id\n    },\n    \"identificationData\": {\n        \"transactionId\": rsa_transaction_id,\n        \"userName\": rsa_key\n    },\n    \"credentialDataList\": {\n        \"challengeQuestionData\": {\n            \"payload\": {\n                \"challengeQuestion\": {\n                    \"challengeQuestions\": [\n                        {\n                            \"actualAnswerOnFile\": active_answer.body.answer,\n                            \"questionId\": \"Q0.0\",\n                            \"userAnswer\": scq_response.form_response.scq_answer_text\n                        }\n                    ]\n                }\n            }\n        }\n    }\n}"
                                                                }
                                                            }
                                                        ],
                                                        "metadata": {
                                                            "label": "Build RAA Authenticate Request for subjourney",
                                                            "type": "set_variables"
                                                        },
                                                        "type": "set_variables"
                                                    },
                                                    "type": "action",
                                                    "child": {
                                                        "debug_id": "fa906152-9108-4887-bc6b-392932713fc1",
                                                        "metadata": {
                                                            "label": "Invoke the RSA Authenticate Subjourney"
                                                        },
                                                        "procedure_id": "b0cdff20-fc72-4203-a661-71ea04bee268",
                                                        "frame_config": {
                                                            "params": [
                                                                {
                                                                    "name": "authenticate_request",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "raa_authenticate_request"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "procedure",
                                                        "child": {
                                                            "debug_id": "f14e609a-f8ba-42c5-8976-a98488a06b22",
                                                            "escapes": {
                                                                "escapes": []
                                                            },
                                                            "strings": [],
                                                            "action": {
                                                                "variables": [
                                                                    {
                                                                        "name": "attempt_counter",
                                                                        "value": {
                                                                            "type": "expression",
                                                                            "value": "(@policy.user().custom_data[\"scq_failed_attempt_counter\"] || 0) + 1"
                                                                        }
                                                                    }
                                                                ],
                                                                "metadata": {
                                                                    "notes": "Read from user data again in case more than one session is active.",
                                                                    "label": "Increment loop counter",
                                                                    "type": "set_variables"
                                                                },
                                                                "type": "set_variables"
                                                            },
                                                            "type": "action",
                                                            "child": {
                                                                "debug_id": "bcba101b-d411-4abf-9dd6-03e84f887332",
                                                                "escapes": {
                                                                    "escapes": []
                                                                },
                                                                "strings": [],
                                                                "action": {
                                                                    "variables": [
                                                                        {
                                                                            "name": "mae_send_rsa_authenticate_subjourney_output",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "mae_send_rsa_authenticate_subjourney_output + {\"riskResult\": {\"riskScore\": rsa_risk_score}}"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "metadata": {
                                                                        "label": "Trickery to get risk score into LAR",
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "set_variables"
                                                                },
                                                                "type": "action",
                                                                "child": {
                                                                    "debug_id": "e061ca4d-5b4f-4f8a-af95-a506d9e58735",
                                                                    "metadata": {
                                                                        "label": "Log Auth Result"
                                                                    },
                                                                    "procedure_id": "ad79d624-af71-42c9-91a6-3c644e67f8f7",
                                                                    "frame_config": {
                                                                        "params": [
                                                                            {
                                                                                "name": "mae_response",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "mae_send_rsa_authenticate_subjourney_output"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "mae_response_type",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "`RAA`"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "mae_ip_address",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "ip_address"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "mae_allow_url",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "allow_url"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "mae_sso_hash_id",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "sso_hash_id"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "mae_user_session_token",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "user_session_token"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "mae_raa_transaction_id",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "rsa_transaction_id"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "mae_hrt_code",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "hrt_policy_id"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "mae_login_id",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "login_id"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "final_attempt",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "false || attempt_counter >= max_failed_attempts"
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "procedure",
                                                                    "child": {
                                                                        "debug_id": "4a11daa4-095f-46f0-813c-3b0a0a7a7483",
                                                                        "escapes": {
                                                                            "escapes": []
                                                                        },
                                                                        "strings": [],
                                                                        "action": {
                                                                            "variables": [
                                                                                {
                                                                                    "name": "user_scq_authentication",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "let isValid = mae_send_rsa_authenticate_subjourney_output.success &&\n               mae_send_rsa_authenticate_subjourney_output.credentialAuthResultList.challengeQuestionAuthResult.payload.challengeQuestionMatchResult.wasSuccessful == \"true\" &&\n               mae_send_rsa_authenticate_subjourney_output.credentialAuthResultList.challengeQuestionAuthResult.payload.challengeQuestionMatchResult.shouldBlock == \"false\",\n    shouldBlock = mae_send_rsa_authenticate_subjourney_output.credentialAuthResultList.challengeQuestionAuthResult.payload.challengeQuestionMatchResult.shouldBlock == \"true\",\n    statusCode = mae_send_rsa_authenticate_subjourney_output.statusCode\nreturn\n{\n    \"isValid\": isValid,\n    \"shouldBlock\": shouldBlock,\n    \"faultString\": !mae_send_rsa_authenticate_subjourney_output.success \n                   ? mae_send_rsa_authenticate_subjourney_output.faultString \n                   : (\n                        isValid ? \"\" : (shouldBlock ? \"User is locked\" : \"User answered incorrectly\")\n                   ),\n    \"statusCode\": statusCode                          \n}"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "metadata": {
                                                                                "notes": null,
                                                                                "label": null,
                                                                                "type": "set_variables"
                                                                            },
                                                                            "type": "set_variables"
                                                                        },
                                                                        "type": "action",
                                                                        "child": {
                                                                            "false_branch": {
                                                                                "false_branch": {
                                                                                    "debug_id": "f865b902-18fa-4b7b-b526-4c7394fb223f",
                                                                                    "escapes": {
                                                                                        "escapes": []
                                                                                    },
                                                                                    "strings": [],
                                                                                    "action": {
                                                                                        "metadata": {
                                                                                            "type": "custom_user_data"
                                                                                        },
                                                                                        "data": {
                                                                                            "type": "expression",
                                                                                            "value": "{scq_failed_attempt_counter: attempt_counter}"
                                                                                        },
                                                                                        "scope": "user",
                                                                                        "deep_merge": false,
                                                                                        "type": "custom_data"
                                                                                    },
                                                                                    "type": "action"
                                                                                },
                                                                                "debug_id": "864dd9c4-1f91-4ad1-b69d-f6ec99e818af",
                                                                                "condition": {
                                                                                    "negated": false,
                                                                                    "metadata": {
                                                                                        "type": "generic_condition"
                                                                                    },
                                                                                    "field": {
                                                                                        "type": "expression",
                                                                                        "value": "attempt_counter >= max_failed_attempts"
                                                                                    },
                                                                                    "data_type": "boolean",
                                                                                    "type": "generic",
                                                                                    "operation": "==",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "true"
                                                                                    }
                                                                                },
                                                                                "true_branch": {
                                                                                    "debug_id": "cfc92a8b-ff5d-4e54-9f2d-64f411fc0f0f",
                                                                                    "escapes": {
                                                                                        "escapes": []
                                                                                    },
                                                                                    "strings": [],
                                                                                    "action": {
                                                                                        "metadata": {
                                                                                            "type": "custom_user_data"
                                                                                        },
                                                                                        "data": {
                                                                                            "type": "expression",
                                                                                            "value": "{scq_failed_attempt_counter: 0}"
                                                                                        },
                                                                                        "scope": "user",
                                                                                        "deep_merge": false,
                                                                                        "type": "custom_data"
                                                                                    },
                                                                                    "type": "action"
                                                                                },
                                                                                "type": "condition"
                                                                            },
                                                                            "debug_id": "30bd2bd7-910c-40b3-b24b-94102eee16db",
                                                                            "condition": {
                                                                                "negated": false,
                                                                                "metadata": {
                                                                                    "type": "generic_condition"
                                                                                },
                                                                                "field": {
                                                                                    "type": "expression",
                                                                                    "value": "user_scq_authentication.statusCode == \"200\" && user_scq_authentication.isValid == true"
                                                                                },
                                                                                "data_type": "boolean",
                                                                                "type": "generic",
                                                                                "operation": "==",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "true"
                                                                                }
                                                                            },
                                                                            "true_branch": {
                                                                                "debug_id": "30976d55-e185-4586-adc5-5317c5716dd3",
                                                                                "escapes": {
                                                                                    "escapes": []
                                                                                },
                                                                                "strings": [],
                                                                                "action": {
                                                                                    "metadata": {
                                                                                        "type": "custom_user_data"
                                                                                    },
                                                                                    "data": {
                                                                                        "type": "expression",
                                                                                        "value": "{scq_failed_attempt_counter: 0}"
                                                                                    },
                                                                                    "scope": "user",
                                                                                    "deep_merge": false,
                                                                                    "type": "custom_data"
                                                                                },
                                                                                "type": "action"
                                                                            },
                                                                            "type": "condition"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "debug_id": "c1d73e5d-c32e-4fa4-badd-bccf3441107b",
                                            "condition": {
                                                "type": "expression",
                                                "value": "user_scq_authentication.isValid == false && attempt_counter < max_failed_attempts \n&& user_scq_authentication.shouldBlock == false && user_scq_authentication.statusCode == \"200\""
                                            },
                                            "iteration_count": 0,
                                            "metadata": {
                                                "label": "Loop until the user answers the question correctly"
                                            },
                                            "iteration_count_var_name": "current_attempt_counter",
                                            "type": "loop",
                                            "child": {
                                                "debug_id": "d0f82481-c0db-4b95-bd57-ae531a1d501f",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "variables": [
                                                        {
                                                            "name": "mae_hrt_raa_authenticate_subjourney_output",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "let isValid = user_scq_authentication.isValid\nreturn\n{\n  \"actionCode\": isValid ? \"ALLOW\" : \"DENY\",\n  \"lockUser\": user_scq_authentication.shouldBlock,\n  \"subJourneyStatus\": isValid ? \"Completed\" : \"Completed with errors\",\n  \"subJourneyError\": isValid ? null : user_scq_authentication\n}"
                                                            }
                                                        }
                                                    ],
                                                    "metadata": {
                                                        "label": "RSA Authenticate Sub Journey Output",
                                                        "type": "set_variables"
                                                    },
                                                    "type": "set_variables"
                                                },
                                                "type": "action",
                                                "child": {
                                                    "debug_id": "b3fbc66c-f134-43f6-9bdb-9d5cc79f4c8f",
                                                    "escapes": {
                                                        "escapes": []
                                                    },
                                                    "strings": [],
                                                    "action": {
                                                        "metadata": {
                                                            "type": "auth_pass"
                                                        },
                                                        "type": "auth_pass"
                                                    },
                                                    "type": "action"
                                                }
                                            }
                                        }
                                    },
                                    "type": "condition"
                                }
                            },
                            "type": "condition"
                        }
                    }
                },
                "name": "mae_hrt_raa_authenticate_subjourney",
                "id": "7e48d76c-bc6d-4726-8879-56e8091f9945"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/f99f0455-c8c3-4283-a665-7215dbbc97fb",
            "data": {
                "provider_type": "function-authscript",
                "name": "oa2_api_authscriptfunction_search_online_user_details",
                "provider_id": "f99f0455-c8c3-4283-a665-7215dbbc97fb",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "customerFullName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "newFinancialCenterInd": {
                                    "type": "string"
                                },
                                "loginId": {
                                    "type": "string"
                                },
                                "customerEntitlements": {
                                    "type": "string"
                                },
                                "customerLobType": {
                                    "type": "string"
                                },
                                "accessGrantedInd": {
                                    "type": "string"
                                },
                                "businessContractingOfficerInd": {
                                    "type": "string"
                                },
                                "userStatusCode": {
                                    "type": "string"
                                },
                                "olbEnvironment": {
                                    "type": "string"
                                },
                                "userContactUpdateDays": {
                                    "type": "string"
                                },
                                "tokenUseForLoginInd": {
                                    "type": "string"
                                },
                                "userEntitlements": {
                                    "type": "string"
                                },
                                "customerId": {
                                    "type": "string"
                                },
                                "ddaAccountId": {
                                    "type": "string"
                                },
                                "primaryEmail": {
                                    "type": "string"
                                },
                                "challengeQuestionInd": {
                                    "type": "string"
                                },
                                "userHashId": {
                                    "type": "string"
                                },
                                "housekeepingInd": {
                                    "type": "string"
                                },
                                "createdTimestamp": {
                                    "type": "string"
                                },
                                "lqcFocus": {
                                    "type": "string"
                                },
                                "customerCategorySubType": {
                                    "type": "string"
                                },
                                "emailBounceIndicator": {
                                    "type": "string"
                                },
                                "liquidityEntitledInd": {
                                    "type": "string"
                                },
                                "eligible360Ind": {
                                    "type": "string"
                                },
                                "lastAccessedTimestamp": {
                                    "type": "string"
                                },
                                "firstName": {
                                    "type": "string"
                                },
                                "companyId": {
                                    "type": "string"
                                },
                                "dashboardInd": {
                                    "type": "string"
                                },
                                "phoneNumber": {
                                    "type": "string"
                                },
                                "tradeFinancePortalRole": {
                                    "type": "string"
                                },
                                "InternalCustomerId": {
                                    "type": "string"
                                },
                                "mufgCustomerInd": {
                                    "type": "string"
                                },
                                "contactInfoValidatedDatetime": {
                                    "type": "string"
                                },
                                "userRole": {
                                    "type": "string"
                                },
                                "highRiskTransactionEmailInd": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let failure_response = {\n        \"loginId\": \"\",\n        \"businessContractingOfficerInd\": \"\",\n        \"InternalCustomerId\": \"\",\n        \"customerFullName\": \"\",\n        \"customerLobType\": \"\",\n        \"ddaAccountId\": \"\",\n        \"firstName\": \"\",\n        \"lastName\": \"\",\n        \"createdTimestamp\": \"\",\n        \"accessGrantedInd\": \"\",\n        \"userRole\": \"\",\n        \"primaryEmail\": \"\",\n        \"userEntitlements\": \"\",\n        \"phoneNumber\": \"\",\n        \"userStatusCode\": \"\",\n        \"customerId\": \"\",\n        \"userHashId\": \"\",\n        \"highRiskTransactionEmailInd\": \"\",\n        \"customerEntitlements\": \"\",\n        \"companyId\": \"\",\n        \"eligible360Ind\": \"\",\n        \"dashboardInd\": \"\",\n        \"tradeFinancePortalRole\": \"\",\n        \"olbEnvironment\": \"\",\n        \"customerCategorySubType\": \"\",\n        \"newFinancialCenterInd\": \"\",\n        \"emailBounceIndicator\": \"\",\n        \"lastAccessedTimestamp\": \"\",\n        \"challengeQuestionInd\": \"\",\n        \"contactInfoValidatedDatetime\": \"\",\n        \"liquidityEntitledInd\": \"\",\n        \"housekeepingInd\": \"\",\n        \"userContactUpdateDays\": \"\",\n        \"tokenUseForLoginInd\": \"\",\n        \"mufgCustomerInd\": \"\",\n        \"lqcFocus\": \"\"\n    }\nreturn\n    try\n        let result = @webrequests.oa2_api_webservicefunction_search_online_user_details(login_id)\n        return\n            result.status == 200\n                ? result.body.ssoUser\n                : failure_response\n    catch failure_response"
                    },
                    "description": "Returns the details for the specified user",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "login_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Login ID of the user you want details for",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/6665f553-9b15-42cb-9140-bf0b42f727a8",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "is_login_flow"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "9aac38e4-ff41-4236-a6f3-2ea643d86c85",
                    "metadata": {},
                    "block": {
                        "debug_id": "08605157-9017-42bb-86d8-f3385bfb5b13",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "variables": [
                                {
                                    "name": "cause_reject",
                                    "value": {
                                        "type": "expression",
                                        "value": "@namedContainers.namedStringListLookup(\"tab_mobile_app_debug_user_list_testing_only\", @policy.user().id, \"\") == \"\" ? false : true"
                                    }
                                }
                            ],
                            "metadata": {
                                "notes": "Typed List: tab_mobile_app_debug_user_list_testing_only",
                                "label": "(TEST ONLY) Debug base on User Id ",
                                "type": "set_variables"
                            },
                            "type": "set_variables"
                        },
                        "type": "action",
                        "child": {
                            "debug_id": "a31d4826-e214-4d52-83e5-a6224328b3bd",
                            "condition": {
                                "negated": false,
                                "metadata": {
                                    "type": "generic_condition"
                                },
                                "field": {
                                    "type": "expression",
                                    "value": "cause_reject"
                                },
                                "data_type": "boolean",
                                "type": "generic",
                                "operation": "==",
                                "value": {
                                    "type": "expression",
                                    "value": "true"
                                }
                            },
                            "true_branch": {
                                "false_branch": {
                                    "debug_id": "36318da1-f679-4334-8c42-ae62ea2082fa",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "variables": [
                                            {
                                                "name": "test_reject_access_code",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "\"2999\""
                                                }
                                            }
                                        ],
                                        "metadata": {
                                            "type": "set_variables"
                                        },
                                        "type": "set_variables"
                                    },
                                    "type": "action",
                                    "child": {
                                        "debug_id": "0568536e-cc54-4cf2-96e1-cfd0ec254bab",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "metadata": {
                                                "type": "information"
                                            },
                                            "text": {
                                                "type": "expression",
                                                "value": "`To validate Transaction HRT Failure Scenario for Errors\n---------------------------------\nTEST ONLY - Reject access code:  \"ub_reject_access_code\" : \"${test_reject_access_code}\"`"
                                            },
                                            "button_text": {
                                                "type": "expression",
                                                "value": "`OK`"
                                            },
                                            "title": {
                                                "type": "expression",
                                                "value": "`TEST ONLY - Transaction HRT Reject access code \"${test_reject_access_code}\"`"
                                            },
                                            "type": "information",
                                            "parameters": []
                                        },
                                        "type": "action",
                                        "child": {
                                            "debug_id": "d0843ef0-76d8-45b1-9254-6b3e3a96cff6",
                                            "metadata": {
                                                "data_type": "string",
                                                "type": "match_case"
                                            },
                                            "field": {
                                                "type": "expression",
                                                "value": "test_reject_access_code"
                                            },
                                            "otherwise_branch": {
                                                "debug_id": "f59221d0-1628-4c7f-b478-2c10e66a2aab",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "metadata": {
                                                        "type": "information"
                                                    },
                                                    "text": {
                                                        "type": "expression",
                                                        "value": "`HRT Transaction - Continue`"
                                                    },
                                                    "button_text": {
                                                        "type": "expression",
                                                        "value": "`OK`"
                                                    },
                                                    "title": {
                                                        "type": "expression",
                                                        "value": "`HRT Transaction - Continue`"
                                                    },
                                                    "type": "information",
                                                    "parameters": []
                                                },
                                                "type": "action"
                                            },
                                            "matched_branches": [
                                                {
                                                    "matcher": {
                                                        "metadata": {
                                                            "type": "generic_condition",
                                                            "matcherId": "4d5bbbcc-8d37-4e02-bb4c-76f4528f67ff"
                                                        },
                                                        "data_type": "string",
                                                        "type": "generic_operation",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"2000\""
                                                        },
                                                        "operation": "=="
                                                    },
                                                    "child": {
                                                        "debug_id": "227cd86b-9895-4d9a-8567-bbeee8cd994d",
                                                        "metadata": {},
                                                        "procedure_id": "e22d3218-2be2-47fd-b0cb-9689301b363c",
                                                        "frame_config": {
                                                            "params": [
                                                                {
                                                                    "name": "is_login_flow",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "is_login_flow"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "procedure"
                                                    }
                                                },
                                                {
                                                    "matcher": {
                                                        "metadata": {
                                                            "type": "generic_condition",
                                                            "matcherId": "965f020e-2c3d-4be8-b137-b3369a2bbcc4"
                                                        },
                                                        "data_type": "string",
                                                        "type": "generic_operation",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"2999\""
                                                        },
                                                        "operation": "=="
                                                    },
                                                    "child": {
                                                        "debug_id": "a2b9f59c-52f8-41d0-b759-b794d39644c8",
                                                        "metadata": {},
                                                        "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                        "frame_config": {
                                                            "params": [
                                                                {
                                                                    "name": "is_login_flow",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "is_login_flow"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "procedure"
                                                    }
                                                }
                                            ],
                                            "type": "match_case"
                                        }
                                    }
                                },
                                "debug_id": "0f5a6214-2017-49d9-9961-91d503dd24e8",
                                "condition": {
                                    "negated": false,
                                    "metadata": {
                                        "type": "generic_condition"
                                    },
                                    "field": {
                                        "type": "expression",
                                        "value": "is_login_flow"
                                    },
                                    "data_type": "boolean",
                                    "type": "generic",
                                    "operation": "==",
                                    "value": {
                                        "type": "expression",
                                        "value": "true"
                                    }
                                },
                                "true_branch": {
                                    "debug_id": "c5302ac8-8a0b-4c5b-9a94-366348196364",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "variables": [
                                            {
                                                "name": "test_reject_access_code",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "\"0000\""
                                                }
                                            }
                                        ],
                                        "metadata": {
                                            "type": "set_variables"
                                        },
                                        "type": "set_variables"
                                    },
                                    "type": "action",
                                    "child": {
                                        "debug_id": "9017ad7e-6793-4ebe-9850-25973a0cd1b3",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "metadata": {
                                                "type": "information"
                                            },
                                            "text": {
                                                "type": "expression",
                                                "value": "`To validate Login Failure Scenario for Errors\n---------------------------------\nTEST ONLY - Reject access code:  \"ub_reject_access_code\" : \"${test_reject_access_code}\"`"
                                            },
                                            "button_text": {
                                                "type": "expression",
                                                "value": "`OK`"
                                            },
                                            "title": {
                                                "type": "expression",
                                                "value": "`TEST ONLY - Login Reject access code \"${test_reject_access_code}\"`"
                                            },
                                            "type": "information",
                                            "parameters": []
                                        },
                                        "type": "action",
                                        "child": {
                                            "debug_id": "cb7d82b7-7aad-4fa4-8830-a276a2e6526f",
                                            "metadata": {
                                                "data_type": "string",
                                                "type": "match_case"
                                            },
                                            "field": {
                                                "type": "expression",
                                                "value": "test_reject_access_code"
                                            },
                                            "otherwise_branch": {
                                                "debug_id": "2178aa7c-17b8-4d06-831b-05926a0e9462",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "metadata": {
                                                        "type": "information"
                                                    },
                                                    "text": {
                                                        "type": "expression",
                                                        "value": "`Login - Continue`"
                                                    },
                                                    "button_text": {
                                                        "type": "expression",
                                                        "value": "`OK`"
                                                    },
                                                    "title": {
                                                        "type": "expression",
                                                        "value": "`Login - Continue`"
                                                    },
                                                    "type": "information",
                                                    "parameters": []
                                                },
                                                "type": "action"
                                            },
                                            "matched_branches": [
                                                {
                                                    "matcher": {
                                                        "metadata": {
                                                            "type": "generic_condition",
                                                            "matcherId": "80ce91c9-3a82-43f0-ab1b-d2eb3a6be0d0"
                                                        },
                                                        "data_type": "string",
                                                        "type": "generic_operation",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"1000\""
                                                        },
                                                        "operation": "=="
                                                    },
                                                    "child": {
                                                        "debug_id": "2115da93-edbf-42cd-afa4-1629b8c077ef",
                                                        "metadata": {},
                                                        "procedure_id": "e22d3218-2be2-47fd-b0cb-9689301b363c",
                                                        "frame_config": {
                                                            "params": [
                                                                {
                                                                    "name": "is_login_flow",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "is_login_flow"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "procedure"
                                                    }
                                                },
                                                {
                                                    "matcher": {
                                                        "metadata": {
                                                            "type": "generic_condition",
                                                            "matcherId": "09be21af-4aaa-4e1e-ae45-1d4dc120c1d3"
                                                        },
                                                        "data_type": "string",
                                                        "type": "generic_operation",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"1999\""
                                                        },
                                                        "operation": "=="
                                                    },
                                                    "child": {
                                                        "debug_id": "bddf6f5f-f4fd-47ff-ab38-ac0a704f4fae",
                                                        "metadata": {},
                                                        "procedure_id": "f19002aa-72d8-44fb-8f2c-f400ac79472c",
                                                        "frame_config": {
                                                            "params": [
                                                                {
                                                                    "name": "is_login_flow",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "is_login_flow"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "procedure"
                                                    }
                                                }
                                            ],
                                            "type": "match_case"
                                        }
                                    }
                                },
                                "type": "condition"
                            },
                            "type": "condition"
                        }
                    },
                    "type": "block",
                    "child": {
                        "debug_id": "ca2d1a90-255b-45f9-85e7-add92ee9ae13",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "metadata": {
                                "type": "auth_pass"
                            },
                            "type": "auth_pass"
                        },
                        "type": "action"
                    }
                },
                "name": "tab_test_only_hrt_transaction_reject_access_deny_error_subjourney",
                "id": "6665f553-9b15-42cb-9140-bf0b42f727a8"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/133bbbfe-7d0d-470d-8ed3-197078572f5e",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_phone_risk_evaluation_match_score_info",
                "provider_id": "133bbbfe-7d0d-470d-8ed3-197078572f5e",
                "config": {
                    "return_type": {
                        "schema": {
                            "type": "object",
                            "required": [
                                "phoneRiskTransactionId"
                            ],
                            "properties": {
                                "phoneRiskTransactionId": {
                                    "description": "This is a unique id for all calls to Boku in one transaction.  Note that one transaction may be multiple steps, and a customer may need to complete a phone risk process  multiple times, each time being a separate transaction.",
                                    "type": "string"
                                },
                                "phoneRiskResults": {
                                    "type": "object",
                                    "properties": {
                                        "confidenceScore": {
                                            "description": "This score indicates the level of confidence Boku has for the phone number. The score ranges from 0 - 100. A higher score indicates higher confidence. The confidence score considers all the attributes configured for the merchant at the time of onboarding.    Example: confidenceScore: 50",
                                            "type": "integer"
                                        },
                                        "phoneNumber": {
                                            "description": "The phone number on which the risk assessment is performed. It should in E.164 international format.      Example: +14085551234",
                                            "type": "string"
                                        },
                                        "phoneInfo": {
                                            "type": "object",
                                            "properties": {
                                                "serviceType": {
                                                    "description": "Indicates if the phone number is a mobile, fixed or VOIP. Example serviceType: mobile",
                                                    "type": "string"
                                                },
                                                "countryPhoneCode": {
                                                    "description": "The unique number given to each country for dialing a Telephone Number in that country from abroad. e.g. 1 (USA) e.g. 32 (Belgium) e.g. 353 (Ireland) e.g. 44 (UK)",
                                                    "type": "string"
                                                },
                                                "serviceProvider": {
                                                    "description": "Specifies the name of the carrier the phone number is registered to. Example serviceProvider: AT&T Wireless",
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "phoneVerificationMatchScores": {
                                            "type": "object",
                                            "properties": {
                                                "streetAddressScore": {
                                                    "description": "Level of match for the Street Address attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.      The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *5= Partial Match   *9=High Partial Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                },
                                                "lastNameScore": {
                                                    "description": "Level of match for the Last Name attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.      The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *5= Partial Match   *9=High Partial Match   *10=Exact Match   Example lastNameScore: 10",
                                                    "type": "integer"
                                                },
                                                "emailAddressScore": {
                                                    "description": "Level of match for the Email Address attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                },
                                                "cityScore": {
                                                    "description": "Level of match for the City attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                },
                                                "zipCodeScore": {
                                                    "description": "Level of match for the Postal Codeattribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                },
                                                "dataSourceForVerification": {
                                                    "description": "Returns the data source that the merchant data was compared against. Values can be Carrier or Third-Party . Example dataSource: Carrier",
                                                    "type": "string"
                                                },
                                                "firstNameScore": {
                                                    "description": "Level of match for the First Name attribute assigned to the submitted mobile number from low to high the higher the Match score, more accurate is the match. The Values could be: -2=Merchant did not submit data for attribute -1=Data not available for attribute 0=No Match 5= Partial Match 9=High Partial Match 10=Exact Match Example firstNameScore: 10",
                                                    "type": "integer"
                                                },
                                                "stateScore": {
                                                    "description": "Level of match for the State attribute assigned to the submitted mobile number from low to high - the higher the Match score, more accurate is the match.   The Values could be   *-2=Merchant did not submit data for attribute   *-1=Data not available for attribute   *0=No Match   *10=Exact Match   Example Score: 10",
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "type": "object"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "let failure_response = {\n        \"phoneRiskResults\": {\n        \"phoneNumber\": risk_evaluation_phone,\n        \"phoneVerificationMatchScores\": {\n            \"dataSourceForVerification\": 0,\n            \"firstNameScore\": 0,\n            \"lastNameScore\": 0,\n            \"streetAddressScore\": 0,\n            \"cityScore\": 0,\n            \"stateScore\": 0,\n            \"zipCodeScore\": 0,\n            \"emailAddressScore\": 0\n        },\n        \"phoneInfo\": {\n            \"serviceProvider\": null,\n            \"serviceType\": null,\n            \"countryPhoneCode\": null\n        },\n        \"confidenceScore\": 0\n    },\n    \"phoneRiskTransactionId\": phone_risk_transaction_id\n}\nreturn \n    try\n        let result = @webrequests.mol_phone_risk_evaluation({\n            \"requestType\":\"Match Score Info\",\n            \"riskEvaluationPhone\":risk_evaluation_phone,\n            \"firstName\":first_name,\n            \"lastName\":last_name,\n            \"address\": address,\n            \"emailAddress\": email_address,\n            \"phoneRiskTransactionId\": phone_risk_transaction_id\n        })\n        return\n            result.status == 200\n                ? result.body\n                : failure_response\n    catch failure_response"
                    },
                    "description": "Invokes mol_phone_risk_evaluation with requestType \"Phone Info\"",
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "risk_evaluation_phone",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "first_name",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "last_name",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "email_address",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "address",
                            "type_descriptor": {
                                "type": "object"
                            },
                            "optional": false
                        },
                        {
                            "repeats": false,
                            "name": "phone_risk_transaction_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Goes in phoneRiskTransactionId. The same value should be used for all phone_risk_evaluation calls in a session.",
                            "optional": false
                        }
                    ],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/0fc071bc-b598-4626-9f5a-19392699aa8a",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "debug"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "e3f98773-1895-4bb7-ae75-079c67e22a58",
                    "metadata": {
                        "notes": "L10-Pre-Login",
                        "label": "Debug output (L10)"
                    },
                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                    "frame_config": {
                        "params": [
                            {
                                "name": "debug",
                                "value": {
                                    "type": "expression",
                                    "value": "debug"
                                }
                            },
                            {
                                "name": "text",
                                "value": {
                                    "type": "expression",
                                    "value": "let policy_request = @policy.request() return\n`Pre-Login\n------------------------------------------------------------------\npolicy id = ${policy_request.policyid}\nuser id = ${@policy.user().id}\nauth_type = ${policy_request.params[\"auth_type\"]}\ntab_app_version = ${policy_request.params[\"tab_app_version\"]}\n------------------------------------------------------------------\nraa_device_fingerprint = ${policy_request.params[\"raa_device_fingerprint\"]}\n------------------------------------------------------------------\nshp_telemetry_headers = ${policy_request.params[\"shp_telemetry_headers\"]}\n------------------------------------------------------------------\n`"
                                }
                            },
                            {
                                "name": "heading",
                                "value": {
                                    "type": "expression",
                                    "value": "`L10-Pre-Login`"
                                }
                            },
                            {
                                "name": "comment",
                                "value": {
                                    "type": "expression",
                                    "value": "``"
                                }
                            }
                        ]
                    },
                    "type": "procedure",
                    "child": {
                        "debug_id": "66c9524f-4e3b-4ba2-81be-4d8f2f9a5da3",
                        "escapes": {
                            "escapes": []
                        },
                        "strings": [],
                        "action": {
                            "variables": [
                                {
                                    "name": "policy_request",
                                    "value": {
                                        "type": "expression",
                                        "value": "@policy.request()"
                                    }
                                }
                            ],
                            "metadata": {
                                "label": "Set Variable - Policy",
                                "type": "set_variables"
                            },
                            "type": "set_variables"
                        },
                        "type": "action",
                        "child": {
                            "debug_id": "ce77acc7-948d-42b0-8d82-6352d4616548",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "hrt_policy_id",
                                        "value": {
                                            "type": "expression",
                                            "value": "\"\""
                                        }
                                    },
                                    {
                                        "name": "auth_type",
                                        "value": {
                                            "type": "expression",
                                            "value": "\"\" + policy_request.params[\"auth_type\"]"
                                        }
                                    },
                                    {
                                        "name": "raa_device_fingerprint",
                                        "value": {
                                            "type": "expression",
                                            "value": "\"\" + policy_request.params[\"raa_device_fingerprint\"]"
                                        }
                                    },
                                    {
                                        "name": "allow_url",
                                        "value": {
                                            "type": "expression",
                                            "value": "\"\""
                                        }
                                    },
                                    {
                                        "name": "shp_telemetry_headers",
                                        "value": {
                                            "type": "expression",
                                            "value": "policy_request.params[\"shp_telemetry_headers\"]"
                                        }
                                    },
                                    {
                                        "name": "mobile_user_status",
                                        "value": {
                                            "type": "expression",
                                            "value": "\"\""
                                        }
                                    }
                                ],
                                "metadata": {
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "703a6c10-2ae5-4ada-a766-54ac0f262805",
                                "metadata": {},
                                "procedure_id": "fd0fa788-8429-4607-8bc7-d8074fcef13e",
                                "frame_config": {
                                    "params": [
                                        {
                                            "name": "debug",
                                            "value": {
                                                "type": "expression",
                                                "value": "debug"
                                            }
                                        }
                                    ]
                                },
                                "type": "procedure",
                                "child": {
                                    "debug_id": "c2533d02-c459-4ab2-8c5a-385e028886cf",
                                    "metadata": {
                                        "notes": "https://prod-1-jira.mufgamericas.com/browse/IAMA-1354 "
                                    },
                                    "block": {
                                        "debug_id": "476bb2a7-3ed2-4aee-9006-02d60c64338c",
                                        "metadata": {
                                            "notes": "\"SA\" = StrongAuth | \"PA\" = PasswordAuth",
                                            "data_type": "string",
                                            "label": "Match Case \"auth_type\"",
                                            "type": "match_case"
                                        },
                                        "field": {
                                            "type": "expression",
                                            "value": "@policy.request().params.auth_type"
                                        },
                                        "otherwise_branch": {
                                            "debug_id": "077c39a8-ec51-4080-b979-b534bc19280a",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "clear_session": false,
                                                "metadata": {
                                                    "type": "reject"
                                                },
                                                "type": "reject"
                                            },
                                            "type": "action"
                                        },
                                        "matched_branches": [
                                            {
                                                "matcher": {
                                                    "metadata": {
                                                        "label": "Match Case \"auth_type\"",
                                                        "type": "generic_condition",
                                                        "matcherId": "7a69d722-500a-4f03-9306-0e9208b9c385"
                                                    },
                                                    "data_type": "string",
                                                    "type": "generic_operation",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "`SA`"
                                                    },
                                                    "operation": "=="
                                                },
                                                "child": {
                                                    "debug_id": "a63d1c6b-f0e4-4f10-b867-9a2c09d195e6",
                                                    "metadata": {
                                                        "notes": "B20-Pre-Strong-Auth (Proceed to perform StrongAuth)",
                                                        "label": "Debug output (B20)"
                                                    },
                                                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                    "frame_config": {
                                                        "params": [
                                                            {
                                                                "name": "debug",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "debug"
                                                                }
                                                            },
                                                            {
                                                                "name": "text",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "\"Tap OK to proceed to perform Strong Auth\""
                                                                }
                                                            },
                                                            {
                                                                "name": "heading",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "\"B20-Pre-Strong-Auth\""
                                                                }
                                                            },
                                                            {
                                                                "name": "comment",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "\"\""
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type": "procedure",
                                                    "child": {
                                                        "debug_id": "f2dde64d-8375-4a7e-9164-972adb7a0066",
                                                        "escapes": {
                                                            "escapes": []
                                                        },
                                                        "strings": [],
                                                        "action": {
                                                            "variables": [
                                                                {
                                                                    "name": "timestamp_start",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "@time.now()"
                                                                    }
                                                                }
                                                            ],
                                                            "metadata": {
                                                                "label": "Set Variable - Start Time",
                                                                "type": "set_variables"
                                                            },
                                                            "type": "set_variables"
                                                        },
                                                        "type": "action",
                                                        "child": {
                                                            "debug_id": "cae4b836-22cb-4350-af1d-495adcbc4e55",
                                                            "escapes": {
                                                                "escapes": []
                                                            },
                                                            "strings": [],
                                                            "action": {
                                                                "metadata": {
                                                                    "notes": "Strong Auth",
                                                                    "type": "primary_authentication_menu"
                                                                },
                                                                "methods": [
                                                                    {
                                                                        "method": {
                                                                            "type": "placeholder_wca_tokenvalidationservice_customwebservice_ca_strong_auth"
                                                                        }
                                                                    }
                                                                ],
                                                                "options": {
                                                                    "update_default": false,
                                                                    "start_with": "first"
                                                                },
                                                                "strategy": {
                                                                    "type": "primary"
                                                                },
                                                                "type": "authentication",
                                                                "var_name": "auth_output"
                                                            },
                                                            "type": "action",
                                                            "child": {
                                                                "debug_id": "14ec5935-0040-4528-8b86-a6b9101b30e6",
                                                                "escapes": {
                                                                    "escapes": []
                                                                },
                                                                "strings": [],
                                                                "action": {
                                                                    "variables": [
                                                                        {
                                                                            "name": "timestamp_end",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "@time.now()"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "metadata": {
                                                                        "label": "Set Variable - End Time",
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "set_variables"
                                                                },
                                                                "type": "action",
                                                                "child": {
                                                                    "debug_id": "647a5201-fd95-495d-8dc0-f3d3f2ccc2fa",
                                                                    "escapes": {
                                                                        "escapes": []
                                                                    },
                                                                    "strings": [],
                                                                    "action": {
                                                                        "variables": [
                                                                            {
                                                                                "name": "sso_hash_id",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "try auth_output.raw_data.hashId catch \"\""
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "sso_customer_type",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "try auth_output.raw_data.customerType catch \"\""
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "rsa_id",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "try auth_output.raw_data.rsaId catch \"\""
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "scq_question_registered",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "try auth_output.raw_data.challengeQuestionsRegistered == \"Y\"  ? true : false catch false"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "allow_url",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "\"/m-api/http/sec/sauth/post-login-v3\""
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "mobile_user_status",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "try auth_output.raw_data.mobileUserStatus catch \"\""
                                                                                }
                                                                            }
                                                                        ],
                                                                        "metadata": {
                                                                            "type": "set_variables"
                                                                        },
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "action",
                                                                    "child": {
                                                                        "debug_id": "1b6f4e9c-bf68-4711-ad8d-182b5a7fd792",
                                                                        "metadata": {
                                                                            "notes": "B30-StrongAuth-OK",
                                                                            "label": "Debug output (B30)"
                                                                        },
                                                                        "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                        "frame_config": {
                                                                            "params": [
                                                                                {
                                                                                    "name": "debug",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "debug"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "text",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "`------------------------------------------------------------------\nStrong Auth OK.\n  execution_time = ${timestamp_end - timestamp_start} ms\n       timestamp = ${@customFunctions.mae_api_authscriptfunction_request_timestamp()}\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\nsso_customer_type = ${sso_customer_type}\nrsa_id = ${rsa_id}\nscq_question_registered = ${scq_question_registered}\nmobile_user_status = ${mobile_user_status}\n------------------------------------------------------------------\nauth_output=\n   ${auth_output}\n------------------------------------------------------------------\n`"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "heading",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "\"B30-StrongAuth-OK\""
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "name": "comment",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "\"\""
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "procedure",
                                                                        "child": {
                                                                            "debug_id": "91511469-c250-4846-9fa4-7d3affd23c7d",
                                                                            "escapes": {
                                                                                "escapes": []
                                                                            },
                                                                            "strings": [],
                                                                            "action": {
                                                                                "metadata": {
                                                                                    "type": "custom_session_data"
                                                                                },
                                                                                "data": {
                                                                                    "type": "expression",
                                                                                    "value": "{\n  \"sso_hash_id\": sso_hash_id,\n  \"sso_customer_type\": sso_customer_type,\n  \"rsa_id\": rsa_id,\n  \"scq_question_registered\": scq_question_registered\n  }"
                                                                                },
                                                                                "scope": "session",
                                                                                "deep_merge": false,
                                                                                "type": "custom_data"
                                                                            },
                                                                            "type": "action",
                                                                            "child": {
                                                                                "debug_id": "7a210e39-0f6b-49af-a091-96fe850b7a54",
                                                                                "escapes": {
                                                                                    "escapes": []
                                                                                },
                                                                                "strings": [],
                                                                                "action": {
                                                                                    "variables": [
                                                                                        {
                                                                                            "name": "hrt_policy_id",
                                                                                            "value": {
                                                                                                "type": "expression",
                                                                                                "value": "`84`"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "metadata": {
                                                                                        "type": "set_variables"
                                                                                    },
                                                                                    "type": "set_variables"
                                                                                },
                                                                                "type": "action",
                                                                                "child": {
                                                                                    "debug_id": "b8be7bb9-4ff4-4371-b1e2-2683037a4c3a",
                                                                                    "metadata": {
                                                                                        "notes": "B40-HRT-Policy-Id",
                                                                                        "label": "Debug output (B40)"
                                                                                    },
                                                                                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                    "frame_config": {
                                                                                        "params": [
                                                                                            {
                                                                                                "name": "debug",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "debug"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "name": "text",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "`\nhrt_policy_id = ${hrt_policy_id}\nauth_type = ${auth_type}\nallow_url = ${allow_url}\n`"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "name": "heading",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "\"B40-HRT-Policy-Id\""
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "name": "comment",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "``"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "type": "procedure",
                                                                                    "child": {
                                                                                        "debug_id": "3e53f056-e0c0-474d-959b-9f91681ed9d5",
                                                                                        "metadata": {},
                                                                                        "procedure_id": "4ee5620a-8c1a-4edc-a31d-07381eca9980",
                                                                                        "frame_config": {
                                                                                            "params": [
                                                                                                {
                                                                                                    "name": "debug",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "debug"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "name": "sso_hash_id",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "\"\" + sso_hash_id"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "name": "hrt_policy_id",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "hrt_policy_id"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "name": "rsa_id",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "\"\" + rsa_id"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "name": "raa_device_fingerprint",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "\"\" + raa_device_fingerprint"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "name": "scq_question_registered",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "scq_question_registered"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "name": "allow_url",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "allow_url"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "name": "rsa_additional_data_event",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "{}"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "type": "procedure",
                                                                                        "child": {
                                                                                            "debug_id": "3b6c1ae6-a158-4f1d-a51f-b5d9b842e86d",
                                                                                            "metadata": {
                                                                                                "notes": "B50-post-tab_hrt_analyze_subjourney. Default: false",
                                                                                                "label": "Debug output (B50)"
                                                                                            },
                                                                                            "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                            "frame_config": {
                                                                                                "params": [
                                                                                                    {
                                                                                                        "name": "debug",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "debug && false"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "text",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "\"B50-post-tab_hrt_analyze_subjourney\""
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "heading",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "\"B50-post-tab_hrt_analyze_subjourney\""
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "comment",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "\"\""
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "type": "procedure"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "matcher": {
                                                    "metadata": {
                                                        "label": "Match Case \"auth_type\"",
                                                        "type": "generic_condition",
                                                        "matcherId": "948185cf-2674-47bc-b2e3-454b5f6a095f"
                                                    },
                                                    "data_type": "string",
                                                    "type": "generic_operation",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "`PA`"
                                                    },
                                                    "operation": "=="
                                                },
                                                "child": {
                                                    "debug_id": "4a7861d1-fc17-42e5-92c6-c5644ccd03fc",
                                                    "metadata": {
                                                        "notes": "P20-Pre-PasswordAuth (Proceed to perform Password Auth)",
                                                        "label": "Debug output (P20)"
                                                    },
                                                    "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                    "frame_config": {
                                                        "params": [
                                                            {
                                                                "name": "debug",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "debug"
                                                                }
                                                            },
                                                            {
                                                                "name": "text",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "`Tap 'OK' to proceed to perform Password Auth...\n`"
                                                                }
                                                            },
                                                            {
                                                                "name": "heading",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "`P20-Pre-PasswordAuth`"
                                                                }
                                                            },
                                                            {
                                                                "name": "comment",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "``"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type": "procedure",
                                                    "child": {
                                                        "debug_id": "36c5f00d-1a2f-4859-aaa1-3ebc4cc1ddd9",
                                                        "escapes": {
                                                            "escapes": []
                                                        },
                                                        "strings": [],
                                                        "action": {
                                                            "variables": [
                                                                {
                                                                    "name": "timestamp_start",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "@time.now()"
                                                                    }
                                                                }
                                                            ],
                                                            "metadata": {
                                                                "label": "Set Variable - Start Time",
                                                                "type": "set_variables"
                                                            },
                                                            "type": "set_variables"
                                                        },
                                                        "type": "action",
                                                        "child": {
                                                            "debug_id": "5fb1fb11-1423-49cd-a4f1-bdd5ff782cb7",
                                                            "escapes": {
                                                                "escapes": []
                                                            },
                                                            "strings": [],
                                                            "action": {
                                                                "metadata": {
                                                                    "notes": "Password Auth",
                                                                    "type": "primary_authentication_menu"
                                                                },
                                                                "methods": [
                                                                    {
                                                                        "method": {
                                                                            "type": "password"
                                                                        }
                                                                    }
                                                                ],
                                                                "options": {
                                                                    "update_default": false,
                                                                    "start_with": "first"
                                                                },
                                                                "strategy": {
                                                                    "type": "primary"
                                                                },
                                                                "type": "authentication",
                                                                "var_name": "auth_output"
                                                            },
                                                            "type": "action",
                                                            "child": {
                                                                "debug_id": "a6299d9e-d0fe-4b02-9507-189a67fa9ca3",
                                                                "escapes": {
                                                                    "escapes": []
                                                                },
                                                                "strings": [],
                                                                "action": {
                                                                    "variables": [
                                                                        {
                                                                            "name": "timestamp_end",
                                                                            "value": {
                                                                                "type": "expression",
                                                                                "value": "@time.now()"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "metadata": {
                                                                        "label": "Set Variable - End Time",
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "set_variables"
                                                                },
                                                                "type": "action",
                                                                "child": {
                                                                    "debug_id": "8631c5c3-7533-467e-a217-7e941efec4bb",
                                                                    "escapes": {
                                                                        "escapes": []
                                                                    },
                                                                    "strings": [],
                                                                    "action": {
                                                                        "variables": [
                                                                            {
                                                                                "name": "sso_hash_id",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "try auth_output.raw_data.hashId catch \"\""
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "sso_customer_type",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "try auth_output.raw_data.customerType catch \"\""
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "rsa_id",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "try auth_output.raw_data.rsaId catch \"\""
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "scq_question_registered",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "try auth_output.raw_data.challengeQuestionsRegistered == \"Y\"  ? true : false catch false"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "allow_url",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "\"/m-api/http/sec/auth/post-login-v3\""
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "is_token_used_for_login",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "try auth_output.raw_data.isTokenUsedForLogin == \"true\" catch false"
                                                                                }
                                                                            },
                                                                            {
                                                                                "name": "mobile_user_status",
                                                                                "value": {
                                                                                    "type": "expression",
                                                                                    "value": "try auth_output.raw_data.mobileUserStatus catch \"\""
                                                                                }
                                                                            }
                                                                        ],
                                                                        "metadata": {
                                                                            "type": "set_variables"
                                                                        },
                                                                        "type": "set_variables"
                                                                    },
                                                                    "type": "action",
                                                                    "child": {
                                                                        "debug_id": "fbfbcc15-06eb-409a-8e70-7d80ef365c89",
                                                                        "escapes": {
                                                                            "escapes": []
                                                                        },
                                                                        "strings": [],
                                                                        "action": {
                                                                            "variables": [
                                                                                {
                                                                                    "name": "debug",
                                                                                    "value": {
                                                                                        "type": "expression",
                                                                                        "value": "@namedContainers.namedStringListLookup(\"tab_mobile_app_debug_user_list_login_post_auth\", @policy.user().id, \"\") == \"\" ? false : true"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "metadata": {
                                                                                "notes": "Typed List: tab_mobile_app_debug_user_list_login_post_auth",
                                                                                "label": "Debug base on User Id",
                                                                                "type": "set_variables"
                                                                            },
                                                                            "type": "set_variables"
                                                                        },
                                                                        "type": "action",
                                                                        "child": {
                                                                            "debug_id": "46ae34a5-bfd7-4be9-bf3c-370427ca47d9",
                                                                            "metadata": {
                                                                                "notes": "P30-Password-Auth-OK",
                                                                                "label": "Debug output (P30)"
                                                                            },
                                                                            "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                            "frame_config": {
                                                                                "params": [
                                                                                    {
                                                                                        "name": "debug",
                                                                                        "value": {
                                                                                            "type": "expression",
                                                                                            "value": "debug"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "name": "text",
                                                                                        "value": {
                                                                                            "type": "expression",
                                                                                            "value": "`------------------------------------------------------------------\nPassword Auth OK.\n  execution_time = ${timestamp_end - timestamp_start} ms\n       timestamp = ${@customFunctions.mae_api_authscriptfunction_request_timestamp()}\n------------------------------------------------------------------\nsso_hash_id = ${sso_hash_id}\nsso_customer_type = ${sso_customer_type}\nrsa_id = ${rsa_id}\nscq_question_registered = ${scq_question_registered}\nis_token_used_for_login = ${is_token_used_for_login}\nmobile_user_status = ${mobile_user_status}\n------------------------------------------------------------------\nauth_output=\n   ${auth_output}\n------------------------------------------------------------------\n`"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "name": "heading",
                                                                                        "value": {
                                                                                            "type": "expression",
                                                                                            "value": "\"P30-Password-Auth-OK\""
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "name": "comment",
                                                                                        "value": {
                                                                                            "type": "expression",
                                                                                            "value": "`Sample Output\n------------------------------------------------------------------\nLatest\n{\n    \"method\": \"password\",\n    \"level\": 1,\n    \"raw_data\": {\n        \"mobileUserStatus\": \"0000,EMAIL_BOUNCE_IND=N\",\n        \"isTokenUsedForLogin\": \"false\",\n        \"rsaId\": \"d808f2f3120d43099141c6318022775f\",\n        \"wca_status_message\": \"Valid User\",\n        \"type\": \"user-external\",\n        \"hashId\": \"48b385531de1343ee053e390ae0a29f9\",\n        \"responseCode\": \"0000\",\n        \"isTokenEnabled\": \"false\",\n        \"customerType\": \"R\",\n        \"responseDescription\": \"Valid User\",\n        \"challengeQuestionsRegistered\": \"Y\",\n        \"userType\": \"BCO\",\n        \"wca_status_code\": \"0000\"\n    }\n}\n\nChallenge Question Registered\n{\n    \"method\": \"password\",\n    \"level\": 1,\n    \"raw_data\": {\n        \"customerType\": \"R\",\n        \"responseDescription\": \"Valid User\",\n        \"rsaId\": \"d808f2f3120d43099141c6318022775f\",\n        \"challengeQuestionsRegistered\": \"Y\",\n        \"wca_status_message\": \"Valid User\",\n        \"userType\": \"BCO\",\n        \"type\": \"user-external\",\n        \"hashId\": \"48b385531de1343ee053e390ae0a29f9\",\n        \"wca_status_code\": \"0000\",\n        \"responseCode\": \"0000\"\n    }\n}\n------------------------------------------------------------------\nNo Challenge Question Registered\n{\n    \"method\": \"password\",\n    \"level\": 1,\n    \"raw_data\": {\n        \"customerType\": \"R\",\n        \"responseDescription\": \"Valid User\",\n        \"rsaId\": \"d808f2f3120d43099141c6318022775f\",\n        \"challengeQuestionsRegistered\": \"N\",\n        \"wca_status_message\": \"Valid User\",\n        \"userType\": \"BCO\",\n        \"type\": \"user-external\",\n        \"hashId\": \"48b385531de1343ee053e390ae0a29f9\",\n        \"wca_status_code\": \"0000\",\n        \"responseCode\": \"0000\"\n    }\n}\n\n`"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type": "procedure",
                                                                            "child": {
                                                                                "debug_id": "3a1d8d0f-b6fd-406a-bce9-a7c1a70fc56e",
                                                                                "escapes": {
                                                                                    "escapes": []
                                                                                },
                                                                                "strings": [],
                                                                                "action": {
                                                                                    "metadata": {
                                                                                        "type": "custom_session_data"
                                                                                    },
                                                                                    "data": {
                                                                                        "type": "expression",
                                                                                        "value": "{\n  \"sso_hash_id\": sso_hash_id,\n  \"sso_customer_type\": sso_customer_type,\n  \"rsa_id\": rsa_id,\n  \"scq_question_registered\": scq_question_registered\n}"
                                                                                    },
                                                                                    "scope": "session",
                                                                                    "deep_merge": false,
                                                                                    "type": "custom_data"
                                                                                },
                                                                                "type": "action",
                                                                                "child": {
                                                                                    "debug_id": "3df0735e-baab-40bb-bb67-f8b391f17583",
                                                                                    "metadata": {},
                                                                                    "block": {
                                                                                        "debug_id": "d69db8df-2312-4c8d-80cc-9f6906a7887e",
                                                                                        "metadata": {
                                                                                            "data_type": "string",
                                                                                            "type": "match_case"
                                                                                        },
                                                                                        "field": {
                                                                                            "type": "expression",
                                                                                            "value": "sso_customer_type"
                                                                                        },
                                                                                        "otherwise_branch": {
                                                                                            "false_branch": {
                                                                                                "debug_id": "571f84d2-0d86-4eb6-b0b7-176884822d6b",
                                                                                                "escapes": {
                                                                                                    "escapes": []
                                                                                                },
                                                                                                "strings": [],
                                                                                                "action": {
                                                                                                    "variables": [
                                                                                                        {
                                                                                                            "name": "hrt_policy_id",
                                                                                                            "value": {
                                                                                                                "type": "expression",
                                                                                                                "value": "\"11\""
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "metadata": {
                                                                                                        "type": "set_variables"
                                                                                                    },
                                                                                                    "type": "set_variables"
                                                                                                },
                                                                                                "type": "action"
                                                                                            },
                                                                                            "debug_id": "65f37ddb-bdec-4ef2-80bb-09df53d8e05c",
                                                                                            "condition": {
                                                                                                "negated": false,
                                                                                                "metadata": {
                                                                                                    "type": "generic_condition"
                                                                                                },
                                                                                                "field": {
                                                                                                    "type": "expression",
                                                                                                    "value": "is_token_used_for_login"
                                                                                                },
                                                                                                "data_type": "boolean",
                                                                                                "type": "generic",
                                                                                                "operation": "==",
                                                                                                "value": {
                                                                                                    "type": "expression",
                                                                                                    "value": "true"
                                                                                                }
                                                                                            },
                                                                                            "true_branch": {
                                                                                                "debug_id": "8c2ec19a-fe49-407f-88e7-e4ccd6cb3cfa",
                                                                                                "escapes": {
                                                                                                    "escapes": []
                                                                                                },
                                                                                                "strings": [],
                                                                                                "action": {
                                                                                                    "variables": [
                                                                                                        {
                                                                                                            "name": "hrt_policy_id",
                                                                                                            "value": {
                                                                                                                "type": "expression",
                                                                                                                "value": "\"55\""
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "metadata": {
                                                                                                        "type": "set_variables"
                                                                                                    },
                                                                                                    "type": "set_variables"
                                                                                                },
                                                                                                "type": "action"
                                                                                            },
                                                                                            "type": "condition"
                                                                                        },
                                                                                        "matched_branches": [
                                                                                            {
                                                                                                "matcher": {
                                                                                                    "metadata": {
                                                                                                        "type": "generic_condition",
                                                                                                        "matcherId": "d9208c0e-67cd-42c4-b67e-2939adf72e2a"
                                                                                                    },
                                                                                                    "data_type": "string",
                                                                                                    "type": "generic_operation",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "\"R\""
                                                                                                    },
                                                                                                    "operation": "=="
                                                                                                },
                                                                                                "child": {
                                                                                                    "false_branch": {
                                                                                                        "debug_id": "cbd6d9b9-6f77-438d-b83a-b43a2df8e7de",
                                                                                                        "escapes": {
                                                                                                            "escapes": []
                                                                                                        },
                                                                                                        "strings": [],
                                                                                                        "action": {
                                                                                                            "variables": [
                                                                                                                {
                                                                                                                    "name": "hrt_policy_id",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "\"11\""
                                                                                                                    }
                                                                                                                }
                                                                                                            ],
                                                                                                            "metadata": {
                                                                                                                "type": "set_variables"
                                                                                                            },
                                                                                                            "type": "set_variables"
                                                                                                        },
                                                                                                        "type": "action"
                                                                                                    },
                                                                                                    "debug_id": "6d328a06-4873-4f43-8672-8f1a12b15c11",
                                                                                                    "condition": {
                                                                                                        "negated": false,
                                                                                                        "metadata": {
                                                                                                            "type": "generic_condition"
                                                                                                        },
                                                                                                        "field": {
                                                                                                            "type": "expression",
                                                                                                            "value": "is_token_used_for_login"
                                                                                                        },
                                                                                                        "data_type": "boolean",
                                                                                                        "type": "generic",
                                                                                                        "operation": "==",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "true"
                                                                                                        }
                                                                                                    },
                                                                                                    "true_branch": {
                                                                                                        "debug_id": "9b7d2104-116b-4483-b65a-49ec0089d257",
                                                                                                        "escapes": {
                                                                                                            "escapes": []
                                                                                                        },
                                                                                                        "strings": [],
                                                                                                        "action": {
                                                                                                            "variables": [
                                                                                                                {
                                                                                                                    "name": "hrt_policy_id",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "\"55\""
                                                                                                                    }
                                                                                                                }
                                                                                                            ],
                                                                                                            "metadata": {
                                                                                                                "type": "set_variables"
                                                                                                            },
                                                                                                            "type": "set_variables"
                                                                                                        },
                                                                                                        "type": "action"
                                                                                                    },
                                                                                                    "type": "condition"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "matcher": {
                                                                                                    "metadata": {
                                                                                                        "type": "generic_condition",
                                                                                                        "matcherId": "d9596864-bb42-435d-a941-5bc957f7d2b4"
                                                                                                    },
                                                                                                    "data_type": "string",
                                                                                                    "type": "generic_operation",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "\"S\""
                                                                                                    },
                                                                                                    "operation": "=="
                                                                                                },
                                                                                                "child": {
                                                                                                    "false_branch": {
                                                                                                        "debug_id": "48340525-0b28-4889-945b-ea01a474f887",
                                                                                                        "escapes": {
                                                                                                            "escapes": []
                                                                                                        },
                                                                                                        "strings": [],
                                                                                                        "action": {
                                                                                                            "variables": [
                                                                                                                {
                                                                                                                    "name": "hrt_policy_id",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "\"45\""
                                                                                                                    }
                                                                                                                }
                                                                                                            ],
                                                                                                            "metadata": {
                                                                                                                "type": "set_variables"
                                                                                                            },
                                                                                                            "type": "set_variables"
                                                                                                        },
                                                                                                        "type": "action"
                                                                                                    },
                                                                                                    "debug_id": "ec3366be-de4b-41aa-ae5c-1545a4ac6657",
                                                                                                    "condition": {
                                                                                                        "negated": false,
                                                                                                        "metadata": {
                                                                                                            "type": "generic_condition"
                                                                                                        },
                                                                                                        "field": {
                                                                                                            "type": "expression",
                                                                                                            "value": "is_token_used_for_login"
                                                                                                        },
                                                                                                        "data_type": "boolean",
                                                                                                        "type": "generic",
                                                                                                        "operation": "==",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "true"
                                                                                                        }
                                                                                                    },
                                                                                                    "true_branch": {
                                                                                                        "debug_id": "ad1931bf-8872-45a0-ac11-58f281ff185c",
                                                                                                        "escapes": {
                                                                                                            "escapes": []
                                                                                                        },
                                                                                                        "strings": [],
                                                                                                        "action": {
                                                                                                            "variables": [
                                                                                                                {
                                                                                                                    "name": "hrt_policy_id",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "\"57\""
                                                                                                                    }
                                                                                                                }
                                                                                                            ],
                                                                                                            "metadata": {
                                                                                                                "type": "set_variables"
                                                                                                            },
                                                                                                            "type": "set_variables"
                                                                                                        },
                                                                                                        "type": "action"
                                                                                                    },
                                                                                                    "type": "condition"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "matcher": {
                                                                                                    "metadata": {
                                                                                                        "type": "generic_condition",
                                                                                                        "matcherId": "be7ec2e7-2191-428c-8344-d9a0a3a8dc07"
                                                                                                    },
                                                                                                    "data_type": "string",
                                                                                                    "type": "generic_operation",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "\"C\""
                                                                                                    },
                                                                                                    "operation": "=="
                                                                                                },
                                                                                                "child": {
                                                                                                    "false_branch": {
                                                                                                        "debug_id": "0af6efbb-4c97-40ee-8536-c26d38454c03",
                                                                                                        "escapes": {
                                                                                                            "escapes": []
                                                                                                        },
                                                                                                        "strings": [],
                                                                                                        "action": {
                                                                                                            "variables": [
                                                                                                                {
                                                                                                                    "name": "hrt_policy_id",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "\"12\""
                                                                                                                    }
                                                                                                                }
                                                                                                            ],
                                                                                                            "metadata": {
                                                                                                                "type": "set_variables"
                                                                                                            },
                                                                                                            "type": "set_variables"
                                                                                                        },
                                                                                                        "type": "action"
                                                                                                    },
                                                                                                    "debug_id": "d05176a0-beaf-4fa6-b340-e3fa59a7d550",
                                                                                                    "condition": {
                                                                                                        "negated": false,
                                                                                                        "metadata": {
                                                                                                            "type": "generic_condition"
                                                                                                        },
                                                                                                        "field": {
                                                                                                            "type": "expression",
                                                                                                            "value": "is_token_used_for_login"
                                                                                                        },
                                                                                                        "data_type": "boolean",
                                                                                                        "type": "generic",
                                                                                                        "operation": "==",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "true"
                                                                                                        }
                                                                                                    },
                                                                                                    "true_branch": {
                                                                                                        "debug_id": "6b66dc2f-ceeb-4806-aec6-8b1da2f93265",
                                                                                                        "escapes": {
                                                                                                            "escapes": []
                                                                                                        },
                                                                                                        "strings": [],
                                                                                                        "action": {
                                                                                                            "variables": [
                                                                                                                {
                                                                                                                    "name": "hrt_policy_id",
                                                                                                                    "value": {
                                                                                                                        "type": "expression",
                                                                                                                        "value": "\"56\""
                                                                                                                    }
                                                                                                                }
                                                                                                            ],
                                                                                                            "metadata": {
                                                                                                                "type": "set_variables"
                                                                                                            },
                                                                                                            "type": "set_variables"
                                                                                                        },
                                                                                                        "type": "action"
                                                                                                    },
                                                                                                    "type": "condition"
                                                                                                }
                                                                                            }
                                                                                        ],
                                                                                        "type": "match_case"
                                                                                    },
                                                                                    "type": "block",
                                                                                    "child": {
                                                                                        "debug_id": "4987f674-0749-4d82-9119-70aa6baea98f",
                                                                                        "metadata": {
                                                                                            "notes": "P40-HRT-Policy-Id",
                                                                                            "label": "Debug output (P40)"
                                                                                        },
                                                                                        "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                        "frame_config": {
                                                                                            "params": [
                                                                                                {
                                                                                                    "name": "debug",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "debug"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "name": "text",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "`\nhrt_policy_id = ${hrt_policy_id}\nauth_type = ${auth_type}\nallow_url = ${allow_url}\nis_token_used_for_login = ${is_token_used_for_login}\n`"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "name": "heading",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "\"P40-HRT-Policy-Id\""
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "name": "comment",
                                                                                                    "value": {
                                                                                                        "type": "expression",
                                                                                                        "value": "``"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "type": "procedure",
                                                                                        "child": {
                                                                                            "debug_id": "8e21c978-a406-4b70-86c7-7f14c1701a4e",
                                                                                            "metadata": {},
                                                                                            "procedure_id": "4ee5620a-8c1a-4edc-a31d-07381eca9980",
                                                                                            "frame_config": {
                                                                                                "params": [
                                                                                                    {
                                                                                                        "name": "debug",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "debug"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "sso_hash_id",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "\"\" + sso_hash_id"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "hrt_policy_id",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "hrt_policy_id"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "rsa_id",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "\"\" + rsa_id"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "raa_device_fingerprint",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "\"\" + raa_device_fingerprint"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "scq_question_registered",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "scq_question_registered"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "allow_url",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "allow_url"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "name": "rsa_additional_data_event",
                                                                                                        "value": {
                                                                                                            "type": "expression",
                                                                                                            "value": "{}"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "type": "procedure",
                                                                                            "child": {
                                                                                                "debug_id": "01894604-8a32-4af1-83a7-31d1e2cae58e",
                                                                                                "metadata": {
                                                                                                    "notes": "P50-post-tab_hrt_analyze_subjourney. Default: false",
                                                                                                    "label": "Debug output (P50)"
                                                                                                },
                                                                                                "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                                                                "frame_config": {
                                                                                                    "params": [
                                                                                                        {
                                                                                                            "name": "debug",
                                                                                                            "value": {
                                                                                                                "type": "expression",
                                                                                                                "value": "debug && false"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "name": "text",
                                                                                                            "value": {
                                                                                                                "type": "expression",
                                                                                                                "value": "\"P50-post-tab_hrt_analyze_subjourney\""
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "name": "heading",
                                                                                                            "value": {
                                                                                                                "type": "expression",
                                                                                                                "value": "\"P50-post-tab_hrt_analyze_subjourney\""
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "name": "comment",
                                                                                                            "value": {
                                                                                                                "type": "expression",
                                                                                                                "value": "\"\""
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "type": "procedure"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "type": "match_case"
                                    },
                                    "type": "block",
                                    "child": {
                                        "debug_id": "d2cf39e1-a0bc-412b-970d-e08efbb77a7d",
                                        "metadata": {},
                                        "procedure_id": "df017958-7023-4ad6-bc57-50654bd31ff0",
                                        "frame_config": {
                                            "params": [
                                                {
                                                    "name": "auth_type",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "auth_type"
                                                    }
                                                },
                                                {
                                                    "name": "mobile_user_status",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "mobile_user_status"
                                                    }
                                                }
                                            ]
                                        },
                                        "type": "procedure",
                                        "child": {
                                            "debug_id": "b9602f2b-1555-4d77-b2cc-6d571dd2b609",
                                            "metadata": {
                                                "notes": "L60-post-mae_persist_ping_fed_token. Default: false",
                                                "label": "Debug output (L60)"
                                            },
                                            "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                            "frame_config": {
                                                "params": [
                                                    {
                                                        "name": "debug",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "debug && false"
                                                        }
                                                    },
                                                    {
                                                        "name": "text",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"L60-post-mae_persist_ping_fed_token\""
                                                        }
                                                    },
                                                    {
                                                        "name": "heading",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"L60-post-mae_persist_ping_fed_token\""
                                                        }
                                                    },
                                                    {
                                                        "name": "comment",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"\""
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "procedure",
                                            "child": {
                                                "debug_id": "02ad2545-49a5-41b9-99f6-70b457fd7910",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "variables": [
                                                        {
                                                            "name": "ping_references_token",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "mae_persist_ping_fed_token_session_subjourney_output"
                                                            }
                                                        }
                                                    ],
                                                    "metadata": {
                                                        "type": "set_variables"
                                                    },
                                                    "type": "set_variables"
                                                },
                                                "type": "action",
                                                "child": {
                                                    "debug_id": "1a0b96e1-f4de-4376-b589-ce8b0d56cc00",
                                                    "metadata": {},
                                                    "procedure_id": "6186f3b5-a685-4d69-b411-efc52ad46033",
                                                    "frame_config": {
                                                        "params": [
                                                            {
                                                                "name": "ping_reference_token",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "ping_references_token"
                                                                }
                                                            },
                                                            {
                                                                "name": "hrt_policy_id",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "hrt_policy_id"
                                                                }
                                                            },
                                                            {
                                                                "name": "platform_type",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "\"mobile\""
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type": "procedure",
                                                    "child": {
                                                        "debug_id": "41f77641-bb6c-4cd4-9950-0407785faeb0",
                                                        "metadata": {
                                                            "notes": "L70-post-mae_login_cross_session_message_subjourney. Default: false",
                                                            "label": "Debug output (L70)"
                                                        },
                                                        "procedure_id": "b41f8185-2807-46a9-bb75-90643722a51c",
                                                        "frame_config": {
                                                            "params": [
                                                                {
                                                                    "name": "debug",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "debug && false"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "text",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "\"L70-post-mae_login_cross_session_message_subjourney\""
                                                                    }
                                                                },
                                                                {
                                                                    "name": "heading",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "\"L70-post-mae_login_cross_session_message_subjourney\""
                                                                    }
                                                                },
                                                                {
                                                                    "name": "comment",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "\"\""
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "procedure",
                                                        "child": {
                                                            "debug_id": "09f3eb71-84ae-40e1-9def-ac7a58156e14",
                                                            "metadata": {},
                                                            "procedure_id": "296d6169-292b-497a-9d9f-8c11775d6358",
                                                            "frame_config": {
                                                                "params": []
                                                            },
                                                            "type": "procedure",
                                                            "child": {
                                                                "debug_id": "12bb69d8-0938-4de4-8bf3-e3d2e8a3f90f",
                                                                "escapes": {
                                                                    "escapes": []
                                                                },
                                                                "strings": [],
                                                                "action": {
                                                                    "metadata": {
                                                                        "type": "auth_pass"
                                                                    },
                                                                    "type": "auth_pass"
                                                                },
                                                                "type": "action"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "name": "tab_login_subjourney",
                "id": "0fc071bc-b598-4626-9f5a-19392699aa8a"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///applications/tab_mobile_app/procedures/997b5c6b-e6ee-4ba0-b2c7-989d8e084654",
            "data": {
                "schema_version": 2,
                "metadata": {
                    "outputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "mae_otp_auth_with_optional_escape_subjourney_auth_successful",
                            "description": "True if authentication was successful"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "mae_otp_auth_with_optional_escape_subjourney_escape_chosen",
                            "description": "Boolean indicating whether the user chose the escape option. Will always be false if escape_available parameter was false."
                        }
                    ],
                    "inputs": [
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "ip_address",
                            "description": "Originating IP Address of the request"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "allow_url"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "login_id",
                            "description": "typed in by the user"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "sso_hash_id",
                            "description": "SSO hash ID"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "user_session_token"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "raa_transaction_id",
                            "description": "Transaction ID returned from RAA Analyze"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "hrt_code",
                            "description": "The HRT number"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "object"
                            },
                            "name": "raa_analyze_request",
                            "description": "The original RAA Analyze request"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "double"
                            },
                            "name": "max_otps",
                            "description": "Maximum number of different OTPs the user is allowed to try"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "string"
                            },
                            "name": "rsa_risk_score",
                            "description": "risk score returned by RAA Analyze"
                        },
                        {
                            "type_descriptor": {
                                "schema": null,
                                "type": "boolean"
                            },
                            "name": "escape_available",
                            "description": "Boolean indicating whether we should offer the \"another_way\" escape option"
                        }
                    ]
                },
                "workflow": {
                    "debug_id": "13a900eb-0c81-4891-9cbc-a0d7d95fb30c",
                    "escapes": {
                        "escapes": []
                    },
                    "strings": [],
                    "action": {
                        "variables": [
                            {
                                "name": "auth_success",
                                "value": {
                                    "type": "expression",
                                    "value": "false"
                                }
                            },
                            {
                                "name": "NOTE",
                                "value": {
                                    "type": "expression",
                                    "value": "\"The OTP authenticator expects certain session attributes to be set. These are set by mae_get_otp_phone_numbers_subjourney.\""
                                }
                            },
                            {
                                "name": "otp_counter",
                                "value": {
                                    "type": "expression",
                                    "value": "@policy.user().custom_data[\"otp_failed_attempt_counter\"] || 0"
                                }
                            },
                            {
                                "name": "another_way",
                                "value": {
                                    "type": "expression",
                                    "value": "false"
                                }
                            }
                        ],
                        "metadata": {
                            "type": "set_variables"
                        },
                        "type": "set_variables"
                    },
                    "type": "action",
                    "child": {
                        "max_iterations": 10,
                        "loop_body": {
                            "debug_id": "58b8b490-80de-4efe-a7d3-81e6040c37a6",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "auth_outcome",
                                        "value": {
                                            "type": "expression",
                                            "value": "`RESEND`"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "debug_id": "1e86f92b-b33a-4701-88f5-a05657e87ac3",
                                "metadata": {},
                                "block": {
                                    "false_branch": {
                                        "debug_id": "8a7b342c-ff6d-43a3-be3c-7cf4dde03acc",
                                        "escapes": {
                                            "escapes": [
                                                {
                                                    "presentation": "action",
                                                    "id": "resend",
                                                    "display_name": {
                                                        "type": "expression",
                                                        "value": "`Resend`"
                                                    }
                                                }
                                            ]
                                        },
                                        "strings": [],
                                        "action": {
                                            "metadata": {
                                                "type": "primary_authentication_menu"
                                            },
                                            "methods": [
                                                {
                                                    "method": {
                                                        "channels": [
                                                            {
                                                                "from": "4444444444",
                                                                "text": {
                                                                    "type": "expression",
                                                                    "value": "\"Never used\""
                                                                },
                                                                "type": "sms",
                                                                "target": {
                                                                    "type": "expression",
                                                                    "value": "@policy.session().custom_data.otp_phone_numbers"
                                                                }
                                                            }
                                                        ],
                                                        "failures_strategy": {
                                                            "type": "code_generations",
                                                            "max_wrong_inputs": 3
                                                        },
                                                        "auto_execute": false,
                                                        "otp_expiry_seconds": 300,
                                                        "otp_provider_id": "62da81d1-5ee4-4441-92fc-75c60c745784",
                                                        "type": "otp"
                                                    }
                                                }
                                            ],
                                            "options": {
                                                "update_default": true,
                                                "start_with": "default"
                                            },
                                            "strategy": {
                                                "type": "primary"
                                            },
                                            "type": "authentication"
                                        },
                                        "type": "action",
                                        "child": {
                                            "debug_id": "9ed0522c-10df-4cdb-a2fb-33d42a9c85cd",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "variables": [
                                                    {
                                                        "name": "auth_outcome",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "`SUCCESS`"
                                                        }
                                                    }
                                                ],
                                                "metadata": {
                                                    "type": "set_variables"
                                                },
                                                "type": "set_variables"
                                            },
                                            "type": "action"
                                        }
                                    },
                                    "debug_id": "cdf9d95c-4ea0-4ad6-b263-333002de52f6",
                                    "condition": {
                                        "negated": false,
                                        "metadata": {
                                            "type": "generic_condition"
                                        },
                                        "field": {
                                            "type": "expression",
                                            "value": "escape_available"
                                        },
                                        "data_type": "boolean",
                                        "type": "generic",
                                        "operation": "==",
                                        "value": {
                                            "type": "expression",
                                            "value": "true"
                                        }
                                    },
                                    "true_branch": {
                                        "debug_id": "7c9dc0a1-1223-4d15-a361-884907bd9fd7",
                                        "escapes": {
                                            "escapes": [
                                                {
                                                    "presentation": "action",
                                                    "id": "another_way",
                                                    "display_name": {
                                                        "type": "expression",
                                                        "value": "`Another Way`"
                                                    },
                                                    "child": {
                                                        "debug_id": "3a7a8d15-b009-4db7-8fa9-57a4c1fbc6bd",
                                                        "escapes": {
                                                            "escapes": []
                                                        },
                                                        "strings": [],
                                                        "action": {
                                                            "variables": [
                                                                {
                                                                    "name": "auth_outcome",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "`ANOTHER_WAY`"
                                                                    }
                                                                }
                                                            ],
                                                            "metadata": {
                                                                "type": "set_variables"
                                                            },
                                                            "type": "set_variables"
                                                        },
                                                        "type": "action"
                                                    }
                                                },
                                                {
                                                    "presentation": "action",
                                                    "id": "resend",
                                                    "display_name": {
                                                        "type": "expression",
                                                        "value": "`Resend`"
                                                    }
                                                }
                                            ]
                                        },
                                        "strings": [],
                                        "action": {
                                            "metadata": {
                                                "type": "primary_authentication_menu"
                                            },
                                            "methods": [
                                                {
                                                    "method": {
                                                        "channels": [
                                                            {
                                                                "from": "4444444444",
                                                                "text": {
                                                                    "type": "expression",
                                                                    "value": "\"Never used\""
                                                                },
                                                                "type": "sms",
                                                                "target": {
                                                                    "type": "expression",
                                                                    "value": "@policy.session().custom_data.otp_phone_numbers"
                                                                }
                                                            }
                                                        ],
                                                        "failures_strategy": {
                                                            "type": "code_generations",
                                                            "max_wrong_inputs": 3
                                                        },
                                                        "auto_execute": false,
                                                        "otp_expiry_seconds": 300,
                                                        "otp_provider_id": "62da81d1-5ee4-4441-92fc-75c60c745784",
                                                        "type": "otp"
                                                    }
                                                }
                                            ],
                                            "options": {
                                                "update_default": true,
                                                "start_with": "default"
                                            },
                                            "strategy": {
                                                "type": "primary"
                                            },
                                            "type": "authentication"
                                        },
                                        "type": "action",
                                        "child": {
                                            "debug_id": "8ec06b69-ad3d-4a32-adac-6b8e3432f932",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "variables": [
                                                    {
                                                        "name": "auth_outcome",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "`SUCCESS`"
                                                        }
                                                    }
                                                ],
                                                "metadata": {
                                                    "type": "set_variables"
                                                },
                                                "type": "set_variables"
                                            },
                                            "type": "action"
                                        }
                                    },
                                    "type": "condition"
                                },
                                "type": "block",
                                "child": {
                                    "debug_id": "0d5acb10-bc80-4576-8c0d-5d50552d7864",
                                    "metadata": {
                                        "data_type": "string",
                                        "type": "match_case"
                                    },
                                    "field": {
                                        "type": "expression",
                                        "value": "auth_outcome"
                                    },
                                    "otherwise_branch": {
                                        "debug_id": "9f9313cf-026f-4ec9-adbe-cb5d33625b7c",
                                        "escapes": {
                                            "escapes": []
                                        },
                                        "strings": [],
                                        "action": {
                                            "variables": [
                                                {
                                                    "name": "otp_counter",
                                                    "value": {
                                                        "type": "expression",
                                                        "value": "(@policy.user().custom_data[\"otp_failed_attempt_counter\"] || 0) + 1"
                                                    }
                                                }
                                            ],
                                            "metadata": {
                                                "notes": "Read from user data again in case more than one session is active.",
                                                "label": "Increment loop counter",
                                                "type": "set_variables"
                                            },
                                            "type": "set_variables"
                                        },
                                        "type": "action",
                                        "child": {
                                            "debug_id": "5393f5b2-a3af-46b5-a8da-ed4b2948be7e",
                                            "metadata": {
                                                "label": "Log Auth Result"
                                            },
                                            "procedure_id": "caa22143-d843-4b45-b648-7280d3f6648d",
                                            "frame_config": {
                                                "params": [
                                                    {
                                                        "name": "ip_address",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "@policy.request().client_ip"
                                                        }
                                                    },
                                                    {
                                                        "name": "allow_url",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "allow_url"
                                                        }
                                                    },
                                                    {
                                                        "name": "login_id",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "login_id"
                                                        }
                                                    },
                                                    {
                                                        "name": "user_session_token",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "user_session_token"
                                                        }
                                                    },
                                                    {
                                                        "name": "raa_transaction_id",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "raa_transaction_id"
                                                        }
                                                    },
                                                    {
                                                        "name": "hrt_code",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "hrt_code"
                                                        }
                                                    },
                                                    {
                                                        "name": "sso_hash_id",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "sso_hash_id"
                                                        }
                                                    },
                                                    {
                                                        "name": "rsa_result",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "otp_counter >= max_otps ? \"DENY\" : \"CHALLENGE\""
                                                        }
                                                    },
                                                    {
                                                        "name": "rsa_risk_score",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "rsa_risk_score"
                                                        }
                                                    },
                                                    {
                                                        "name": "final_result",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"SUCCESS\""
                                                        }
                                                    },
                                                    {
                                                        "name": "rsa_stage_id",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "otp_counter >= max_otps ? 23 : 22"
                                                        }
                                                    },
                                                    {
                                                        "name": "failed_attempts",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "0 + otp_counter"
                                                        }
                                                    },
                                                    {
                                                        "name": "lock_user",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "otp_counter >= max_otps ? \"regular\" : \"\""
                                                        }
                                                    },
                                                    {
                                                        "name": "user_failure_reason",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"incorrect otp\""
                                                        }
                                                    },
                                                    {
                                                        "name": "tkn_or_otp",
                                                        "value": {
                                                            "type": "expression",
                                                            "value": "\"OTP\""
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "procedure",
                                            "child": {
                                                "debug_id": "a031eb6a-bc59-4cc8-9d9f-b2a35c2dcc29",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "metadata": {
                                                        "type": "custom_user_data"
                                                    },
                                                    "data": {
                                                        "type": "expression",
                                                        "value": "{otp_failed_attempt_counter: otp_counter}"
                                                    },
                                                    "scope": "user",
                                                    "deep_merge": false,
                                                    "type": "custom_data"
                                                },
                                                "type": "action"
                                            }
                                        }
                                    },
                                    "matched_branches": [
                                        {
                                            "matcher": {
                                                "metadata": {
                                                    "type": "generic_condition",
                                                    "matcherId": "9202e658-cb66-4d96-929a-369f62c0f18a"
                                                },
                                                "data_type": "string",
                                                "type": "generic_operation",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "`SUCCESS`"
                                                },
                                                "operation": "=="
                                            },
                                            "child": {
                                                "debug_id": "980a4e15-ec42-4359-9f0f-6287a432711a",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "variables": [
                                                        {
                                                            "name": "auth_success",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "true"
                                                            }
                                                        }
                                                    ],
                                                    "metadata": {
                                                        "type": "set_variables"
                                                    },
                                                    "type": "set_variables"
                                                },
                                                "type": "action",
                                                "child": {
                                                    "debug_id": "a41aa75e-5029-4d45-b99d-81d115359e05",
                                                    "escapes": {
                                                        "escapes": []
                                                    },
                                                    "strings": [],
                                                    "action": {
                                                        "variables": [
                                                            {
                                                                "name": "otp_counter",
                                                                "value": {
                                                                    "type": "expression",
                                                                    "value": "(@policy.user().custom_data[\"otp_failed_attempt_counter\"] || 0) + 1"
                                                                }
                                                            }
                                                        ],
                                                        "metadata": {
                                                            "notes": "Read from user data again in case more than one session is active.",
                                                            "label": "Increment loop counter",
                                                            "type": "set_variables"
                                                        },
                                                        "type": "set_variables"
                                                    },
                                                    "type": "action",
                                                    "child": {
                                                        "debug_id": "3ae8cf57-0158-4fd4-bb34-624061b85de0",
                                                        "metadata": {
                                                            "label": "Log Auth Result"
                                                        },
                                                        "procedure_id": "caa22143-d843-4b45-b648-7280d3f6648d",
                                                        "frame_config": {
                                                            "params": [
                                                                {
                                                                    "name": "ip_address",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "@policy.request().client_ip"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "allow_url",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "allow_url"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "login_id",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "login_id"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "user_session_token",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "user_session_token"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "raa_transaction_id",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "raa_transaction_id"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "hrt_code",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "hrt_code"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "sso_hash_id",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "sso_hash_id"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "rsa_result",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "\"ALLOW\""
                                                                    }
                                                                },
                                                                {
                                                                    "name": "rsa_risk_score",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "rsa_risk_score"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "final_result",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "\"SUCCESS\""
                                                                    }
                                                                },
                                                                {
                                                                    "name": "rsa_stage_id",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "21"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "failed_attempts",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "0"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "lock_user",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "\"\""
                                                                    }
                                                                },
                                                                {
                                                                    "name": "user_failure_reason",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "\"\""
                                                                    }
                                                                },
                                                                {
                                                                    "name": "tkn_or_otp",
                                                                    "value": {
                                                                        "type": "expression",
                                                                        "value": "\"OTP\""
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "procedure",
                                                        "child": {
                                                            "debug_id": "d18eeff8-51bd-4588-bdfd-f0de4c40dd98",
                                                            "escapes": {
                                                                "escapes": []
                                                            },
                                                            "strings": [],
                                                            "action": {
                                                                "metadata": {
                                                                    "type": "custom_user_data"
                                                                },
                                                                "data": {
                                                                    "type": "expression",
                                                                    "value": "{otp_failed_attempt_counter: 0}"
                                                                },
                                                                "scope": "user",
                                                                "deep_merge": false,
                                                                "type": "custom_data"
                                                            },
                                                            "type": "action"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "matcher": {
                                                "metadata": {
                                                    "type": "generic_condition",
                                                    "matcherId": "f05912ab-a818-48cd-a778-98cbbdf5921c"
                                                },
                                                "data_type": "string",
                                                "type": "generic_operation",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "`ANOTHER_WAY`"
                                                },
                                                "operation": "=="
                                            },
                                            "child": {
                                                "debug_id": "a115ce68-bd70-4e9e-a9b8-99d1f372b868",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "variables": [
                                                        {
                                                            "name": "another_way",
                                                            "value": {
                                                                "type": "expression",
                                                                "value": "true"
                                                            }
                                                        }
                                                    ],
                                                    "metadata": {
                                                        "type": "set_variables"
                                                    },
                                                    "type": "set_variables"
                                                },
                                                "type": "action"
                                            }
                                        }
                                    ],
                                    "type": "match_case"
                                }
                            }
                        },
                        "debug_id": "743fea7e-cbdf-47bb-99ab-aa86c419f0f8",
                        "condition": {
                            "type": "expression",
                            "value": "auth_success == false && another_way == false && otp_counter < max_otps"
                        },
                        "iteration_count": 0,
                        "metadata": {},
                        "type": "loop",
                        "child": {
                            "debug_id": "36577ec2-f042-4cc2-aff2-68bc97552ca4",
                            "escapes": {
                                "escapes": []
                            },
                            "strings": [],
                            "action": {
                                "variables": [
                                    {
                                        "name": "mae_otp_auth_with_optional_escape_subjourney_auth_successful",
                                        "value": {
                                            "type": "expression",
                                            "value": "auth_success"
                                        }
                                    },
                                    {
                                        "name": "mae_otp_auth_with_optional_escape_subjourney_escape_chosen",
                                        "value": {
                                            "type": "expression",
                                            "value": "another_way"
                                        }
                                    }
                                ],
                                "metadata": {
                                    "type": "set_variables"
                                },
                                "type": "set_variables"
                            },
                            "type": "action",
                            "child": {
                                "false_branch": {
                                    "debug_id": "19531274-2500-45bb-a09a-b690b19fbd82",
                                    "metadata": {},
                                    "procedure_id": "fb314752-c438-462d-bff5-bb8df59d46f1",
                                    "frame_config": {
                                        "params": [
                                            {
                                                "name": "analyze_request",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "{} + raa_analyze_request"
                                                }
                                            },
                                            {
                                                "name": "authentication_level",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "{attemptsTryCount: \"\" + otp_counter, successful: auth_success, level: \"1000\"}"
                                                }
                                            },
                                            {
                                                "name": "transaction_id",
                                                "value": {
                                                    "type": "expression",
                                                    "value": "raa_transaction_id"
                                                }
                                            }
                                        ]
                                    },
                                    "type": "procedure",
                                    "child": {
                                        "false_branch": {
                                            "debug_id": "1897cddd-f59f-48c5-9bcd-ae9b0155f949",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "metadata": {
                                                    "type": "custom_user_data"
                                                },
                                                "data": {
                                                    "type": "expression",
                                                    "value": "{otp_failed_attempt_counter: 0}"
                                                },
                                                "scope": "user",
                                                "deep_merge": false,
                                                "type": "custom_data"
                                            },
                                            "type": "action",
                                            "child": {
                                                "debug_id": "2d2fc4e0-398e-490a-b4cc-917e409783aa",
                                                "escapes": {
                                                    "escapes": []
                                                },
                                                "strings": [],
                                                "action": {
                                                    "clear_session": true,
                                                    "metadata": {
                                                        "type": "reject"
                                                    },
                                                    "type": "reject"
                                                },
                                                "type": "action"
                                            }
                                        },
                                        "debug_id": "4dd2ea3c-190f-4d7b-9565-27406a594159",
                                        "condition": {
                                            "negated": false,
                                            "metadata": {
                                                "type": "generic_condition"
                                            },
                                            "field": {
                                                "type": "expression",
                                                "value": "auth_success"
                                            },
                                            "data_type": "boolean",
                                            "type": "generic",
                                            "operation": "==",
                                            "value": {
                                                "type": "expression",
                                                "value": "true"
                                            }
                                        },
                                        "true_branch": {
                                            "debug_id": "e4f178d2-0c0e-47ee-9595-770d5cdac0cd",
                                            "escapes": {
                                                "escapes": []
                                            },
                                            "strings": [],
                                            "action": {
                                                "metadata": {
                                                    "type": "auth_pass"
                                                },
                                                "type": "auth_pass"
                                            },
                                            "type": "action"
                                        },
                                        "type": "condition"
                                    }
                                },
                                "debug_id": "9ea30f39-830f-4703-b8c5-862c14aa3c2f",
                                "condition": {
                                    "negated": false,
                                    "metadata": {
                                        "type": "generic_condition"
                                    },
                                    "field": {
                                        "type": "expression",
                                        "value": "another_way"
                                    },
                                    "data_type": "boolean",
                                    "type": "generic",
                                    "operation": "==",
                                    "value": {
                                        "type": "expression",
                                        "value": "true"
                                    }
                                },
                                "true_branch": {
                                    "debug_id": "9303ea3c-7f7c-46b6-b9c5-db6d034a876b",
                                    "escapes": {
                                        "escapes": []
                                    },
                                    "strings": [],
                                    "action": {
                                        "metadata": {
                                            "type": "auth_pass"
                                        },
                                        "type": "auth_pass"
                                    },
                                    "type": "action"
                                },
                                "type": "condition"
                            }
                        }
                    }
                },
                "name": "mae_otp_auth_with_optional_escape_subjourney",
                "id": "997b5c6b-e6ee-4ba0-b2c7-989d8e084654"
            },
            "category": "procedure",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                },
                {
                    "application_type": "mobile",
                    "type": "application_type"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/cf69884f-0d10-4f71-903b-4e9e84e40d56",
            "data": {
                "provider_type": "function-authscript",
                "name": "mae_api_authscriptfunction_request_timestamp",
                "provider_id": "cf69884f-0d10-4f71-903b-4e9e84e40d56",
                "config": {
                    "return_type": {
                        "type": "string"
                    },
                    "expression": {
                        "type": "expression",
                        "value": "@time.formatDateTime(\"YYYY-MM-dd'T'HH:mm:ssZ\",@time.now())"
                    },
                    "description": "Create a X-MUFG-Request-Ts header for API calls (request timestamp).",
                    "arguments": [],
                    "type": "function-authscript"
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///providers/cdc8aaad-421d-4acc-8b7f-33e55ba478fc",
            "data": {
                "provider_type": "function-web-request",
                "name": "oa2_api_webservicefunction_search_online_user_details",
                "provider_id": "cdc8aaad-421d-4acc-8b7f-33e55ba478fc",
                "config": {
                    "arguments": [
                        {
                            "repeats": false,
                            "name": "login_id",
                            "type_descriptor": {
                                "type": "string"
                            },
                            "description": "Login ID of the user you want details for",
                            "optional": false
                        }
                    ],
                    "wait_for_response": true,
                    "type": "function-web-request",
                    "web_request": {
                        "fail_on_non_2xx_response": false,
                        "headers": [
                            {
                                "name": "X-MUFG-Request-Uuid",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@uuid()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-Request-Ts",
                                "value": {
                                    "type": "expression",
                                    "value": "`${@customFunctions.mae_api_authscriptfunction_request_timestamp()}`"
                                }
                            },
                            {
                                "name": "X-MUFG-Application-Id",
                                "value": {
                                    "type": "expression",
                                    "value": "`OA2`"
                                }
                            },
                            {
                                "name": "Content-Type",
                                "value": {
                                    "type": "expression",
                                    "value": "`application/json`"
                                }
                            }
                        ],
                        "response_format": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "ssoUser": {
                                        "type": "object",
                                        "properties": {
                                            "customerFullName": {
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "type": "string"
                                            },
                                            "newFinancialCenterInd": {
                                                "type": "string"
                                            },
                                            "loginId": {
                                                "type": "string"
                                            },
                                            "customerEntitlements": {
                                                "type": "string"
                                            },
                                            "customerLobType": {
                                                "type": "string"
                                            },
                                            "accessGrantedInd": {
                                                "type": "string"
                                            },
                                            "businessContractingOfficerInd": {
                                                "type": "string"
                                            },
                                            "userStatusCode": {
                                                "type": "string"
                                            },
                                            "olbEnvironment": {
                                                "type": "string"
                                            },
                                            "userContactUpdateDays": {
                                                "type": "string"
                                            },
                                            "tokenUseForLoginInd": {
                                                "type": "string"
                                            },
                                            "userEntitlements": {
                                                "type": "string"
                                            },
                                            "customerId": {
                                                "type": "string"
                                            },
                                            "ddaAccountId": {
                                                "type": "string"
                                            },
                                            "primaryEmail": {
                                                "type": "string"
                                            },
                                            "challengeQuestionInd": {
                                                "type": "string"
                                            },
                                            "userHashId": {
                                                "type": "string"
                                            },
                                            "housekeepingInd": {
                                                "type": "string"
                                            },
                                            "createdTimestamp": {
                                                "type": "string"
                                            },
                                            "lqcFocus": {
                                                "type": "string"
                                            },
                                            "customerCategorySubType": {
                                                "type": "string"
                                            },
                                            "emailBounceIndicator": {
                                                "type": "string"
                                            },
                                            "liquidityEntitledInd": {
                                                "type": "string"
                                            },
                                            "eligible360Ind": {
                                                "type": "string"
                                            },
                                            "lastAccessedTimestamp": {
                                                "type": "string"
                                            },
                                            "firstName": {
                                                "type": "string"
                                            },
                                            "companyId": {
                                                "type": "string"
                                            },
                                            "dashboardInd": {
                                                "type": "string"
                                            },
                                            "phoneNumber": {
                                                "type": "string"
                                            },
                                            "tradeFinancePortalRole": {
                                                "type": "string"
                                            },
                                            "InternalCustomerId": {
                                                "type": "string"
                                            },
                                            "mufgCustomerInd": {
                                                "type": "string"
                                            },
                                            "contactInfoValidatedDatetime": {
                                                "type": "string"
                                            },
                                            "userRole": {
                                                "type": "string"
                                            },
                                            "highRiskTransactionEmailInd": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "type": "json_object"
                        },
                        "ssl_identities": {
                            "trusted_identities": []
                        },
                        "method": "post",
                        "connection_config": {
                            "follow_redirect": false,
                            "request_timeout": 10,
                            "use_cookie_store": false,
                            "connection_timeout": 5
                        },
                        "body": {
                            "type": "expression",
                            "value": "`${{\n    \"loginId\":login_id\n}}`"
                        },
                        "uri": {
                            "type": "expression",
                            "value": "`${@customFunctions.mae_api_authscriptfunction_lookup_app_env_setting(\"oa2_search_online_user_details_url\")}`"
                        },
                        "authentication": {
                            "credentials_ref": {
                                "provider_type": "db",
                                "alias": "mae_wca_api_svc_wamae03",
                                "type": "credentials"
                            },
                            "type": "basic"
                        },
                        "logging_config": {
                            "outgoing_requests_config": "info",
                            "ok_response_config": "info",
                            "failed_response_config": "warning"
                        }
                    }
                },
                "enabled": true
            },
            "category": "provider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        },
        {
            "path": "tsasm:///authproviders/0017ef27-b6db-4d6b-8af8-fd00b08b52c9",
            "data": {
                "user_provider_id": "ef439f33-9a18-4c2b-a98a-fbab98694d7a",
                "method": "password",
                "config_id": "0017ef27-b6db-4d6b-8af8-fd00b08b52c9",
                "name": "WCA Auth API"
            },
            "category": "authprovider",
            "type": "dependency",
            "constraints": [
                {
                    "server_version": "6.1.3",
                    "type": "server_version"
                }
            ],
            "dependencies": []
        }
    ]
}